!function(l,i,s,a){function c(t,e){this.settings=null,this.options=l.extend({},c.Defaults,e),this.$element=l(t),this._handlers={},this._plugins={},this._supress={},this._current=null,this._speed=null,this._coordinates=[],this._breakpoint=null,this._width=null,this._items=[],this._clones=[],this._mergers=[],this._widths=[],this._invalidated={},this._pipe=[],this._drag={time:null,target:null,pointer:null,stage:{start:null,current:null},direction:null},this._states={current:{},tags:{initializing:["busy"],animating:["busy"],dragging:["interacting"]}},l.each(["onResize","onThrottledResize"],l.proxy(function(t,e){this._handlers[e]=l.proxy(this[e],this)},this)),l.each(c.Plugins,l.proxy(function(t,e){this._plugins[t.charAt(0).toLowerCase()+t.slice(1)]=new e(this)},this)),l.each(c.Workers,l.proxy(function(t,e){this._pipe.push({filter:e.filter,run:l.proxy(e.run,this)})},this)),this.setup(),this.initialize()}c.Defaults={items:3,loop:!1,center:!1,rewind:!1,checkVisibility:!0,mouseDrag:!0,touchDrag:!0,pullDrag:!0,freeDrag:!1,margin:0,stagePadding:0,merge:!1,mergeFit:!0,autoWidth:!1,startPosition:0,rtl:!1,smartSpeed:250,fluidSpeed:!1,dragEndSpeed:!1,responsive:{},responsiveRefreshRate:200,responsiveBaseElement:i,fallbackEasing:"swing",slideTransition:"",info:!1,nestedItemSelector:!1,itemElement:"div",stageElement:"div",refreshClass:"owl-refresh",loadedClass:"owl-loaded",loadingClass:"owl-loading",rtlClass:"owl-rtl",responsiveClass:"owl-responsive",dragClass:"owl-drag",itemClass:"owl-item",stageClass:"owl-stage",stageOuterClass:"owl-stage-outer",grabClass:"owl-grab"},c.Width={Default:"default",Inner:"inner",Outer:"outer"},c.Type={Event:"event",State:"state"},c.Plugins={},c.Workers=[{filter:["width","settings"],run:function(){this._width=this.$element.width()}},{filter:["width","items","settings"],run:function(t){t.current=this._items&&this._items[this.relative(this._current)]}},{filter:["items","settings"],run:function(){this.$stage.children(".cloned").remove()}},{filter:["width","items","settings"],run:function(t){var e=this.settings.margin||"",i=!this.settings.autoWidth,n=this.settings.rtl,s={width:"auto","margin-left":n?e:"","margin-right":n?"":e};i||this.$stage.children().css(s),t.css=s}},{filter:["width","items","settings"],run:function(t){var e=(this.width()/this.settings.items).toFixed(3)-this.settings.margin,i=null,n=this._items.length,s=!this.settings.autoWidth,o=[];for(t.items={merge:!1,width:e};n--;)i=this._mergers[n],i=this.settings.mergeFit&&Math.min(i,this.settings.items)||i,t.items.merge=1<i||t.items.merge,o[n]=s?e*i:this._items[n].width();this._widths=o}},{filter:["items","settings"],run:function(){var t=[],e=this._items,i=this.settings,n=Math.max(2*i.items,4),s=2*Math.ceil(e.length/2),o=i.loop&&e.length?i.rewind?n:Math.max(n,s):0,r="",a="";for(o/=2;0<o;)t.push(this.normalize(t.length/2,!0)),r+=e[t[t.length-1]][0].outerHTML,t.push(this.normalize(e.length-1-(t.length-1)/2,!0)),a=e[t[t.length-1]][0].outerHTML+a,--o;this._clones=t,l(r).addClass("cloned").appendTo(this.$stage),l(a).addClass("cloned").prependTo(this.$stage)}},{filter:["width","items","settings"],run:function(){for(var t=this.settings.rtl?1:-1,e=this._clones.length+this._items.length,i=-1,n=0,s=0,o=[];++i<e;)n=o[i-1]||0,s=this._widths[this.relative(i)]+this.settings.margin,o.push(n+s*t);this._coordinates=o}},{filter:["width","items","settings"],run:function(){var t=this.settings.stagePadding,e=this._coordinates,i={width:Math.ceil(Math.abs(e[e.length-1]))+2*t,"padding-left":t||"","padding-right":t||""};this.$stage.css(i)}},{filter:["width","items","settings"],run:function(t){var e=this._coordinates.length,i=!this.settings.autoWidth,n=this.$stage.children();if(i&&t.items.merge)for(;e--;)t.css.width=this._widths[this.relative(e)],n.eq(e).css(t.css);else i&&(t.css.width=t.items.width,n.css(t.css))}},{filter:["items"],run:function(){this._coordinates.length<1&&this.$stage.removeAttr("style")}},{filter:["width","items","settings"],run:function(t){t.current=t.current?this.$stage.children().index(t.current):0,t.current=Math.max(this.minimum(),Math.min(this.maximum(),t.current)),this.reset(t.current)}},{filter:["position"],run:function(){this.animate(this.coordinates(this._current))}},{filter:["width","position","items","settings"],run:function(){var t,e,i,n,s=this.settings.rtl?1:-1,o=2*this.settings.stagePadding,r=this.coordinates(this.current())+o,a=r+this.width()*s,l=[];for(i=0,n=this._coordinates.length;i<n;i++)t=this._coordinates[i-1]||0,e=Math.abs(this._coordinates[i])+o*s,(this.op(t,"<=",r)&&this.op(t,">",a)||this.op(e,"<",r)&&this.op(e,">",a))&&l.push(i);this.$stage.children(".active").removeClass("active"),this.$stage.children(":eq("+l.join("), :eq(")+")").addClass("active"),this.$stage.children(".center").removeClass("center"),this.settings.center&&this.$stage.children().eq(this.current()).addClass("center")}}],c.prototype.initializeStage=function(){this.$stage=this.$element.find("."+this.settings.stageClass),this.$stage.length||(this.$element.addClass(this.options.loadingClass),this.$stage=l("<"+this.settings.stageElement+">",{class:this.settings.stageClass}).wrap(l("<div/>",{class:this.settings.stageOuterClass})),this.$element.append(this.$stage.parent()))},c.prototype.initializeItems=function(){var t=this.$element.find(".owl-item");if(t.length)return this._items=t.get().map(function(t){return l(t)}),this._mergers=this._items.map(function(){return 1}),void this.refresh();this.replace(this.$element.children().not(this.$stage.parent())),this.isVisible()?this.refresh():this.invalidate("width"),this.$element.removeClass(this.options.loadingClass).addClass(this.options.loadedClass)},c.prototype.initialize=function(){var t,e,i;this.enter("initializing"),this.trigger("initialize"),this.$element.toggleClass(this.settings.rtlClass,this.settings.rtl),this.settings.autoWidth&&!this.is("pre-loading")&&(t=this.$element.find("img"),e=this.settings.nestedItemSelector?"."+this.settings.nestedItemSelector:a,i=this.$element.children(e).width(),t.length&&i<=0&&this.preloadAutoWidthImages(t));this.initializeStage(),this.initializeItems(),this.registerEventHandlers(),this.leave("initializing"),this.trigger("initialized")},c.prototype.isVisible=function(){return!this.settings.checkVisibility||this.$element.is(":visible")},c.prototype.setup=function(){var e=this.viewport(),t=this.options.responsive,i=-1,n=null;t?(l.each(t,function(t){t<=e&&i<t&&(i=Number(t))}),"function"==typeof(n=l.extend({},this.options,t[i])).stagePadding&&(n.stagePadding=n.stagePadding()),delete n.responsive,n.responsiveClass&&this.$element.attr("class",this.$element.attr("class").replace(new RegExp("("+this.options.responsiveClass+"-)\\S+\\s","g"),"$1"+i))):n=l.extend({},this.options),this.trigger("change",{property:{name:"settings",value:n}}),this._breakpoint=i,this.settings=n,this.invalidate("settings"),this.trigger("changed",{property:{name:"settings",value:this.settings}})},c.prototype.optionsLogic=function(){this.settings.autoWidth&&(this.settings.stagePadding=!1,this.settings.merge=!1)},c.prototype.prepare=function(t){var e=this.trigger("prepare",{content:t});return e.data||(e.data=l("<"+this.settings.itemElement+"/>").addClass(this.options.itemClass).append(t)),this.trigger("prepared",{content:e.data}),e.data},c.prototype.update=function(){for(var t=0,e=this._pipe.length,i=l.proxy(function(t){return this[t]},this._invalidated),n={};t<e;)(this._invalidated.all||0<l.grep(this._pipe[t].filter,i).length)&&this._pipe[t].run(n),t++;this._invalidated={},this.is("valid")||this.enter("valid")},c.prototype.width=function(t){switch(t=t||c.Width.Default){case c.Width.Inner:case c.Width.Outer:return this._width;default:return this._width-2*this.settings.stagePadding+this.settings.margin}},c.prototype.refresh=function(){this.enter("refreshing"),this.trigger("refresh"),this.setup(),this.optionsLogic(),this.$element.addClass(this.options.refreshClass),this.update(),this.$element.removeClass(this.options.refreshClass),this.leave("refreshing"),this.trigger("refreshed")},c.prototype.onThrottledResize=function(){i.clearTimeout(this.resizeTimer),this.resizeTimer=i.setTimeout(this._handlers.onResize,this.settings.responsiveRefreshRate)},c.prototype.onResize=function(){return!!this._items.length&&this._width!==this.$element.width()&&!!this.isVisible()&&(this.enter("resizing"),this.trigger("resize").isDefaultPrevented()?(this.leave("resizing"),!1):(this.invalidate("width"),this.refresh(),this.leave("resizing"),void this.trigger("resized")))},c.prototype.registerEventHandlers=function(){l.support.transition&&this.$stage.on(l.support.transition.end+".owl.core",l.proxy(this.onTransitionEnd,this)),!1!==this.settings.responsive&&this.on(i,"resize",this._handlers.onThrottledResize),this.settings.mouseDrag&&(this.$element.addClass(this.options.dragClass),this.$stage.on("mousedown.owl.core",l.proxy(this.onDragStart,this)),this.$stage.on("dragstart.owl.core selectstart.owl.core",function(){return!1})),this.settings.touchDrag&&(this.$stage.on("touchstart.owl.core",l.proxy(this.onDragStart,this)),this.$stage.on("touchcancel.owl.core",l.proxy(this.onDragEnd,this)))},c.prototype.onDragStart=function(t){var e=null;3!==t.which&&(e=l.support.transform?{x:(e=this.$stage.css("transform").replace(/.*\(|\)| /g,"").split(","))[16===e.length?12:4],y:e[16===e.length?13:5]}:(e=this.$stage.position(),{x:this.settings.rtl?e.left+this.$stage.width()-this.width()+this.settings.margin:e.left,y:e.top}),this.is("animating")&&(l.support.transform?this.animate(e.x):this.$stage.stop(),this.invalidate("position")),this.$element.toggleClass(this.options.grabClass,"mousedown"===t.type),this.speed(0),this._drag.time=(new Date).getTime(),this._drag.target=l(t.target),this._drag.stage.start=e,this._drag.stage.current=e,this._drag.pointer=this.pointer(t),l(s).on("mouseup.owl.core touchend.owl.core",l.proxy(this.onDragEnd,this)),l(s).one("mousemove.owl.core touchmove.owl.core",l.proxy(function(t){var e=this.difference(this._drag.pointer,this.pointer(t));l(s).on("mousemove.owl.core touchmove.owl.core",l.proxy(this.onDragMove,this)),Math.abs(e.x)<Math.abs(e.y)&&this.is("valid")||(t.preventDefault(),this.enter("dragging"),this.trigger("drag"))},this)))},c.prototype.onDragMove=function(t){var e=null,i=null,n=null,s=this.difference(this._drag.pointer,this.pointer(t)),o=this.difference(this._drag.stage.start,s);this.is("dragging")&&(t.preventDefault(),this.settings.loop?(e=this.coordinates(this.minimum()),i=this.coordinates(this.maximum()+1)-e,o.x=((o.x-e)%i+i)%i+e):(e=this.settings.rtl?this.coordinates(this.maximum()):this.coordinates(this.minimum()),i=this.settings.rtl?this.coordinates(this.minimum()):this.coordinates(this.maximum()),n=this.settings.pullDrag?-1*s.x/5:0,o.x=Math.max(Math.min(o.x,e+n),i+n)),this._drag.stage.current=o,this.animate(o.x))},c.prototype.onDragEnd=function(t){var e=this.difference(this._drag.pointer,this.pointer(t)),i=this._drag.stage.current,n=0<e.x^this.settings.rtl?"left":"right";l(s).off(".owl.core"),this.$element.removeClass(this.options.grabClass),(0!==e.x&&this.is("dragging")||!this.is("valid"))&&(this.speed(this.settings.dragEndSpeed||this.settings.smartSpeed),this.current(this.closest(i.x,0!==e.x?n:this._drag.direction)),this.invalidate("position"),this.update(),this._drag.direction=n,(3<Math.abs(e.x)||300<(new Date).getTime()-this._drag.time)&&this._drag.target.one("click.owl.core",function(){return!1})),this.is("dragging")&&(this.leave("dragging"),this.trigger("dragged"))},c.prototype.closest=function(i,n){var s=-1,o=this.width(),r=this.coordinates();return this.settings.freeDrag||l.each(r,l.proxy(function(t,e){return"left"===n&&e-30<i&&i<e+30?s=t:"right"===n&&e-o-30<i&&i<e-o+30?s=t+1:this.op(i,"<",e)&&this.op(i,">",r[t+1]!==a?r[t+1]:e-o)&&(s="left"===n?t+1:t),-1===s},this)),this.settings.loop||(this.op(i,">",r[this.minimum()])?s=i=this.minimum():this.op(i,"<",r[this.maximum()])&&(s=i=this.maximum())),s},c.prototype.animate=function(t){var e=0<this.speed();this.is("animating")&&this.onTransitionEnd(),e&&(this.enter("animating"),this.trigger("translate")),l.support.transform3d&&l.support.transition?this.$stage.css({transform:"translate3d("+t+"px,0px,0px)",transition:this.speed()/1e3+"s"+(this.settings.slideTransition?" "+this.settings.slideTransition:"")}):e?this.$stage.animate({left:t+"px"},this.speed(),this.settings.fallbackEasing,l.proxy(this.onTransitionEnd,this)):this.$stage.css({left:t+"px"})},c.prototype.is=function(t){return this._states.current[t]&&0<this._states.current[t]},c.prototype.current=function(t){if(t===a)return this._current;if(0===this._items.length)return a;if(t=this.normalize(t),this._current!==t){var e=this.trigger("change",{property:{name:"position",value:t}});e.data!==a&&(t=this.normalize(e.data)),this._current=t,this.invalidate("position"),this.trigger("changed",{property:{name:"position",value:this._current}})}return this._current},c.prototype.invalidate=function(t){return"string"===l.type(t)&&(this._invalidated[t]=!0,this.is("valid")&&this.leave("valid")),l.map(this._invalidated,function(t,e){return e})},c.prototype.reset=function(t){(t=this.normalize(t))!==a&&(this._speed=0,this._current=t,this.suppress(["translate","translated"]),this.animate(this.coordinates(t)),this.release(["translate","translated"]))},c.prototype.normalize=function(t,e){var i=this._items.length,n=e?0:this._clones.length;return!this.isNumeric(t)||i<1?t=a:(t<0||i+n<=t)&&(t=((t-n/2)%i+i)%i+n/2),t},c.prototype.relative=function(t){return t-=this._clones.length/2,this.normalize(t,!0)},c.prototype.maximum=function(t){var e,i,n,s=this.settings,o=this._coordinates.length;if(s.loop)o=this._clones.length/2+this._items.length-1;else if(s.autoWidth||s.merge){if(e=this._items.length)for(i=this._items[--e].width(),n=this.$element.width();e--&&!((i+=this._items[e].width()+this.settings.margin)>n););o=e+1}else o=s.center?this._items.length-1:this._items.length-s.items;return t&&(o-=this._clones.length/2),Math.max(o,0)},c.prototype.minimum=function(t){return t?0:this._clones.length/2},c.prototype.items=function(t){return t===a?this._items.slice():(t=this.normalize(t,!0),this._items[t])},c.prototype.mergers=function(t){return t===a?this._mergers.slice():(t=this.normalize(t,!0),this._mergers[t])},c.prototype.clones=function(i){function n(t){return t%2==0?s+t/2:e-(t+1)/2}var e=this._clones.length/2,s=e+this._items.length;return i===a?l.map(this._clones,function(t,e){return n(e)}):l.map(this._clones,function(t,e){return t===i?n(e):null})},c.prototype.speed=function(t){return t!==a&&(this._speed=t),this._speed},c.prototype.coordinates=function(t){var e,i=1,n=t-1;return t===a?l.map(this._coordinates,l.proxy(function(t,e){return this.coordinates(e)},this)):(this.settings.center?(this.settings.rtl&&(i=-1,n=t+1),e=this._coordinates[t],e+=(this.width()-e+(this._coordinates[n]||0))/2*i):e=this._coordinates[n]||0,e=Math.ceil(e))},c.prototype.duration=function(t,e,i){return 0===i?0:Math.min(Math.max(Math.abs(e-t),1),6)*Math.abs(i||this.settings.smartSpeed)},c.prototype.to=function(t,e){var i=this.current(),n=null,s=t-this.relative(i),o=(0<s)-(s<0),r=this._items.length,a=this.minimum(),l=this.maximum();this.settings.loop?(!this.settings.rewind&&Math.abs(s)>r/2&&(s+=-1*o*r),(n=(((t=i+s)-a)%r+r)%r+a)!==t&&n-s<=l&&0<n-s&&(i=n-s,t=n,this.reset(i))):t=this.settings.rewind?(t%(l+=1)+l)%l:Math.max(a,Math.min(l,t)),this.speed(this.duration(i,t,e)),this.current(t),this.isVisible()&&this.update()},c.prototype.next=function(t){t=t||!1,this.to(this.relative(this.current())+1,t)},c.prototype.prev=function(t){t=t||!1,this.to(this.relative(this.current())-1,t)},c.prototype.onTransitionEnd=function(t){if(t!==a&&(t.stopPropagation(),(t.target||t.srcElement||t.originalTarget)!==this.$stage.get(0)))return!1;this.leave("animating"),this.trigger("translated")},c.prototype.viewport=function(){var t;return this.options.responsiveBaseElement!==i?t=l(this.options.responsiveBaseElement).width():i.innerWidth?t=i.innerWidth:s.documentElement&&s.documentElement.clientWidth?t=s.documentElement.clientWidth:console.warn("Can not detect viewport width."),t},c.prototype.replace=function(t){this.$stage.empty(),this._items=[],t=t&&(t instanceof jQuery?t:l(t)),this.settings.nestedItemSelector&&(t=t.find("."+this.settings.nestedItemSelector)),t.filter(function(){return 1===this.nodeType}).each(l.proxy(function(t,e){e=this.prepare(e),this.$stage.append(e),this._items.push(e),this._mergers.push(+e.find("[data-merge]").addBack("[data-merge]").attr("data-merge")||1)},this)),this.reset(this.isNumeric(this.settings.startPosition)?this.settings.startPosition:0),this.invalidate("items")},c.prototype.add=function(t,e){var i=this.relative(this._current);e=e===a?this._items.length:this.normalize(e,!0),t=t instanceof jQuery?t:l(t),this.trigger("add",{content:t,position:e}),t=this.prepare(t),0===this._items.length||e===this._items.length?(0===this._items.length&&this.$stage.append(t),0!==this._items.length&&this._items[e-1].after(t),this._items.push(t),this._mergers.push(+t.find("[data-merge]").addBack("[data-merge]").attr("data-merge")||1)):(this._items[e].before(t),this._items.splice(e,0,t),this._mergers.splice(e,0,+t.find("[data-merge]").addBack("[data-merge]").attr("data-merge")||1)),this._items[i]&&this.reset(this._items[i].index()),this.invalidate("items"),this.trigger("added",{content:t,position:e})},c.prototype.remove=function(t){(t=this.normalize(t,!0))!==a&&(this.trigger("remove",{content:this._items[t],position:t}),this._items[t].remove(),this._items.splice(t,1),this._mergers.splice(t,1),this.invalidate("items"),this.trigger("removed",{content:null,position:t}))},c.prototype.preloadAutoWidthImages=function(t){t.each(l.proxy(function(t,e){this.enter("pre-loading"),e=l(e),l(new Image).one("load",l.proxy(function(t){e.attr("src",t.target.src),e.css("opacity",1),this.leave("pre-loading"),this.is("pre-loading")||this.is("initializing")||this.refresh()},this)).attr("src",e.attr("src")||e.attr("data-src")||e.attr("data-src-retina"))},this))},c.prototype.destroy=function(){for(var t in this.$element.off(".owl.core"),this.$stage.off(".owl.core"),l(s).off(".owl.core"),!1!==this.settings.responsive&&(i.clearTimeout(this.resizeTimer),this.off(i,"resize",this._handlers.onThrottledResize)),this._plugins)this._plugins[t].destroy();this.$stage.children(".cloned").remove(),this.$stage.unwrap(),this.$stage.children().contents().unwrap(),this.$stage.children().unwrap(),this.$stage.remove(),this.$element.removeClass(this.options.refreshClass).removeClass(this.options.loadingClass).removeClass(this.options.loadedClass).removeClass(this.options.rtlClass).removeClass(this.options.dragClass).removeClass(this.options.grabClass).attr("class",this.$element.attr("class").replace(new RegExp(this.options.responsiveClass+"-\\S+\\s","g"),"")).removeData("owl.carousel")},c.prototype.op=function(t,e,i){var n=this.settings.rtl;switch(e){case"<":return n?i<t:t<i;case">":return n?t<i:i<t;case">=":return n?t<=i:i<=t;case"<=":return n?i<=t:t<=i}},c.prototype.on=function(t,e,i,n){t.addEventListener?t.addEventListener(e,i,n):t.attachEvent&&t.attachEvent("on"+e,i)},c.prototype.off=function(t,e,i,n){t.removeEventListener?t.removeEventListener(e,i,n):t.detachEvent&&t.detachEvent("on"+e,i)},c.prototype.trigger=function(t,e,i,n,s){var o={item:{count:this._items.length,index:this.current()}},r=l.camelCase(l.grep(["on",t,i],function(t){return t}).join("-").toLowerCase()),a=l.Event([t,"owl",i||"carousel"].join(".").toLowerCase(),l.extend({relatedTarget:this},o,e));return this._supress[t]||(l.each(this._plugins,function(t,e){e.onTrigger&&e.onTrigger(a)}),this.register({type:c.Type.Event,name:t}),this.$element.trigger(a),this.settings&&"function"==typeof this.settings[r]&&this.settings[r].call(this,a)),a},c.prototype.enter=function(t){l.each([t].concat(this._states.tags[t]||[]),l.proxy(function(t,e){this._states.current[e]===a&&(this._states.current[e]=0),this._states.current[e]++},this))},c.prototype.leave=function(t){l.each([t].concat(this._states.tags[t]||[]),l.proxy(function(t,e){this._states.current[e]--},this))},c.prototype.register=function(i){if(i.type===c.Type.Event){if(l.event.special[i.name]||(l.event.special[i.name]={}),!l.event.special[i.name].owl){var e=l.event.special[i.name]._default;l.event.special[i.name]._default=function(t){return!e||!e.apply||t.namespace&&-1!==t.namespace.indexOf("owl")?t.namespace&&-1<t.namespace.indexOf("owl"):e.apply(this,arguments)},l.event.special[i.name].owl=!0}}else i.type===c.Type.State&&(this._states.tags[i.name]?this._states.tags[i.name]=this._states.tags[i.name].concat(i.tags):this._states.tags[i.name]=i.tags,this._states.tags[i.name]=l.grep(this._states.tags[i.name],l.proxy(function(t,e){return l.inArray(t,this._states.tags[i.name])===e},this)))},c.prototype.suppress=function(t){l.each(t,l.proxy(function(t,e){this._supress[e]=!0},this))},c.prototype.release=function(t){l.each(t,l.proxy(function(t,e){delete this._supress[e]},this))},c.prototype.pointer=function(t){var e={x:null,y:null};return(t=(t=t.originalEvent||t||i.event).touches&&t.touches.length?t.touches[0]:t.changedTouches&&t.changedTouches.length?t.changedTouches[0]:t).pageX?(e.x=t.pageX,e.y=t.pageY):(e.x=t.clientX,e.y=t.clientY),e},c.prototype.isNumeric=function(t){return!isNaN(parseFloat(t))},c.prototype.difference=function(t,e){return{x:t.x-e.x,y:t.y-e.y}},l.fn.owlCarousel=function(e){var n=Array.prototype.slice.call(arguments,1);return this.each(function(){var t=l(this),i=t.data("owl.carousel");i||(i=new c(this,"object"==typeof e&&e),t.data("owl.carousel",i),l.each(["next","prev","to","destroy","refresh","replace","add","remove"],function(t,e){i.register({type:c.Type.Event,name:e}),i.$element.on(e+".owl.carousel.core",l.proxy(function(t){t.namespace&&t.relatedTarget!==this&&(this.suppress([e]),i[e].apply(this,[].slice.call(arguments,1)),this.release([e]))},i))})),"string"==typeof e&&"_"!==e.charAt(0)&&i[e].apply(i,n)})},l.fn.owlCarousel.Constructor=c}(window.Zepto||window.jQuery,window,document),function(e,i){var n=function(t){this._core=t,this._interval=null,this._visible=null,this._handlers={"initialized.owl.carousel":e.proxy(function(t){t.namespace&&this._core.settings.autoRefresh&&this.watch()},this)},this._core.options=e.extend({},n.Defaults,this._core.options),this._core.$element.on(this._handlers)};n.Defaults={autoRefresh:!0,autoRefreshInterval:500},n.prototype.watch=function(){this._interval||(this._visible=this._core.isVisible(),this._interval=i.setInterval(e.proxy(this.refresh,this),this._core.settings.autoRefreshInterval))},n.prototype.refresh=function(){this._core.isVisible()!==this._visible&&(this._visible=!this._visible,this._core.$element.toggleClass("owl-hidden",!this._visible),this._visible&&this._core.invalidate("width")&&this._core.refresh())},n.prototype.destroy=function(){var t,e;for(t in i.clearInterval(this._interval),this._handlers)this._core.$element.off(t,this._handlers[t]);for(e in Object.getOwnPropertyNames(this))"function"!=typeof this[e]&&(this[e]=null)},e.fn.owlCarousel.Constructor.Plugins.AutoRefresh=n}(window.Zepto||window.jQuery,window,document),function(a,o){var e=function(t){this._core=t,this._loaded=[],this._handlers={"initialized.owl.carousel change.owl.carousel resized.owl.carousel":a.proxy(function(t){if(t.namespace&&this._core.settings&&this._core.settings.lazyLoad&&(t.property&&"position"==t.property.name||"initialized"==t.type)){var e=this._core.settings,i=e.center&&Math.ceil(e.items/2)||e.items,n=e.center&&-1*i||0,s=(t.property&&void 0!==t.property.value?t.property.value:this._core.current())+n,o=this._core.clones().length,r=a.proxy(function(t,e){this.load(e)},this);for(0<e.lazyLoadEager&&(i+=e.lazyLoadEager,e.loop&&(s-=e.lazyLoadEager,i++));n++<i;)this.load(o/2+this._core.relative(s)),o&&a.each(this._core.clones(this._core.relative(s)),r),s++}},this)},this._core.options=a.extend({},e.Defaults,this._core.options),this._core.$element.on(this._handlers)};e.Defaults={lazyLoad:!1,lazyLoadEager:0},e.prototype.load=function(t){var e=this._core.$stage.children().eq(t),i=e&&e.find(".owl-lazy");!i||-1<a.inArray(e.get(0),this._loaded)||(i.each(a.proxy(function(t,e){var i,n=a(e),s=1<o.devicePixelRatio&&n.attr("data-src-retina")||n.attr("data-src")||n.attr("data-srcset");this._core.trigger("load",{element:n,url:s},"lazy"),n.is("img")?n.one("load.owl.lazy",a.proxy(function(){n.css("opacity",1),this._core.trigger("loaded",{element:n,url:s},"lazy")},this)).attr("src",s):n.is("source")?n.one("load.owl.lazy",a.proxy(function(){this._core.trigger("loaded",{element:n,url:s},"lazy")},this)).attr("srcset",s):((i=new Image).onload=a.proxy(function(){n.css({"background-image":'url("'+s+'")',opacity:"1"}),this._core.trigger("loaded",{element:n,url:s},"lazy")},this),i.src=s)},this)),this._loaded.push(e.get(0)))},e.prototype.destroy=function(){var t,e;for(t in this.handlers)this._core.$element.off(t,this.handlers[t]);for(e in Object.getOwnPropertyNames(this))"function"!=typeof this[e]&&(this[e]=null)},a.fn.owlCarousel.Constructor.Plugins.Lazy=e}(window.Zepto||window.jQuery,window,document),function(r,i){var n=function(t){this._core=t,this._previousHeight=null,this._handlers={"initialized.owl.carousel refreshed.owl.carousel":r.proxy(function(t){t.namespace&&this._core.settings.autoHeight&&this.update()},this),"changed.owl.carousel":r.proxy(function(t){t.namespace&&this._core.settings.autoHeight&&"position"===t.property.name&&this.update()},this),"loaded.owl.lazy":r.proxy(function(t){t.namespace&&this._core.settings.autoHeight&&t.element.closest("."+this._core.settings.itemClass).index()===this._core.current()&&this.update()},this)},this._core.options=r.extend({},n.Defaults,this._core.options),this._core.$element.on(this._handlers),this._intervalId=null;var e=this;r(i).on("load",function(){e._core.settings.autoHeight&&e.update()}),r(i).resize(function(){e._core.settings.autoHeight&&(null!=e._intervalId&&clearTimeout(e._intervalId),e._intervalId=setTimeout(function(){e.update()},250))})};n.Defaults={autoHeight:!1,autoHeightClass:"owl-height"},n.prototype.update=function(){var t=this._core._current,e=t+this._core.settings.items,i=this._core.settings.lazyLoad,n=this._core.$stage.children().toArray().slice(t,e),s=[],o=0;r.each(n,function(t,e){s.push(r(e).height())}),(o=Math.max.apply(null,s))<=1&&i&&this._previousHeight&&(o=this._previousHeight),this._previousHeight=o,this._core.$stage.parent().height(o).addClass(this._core.settings.autoHeightClass)},n.prototype.destroy=function(){var t,e;for(t in this._handlers)this._core.$element.off(t,this._handlers[t]);for(e in Object.getOwnPropertyNames(this))"function"!=typeof this[e]&&(this[e]=null)},r.fn.owlCarousel.Constructor.Plugins.AutoHeight=n}(window.Zepto||window.jQuery,window,document),function(h,e){var i=function(t){this._core=t,this._videos={},this._playing=null,this._handlers={"initialized.owl.carousel":h.proxy(function(t){t.namespace&&this._core.register({type:"state",name:"playing",tags:["interacting"]})},this),"resize.owl.carousel":h.proxy(function(t){t.namespace&&this._core.settings.video&&this.isInFullScreen()&&t.preventDefault()},this),"refreshed.owl.carousel":h.proxy(function(t){t.namespace&&this._core.is("resizing")&&this._core.$stage.find(".cloned .owl-video-frame").remove()},this),"changed.owl.carousel":h.proxy(function(t){t.namespace&&"position"===t.property.name&&this._playing&&this.stop()},this),"prepared.owl.carousel":h.proxy(function(t){if(t.namespace){var e=h(t.content).find(".owl-video");e.length&&(e.css("display","none"),this.fetch(e,h(t.content)))}},this)},this._core.options=h.extend({},i.Defaults,this._core.options),this._core.$element.on(this._handlers),this._core.$element.on("click.owl.video",".owl-video-play-icon",h.proxy(function(t){this.play(t)},this))};i.Defaults={video:!1,videoHeight:!1,videoWidth:!1},i.prototype.fetch=function(t,e){var i=t.attr("data-vimeo-id")?"vimeo":t.attr("data-vzaar-id")?"vzaar":"youtube",n=t.attr("data-vimeo-id")||t.attr("data-youtube-id")||t.attr("data-vzaar-id"),s=t.attr("data-width")||this._core.settings.videoWidth,o=t.attr("data-height")||this._core.settings.videoHeight,r=t.attr("href");if(!r)throw new Error("Missing video URL.");if(-1<(n=r.match(/(http:|https:|)\/\/(player.|www.|app.)?(vimeo\.com|youtu(be\.com|\.be|be\.googleapis\.com|be\-nocookie\.com)|vzaar\.com)\/(video\/|videos\/|embed\/|channels\/.+\/|groups\/.+\/|watch\?v=|v\/)?([A-Za-z0-9._%-]*)(\&\S+)?/))[3].indexOf("youtu"))i="youtube";else if(-1<n[3].indexOf("vimeo"))i="vimeo";else{if(!(-1<n[3].indexOf("vzaar")))throw new Error("Video URL not supported.");i="vzaar"}n=n[6],this._videos[r]={type:i,id:n,width:s,height:o},e.attr("data-video",r),this.thumbnail(t,this._videos[r])},i.prototype.thumbnail=function(e,t){function i(t){n=c.lazyLoad?h("<div/>",{class:"owl-video-tn "+l,srcType:t}):h("<div/>",{class:"owl-video-tn",style:"opacity:1;background-image:url("+t+")"}),e.after(n),e.after('<div class="owl-video-play-icon"></div>')}var n,s,o=t.width&&t.height?"width:"+t.width+"px;height:"+t.height+"px;":"",r=e.find("img"),a="src",l="",c=this._core.settings;if(e.wrap(h("<div/>",{class:"owl-video-wrapper",style:o})),this._core.settings.lazyLoad&&(a="data-src",l="owl-lazy"),r.length)return i(r.attr(a)),r.remove(),!1;"youtube"===t.type?(s="//img.youtube.com/vi/"+t.id+"/hqdefault.jpg",i(s)):"vimeo"===t.type?h.ajax({type:"GET",url:"//vimeo.com/api/v2/video/"+t.id+".json",jsonp:"callback",dataType:"jsonp",success:function(t){s=t[0].thumbnail_large,i(s)}}):"vzaar"===t.type&&h.ajax({type:"GET",url:"//vzaar.com/api/videos/"+t.id+".json",jsonp:"callback",dataType:"jsonp",success:function(t){s=t.framegrab_url,i(s)}})},i.prototype.stop=function(){this._core.trigger("stop",null,"video"),this._playing.find(".owl-video-frame").remove(),this._playing.removeClass("owl-video-playing"),this._playing=null,this._core.leave("playing"),this._core.trigger("stopped",null,"video")},i.prototype.play=function(t){var e,i=h(t.target).closest("."+this._core.settings.itemClass),n=this._videos[i.attr("data-video")],s=n.width||"100%",o=n.height||this._core.$stage.height();this._playing||(this._core.enter("playing"),this._core.trigger("play",null,"video"),i=this._core.items(this._core.relative(i.index())),this._core.reset(i.index()),(e=h('<iframe frameborder="0" allowfullscreen mozallowfullscreen webkitAllowFullScreen ></iframe>')).attr("height",o),e.attr("width",s),"youtube"===n.type?e.attr("src","//www.youtube.com/embed/"+n.id+"?autoplay=1&rel=0&v="+n.id):"vimeo"===n.type?e.attr("src","//player.vimeo.com/video/"+n.id+"?autoplay=1"):"vzaar"===n.type&&e.attr("src","//view.vzaar.com/"+n.id+"/player?autoplay=true"),h(e).wrap('<div class="owl-video-frame" />').insertAfter(i.find(".owl-video")),this._playing=i.addClass("owl-video-playing"))},i.prototype.isInFullScreen=function(){var t=e.fullscreenElement||e.mozFullScreenElement||e.webkitFullscreenElement;return t&&h(t).parent().hasClass("owl-video-frame")},i.prototype.destroy=function(){var t,e;for(t in this._core.$element.off("click.owl.video"),this._handlers)this._core.$element.off(t,this._handlers[t]);for(e in Object.getOwnPropertyNames(this))"function"!=typeof this[e]&&(this[e]=null)},h.fn.owlCarousel.Constructor.Plugins.Video=i}(window.Zepto||window.jQuery,(window,document)),function(r){var e=function(t){this.core=t,this.core.options=r.extend({},e.Defaults,this.core.options),this.swapping=!0,this.previous=void 0,this.next=void 0,this.handlers={"change.owl.carousel":r.proxy(function(t){t.namespace&&"position"==t.property.name&&(this.previous=this.core.current(),this.next=t.property.value)},this),"drag.owl.carousel dragged.owl.carousel translated.owl.carousel":r.proxy(function(t){t.namespace&&(this.swapping="translated"==t.type)},this),"translate.owl.carousel":r.proxy(function(t){t.namespace&&this.swapping&&(this.core.options.animateOut||this.core.options.animateIn)&&this.swap()},this)},this.core.$element.on(this.handlers)};e.Defaults={animateOut:!1,animateIn:!1},e.prototype.swap=function(){if(1===this.core.settings.items&&r.support.animation&&r.support.transition){this.core.speed(0);var t,e=r.proxy(this.clear,this),i=this.core.$stage.children().eq(this.previous),n=this.core.$stage.children().eq(this.next),s=this.core.settings.animateIn,o=this.core.settings.animateOut;this.core.current()!==this.previous&&(o&&(t=this.core.coordinates(this.previous)-this.core.coordinates(this.next),i.one(r.support.animation.end,e).css({left:t+"px"}).addClass("animated owl-animated-out").addClass(o)),s&&n.one(r.support.animation.end,e).addClass("animated owl-animated-in").addClass(s))}},e.prototype.clear=function(t){r(t.target).css({left:""}).removeClass("animated owl-animated-out owl-animated-in").removeClass(this.core.settings.animateIn).removeClass(this.core.settings.animateOut),this.core.onTransitionEnd()},e.prototype.destroy=function(){var t,e;for(t in this.handlers)this.core.$element.off(t,this.handlers[t]);for(e in Object.getOwnPropertyNames(this))"function"!=typeof this[e]&&(this[e]=null)},r.fn.owlCarousel.Constructor.Plugins.Animate=e}(window.Zepto||window.jQuery,(window,document)),function(n,s,e){var i=function(t){this._core=t,this._call=null,this._time=0,this._timeout=0,this._paused=!0,this._handlers={"changed.owl.carousel":n.proxy(function(t){t.namespace&&"settings"===t.property.name?this._core.settings.autoplay?this.play():this.stop():t.namespace&&"position"===t.property.name&&this._paused&&(this._time=0)},this),"initialized.owl.carousel":n.proxy(function(t){t.namespace&&this._core.settings.autoplay&&this.play()},this),"play.owl.autoplay":n.proxy(function(t,e,i){t.namespace&&this.play(e,i)},this),"stop.owl.autoplay":n.proxy(function(t){t.namespace&&this.stop()},this),"mouseover.owl.autoplay":n.proxy(function(){this._core.settings.autoplayHoverPause&&this._core.is("rotating")&&this.pause()},this),"mouseleave.owl.autoplay":n.proxy(function(){this._core.settings.autoplayHoverPause&&this._core.is("rotating")&&this.play()},this),"touchstart.owl.core":n.proxy(function(){this._core.settings.autoplayHoverPause&&this._core.is("rotating")&&this.pause()},this),"touchend.owl.core":n.proxy(function(){this._core.settings.autoplayHoverPause&&this.play()},this)},this._core.$element.on(this._handlers),this._core.options=n.extend({},i.Defaults,this._core.options)};i.Defaults={autoplay:!1,autoplayTimeout:5e3,autoplayHoverPause:!1,autoplaySpeed:!1},i.prototype._next=function(t){this._call=s.setTimeout(n.proxy(this._next,this,t),this._timeout*(Math.round(this.read()/this._timeout)+1)-this.read()),this._core.is("interacting")||e.hidden||this._core.next(t||this._core.settings.autoplaySpeed)},i.prototype.read=function(){return(new Date).getTime()-this._time},i.prototype.play=function(t,e){var i;this._core.is("rotating")||this._core.enter("rotating"),t=t||this._core.settings.autoplayTimeout,i=Math.min(this._time%(this._timeout||t),t),this._paused?(this._time=this.read(),this._paused=!1):s.clearTimeout(this._call),this._time+=this.read()%t-i,this._timeout=t,this._call=s.setTimeout(n.proxy(this._next,this,e),t-i)},i.prototype.stop=function(){this._core.is("rotating")&&(this._time=0,this._paused=!0,s.clearTimeout(this._call),this._core.leave("rotating"))},i.prototype.pause=function(){this._core.is("rotating")&&!this._paused&&(this._time=this.read(),this._paused=!0,s.clearTimeout(this._call))},i.prototype.destroy=function(){var t,e;for(t in this.stop(),this._handlers)this._core.$element.off(t,this._handlers[t]);for(e in Object.getOwnPropertyNames(this))"function"!=typeof this[e]&&(this[e]=null)},n.fn.owlCarousel.Constructor.Plugins.autoplay=i}(window.Zepto||window.jQuery,window,document),function(o){"use strict";var e=function(t){this._core=t,this._initialized=!1,this._pages=[],this._controls={},this._templates=[],this.$element=this._core.$element,this._overrides={next:this._core.next,prev:this._core.prev,to:this._core.to},this._handlers={"prepared.owl.carousel":o.proxy(function(t){t.namespace&&this._core.settings.dotsData&&this._templates.push('<div class="'+this._core.settings.dotClass+'">'+o(t.content).find("[data-dot]").addBack("[data-dot]").attr("data-dot")+"</div>")},this),"added.owl.carousel":o.proxy(function(t){t.namespace&&this._core.settings.dotsData&&this._templates.splice(t.position,0,this._templates.pop())},this),"remove.owl.carousel":o.proxy(function(t){t.namespace&&this._core.settings.dotsData&&this._templates.splice(t.position,1)},this),"changed.owl.carousel":o.proxy(function(t){t.namespace&&"position"==t.property.name&&this.draw()},this),"initialized.owl.carousel":o.proxy(function(t){t.namespace&&!this._initialized&&(this._core.trigger("initialize",null,"navigation"),this.initialize(),this.update(),this.draw(),this._initialized=!0,this._core.trigger("initialized",null,"navigation"))},this),"refreshed.owl.carousel":o.proxy(function(t){t.namespace&&this._initialized&&(this._core.trigger("refresh",null,"navigation"),this.update(),this.draw(),this._core.trigger("refreshed",null,"navigation"))},this)},this._core.options=o.extend({},e.Defaults,this._core.options),this.$element.on(this._handlers)};e.Defaults={nav:!1,navText:['<span aria-label="Previous">&#x2039;</span>','<span aria-label="Next">&#x203a;</span>'],navSpeed:!1,navElement:'button type="button" role="presentation"',navContainer:!1,navContainerClass:"owl-nav",navClass:["owl-prev","owl-next"],slideBy:1,dotClass:"owl-dot",dotsClass:"owl-dots",dots:!0,dotsEach:!1,dotsData:!1,dotsSpeed:!1,dotsContainer:!1},e.prototype.initialize=function(){var t,i=this._core.settings;for(t in this._controls.$relative=(i.navContainer?o(i.navContainer):o("<div>").addClass(i.navContainerClass).appendTo(this.$element)).addClass("disabled"),this._controls.$previous=o("<"+i.navElement+">").addClass(i.navClass[0]).html(i.navText[0]).prependTo(this._controls.$relative).on("click",o.proxy(function(t){this.prev(i.navSpeed)},this)),this._controls.$next=o("<"+i.navElement+">").addClass(i.navClass[1]).html(i.navText[1]).appendTo(this._controls.$relative).on("click",o.proxy(function(t){this.next(i.navSpeed)},this)),i.dotsData||(this._templates=[o('<button role="button">').addClass(i.dotClass).append(o("<span>")).prop("outerHTML")]),this._controls.$absolute=(i.dotsContainer?o(i.dotsContainer):o("<div>").addClass(i.dotsClass).appendTo(this.$element)).addClass("disabled"),this._controls.$absolute.on("click","button",o.proxy(function(t){var e=o(t.target).parent().is(this._controls.$absolute)?o(t.target).index():o(t.target).parent().index();t.preventDefault(),this.to(e,i.dotsSpeed)},this)),this._overrides)this._core[t]=o.proxy(this[t],this)},e.prototype.destroy=function(){var t,e,i,n,s;for(t in s=this._core.settings,this._handlers)this.$element.off(t,this._handlers[t]);for(e in this._controls)"$relative"===e&&s.navContainer?this._controls[e].html(""):this._controls[e].remove();for(n in this.overides)this._core[n]=this._overrides[n];for(i in Object.getOwnPropertyNames(this))"function"!=typeof this[i]&&(this[i]=null)},e.prototype.update=function(){var t,e,i=this._core.clones().length/2,n=i+this._core.items().length,s=this._core.maximum(!0),o=this._core.settings,r=o.center||o.autoWidth||o.dotsData?1:o.dotsEach||o.items;if("page"!==o.slideBy&&(o.slideBy=Math.min(o.slideBy,o.items)),o.dots||"page"==o.slideBy)for(this._pages=[],t=i,e=0;t<n;t++){if(r<=e||0===e){if(this._pages.push({start:Math.min(s,t-i),end:t-i+r-1}),Math.min(s,t-i)===s)break;e=0,0}e+=this._core.mergers(this._core.relative(t))}},e.prototype.draw=function(){var t,e=this._core.settings,i=this._core.items().length<=e.items,n=this._core.relative(this._core.current()),s=e.loop||e.rewind;this._controls.$relative.toggleClass("disabled",!e.nav||i),e.nav&&(this._controls.$previous.toggleClass("disabled",!s&&n<=this._core.minimum(!0)),this._controls.$next.toggleClass("disabled",!s&&n>=this._core.maximum(!0))),this._controls.$absolute.toggleClass("disabled",!e.dots||i),e.dots&&(t=this._pages.length-this._controls.$absolute.children().length,e.dotsData&&0!=t?this._controls.$absolute.html(this._templates.join("")):0<t?this._controls.$absolute.append(new Array(1+t).join(this._templates[0])):t<0&&this._controls.$absolute.children().slice(t).remove(),this._controls.$absolute.find(".active").removeClass("active"),this._controls.$absolute.children().eq(o.inArray(this.current(),this._pages)).addClass("active"))},e.prototype.onTrigger=function(t){var e=this._core.settings;t.page={index:o.inArray(this.current(),this._pages),count:this._pages.length,size:e&&(e.center||e.autoWidth||e.dotsData?1:e.dotsEach||e.items)}},e.prototype.current=function(){var i=this._core.relative(this._core.current());return o.grep(this._pages,o.proxy(function(t,e){return t.start<=i&&t.end>=i},this)).pop()},e.prototype.getPosition=function(t){var e,i,n=this._core.settings;return"page"==n.slideBy?(e=o.inArray(this.current(),this._pages),i=this._pages.length,t?++e:--e,e=this._pages[(e%i+i)%i].start):(e=this._core.relative(this._core.current()),i=this._core.items().length,t?e+=n.slideBy:e-=n.slideBy),e},e.prototype.next=function(t){o.proxy(this._overrides.to,this._core)(this.getPosition(!0),t)},e.prototype.prev=function(t){o.proxy(this._overrides.to,this._core)(this.getPosition(!1),t)},e.prototype.to=function(t,e,i){var n;!i&&this._pages.length?(n=this._pages.length,o.proxy(this._overrides.to,this._core)(this._pages[(t%n+n)%n].start,e)):o.proxy(this._overrides.to,this._core)(t,e)},o.fn.owlCarousel.Constructor.Plugins.Navigation=e}(window.Zepto||window.jQuery,(window,document)),function(n,s){"use strict";var e=function(t){this._core=t,this._hashes={},this.$element=this._core.$element,this._handlers={"initialized.owl.carousel":n.proxy(function(t){t.namespace&&"URLHash"===this._core.settings.startPosition&&n(s).trigger("hashchange.owl.navigation")},this),"prepared.owl.carousel":n.proxy(function(t){if(t.namespace){var e=n(t.content).find("[data-hash]").addBack("[data-hash]").attr("data-hash");if(!e)return;this._hashes[e]=t.content}},this),"changed.owl.carousel":n.proxy(function(t){if(t.namespace&&"position"===t.property.name){var i=this._core.items(this._core.relative(this._core.current())),e=n.map(this._hashes,function(t,e){return t===i?e:null}).join();if(!e||s.location.hash.slice(1)===e)return;s.location.hash=e}},this)},this._core.options=n.extend({},e.Defaults,this._core.options),this.$element.on(this._handlers),n(s).on("hashchange.owl.navigation",n.proxy(function(t){var e=s.location.hash.substring(1),i=this._core.$stage.children(),n=this._hashes[e]&&i.index(this._hashes[e]);void 0!==n&&n!==this._core.current()&&this._core.to(this._core.relative(n),!1,!0)},this))};e.Defaults={URLhashListener:!1},e.prototype.destroy=function(){var t,e;for(t in n(s).off("hashchange.owl.navigation"),this._handlers)this._core.$element.off(t,this._handlers[t]);for(e in Object.getOwnPropertyNames(this))"function"!=typeof this[e]&&(this[e]=null)},n.fn.owlCarousel.Constructor.Plugins.Hash=e}(window.Zepto||window.jQuery,window,document),function(s,o){function e(t,i){var n=!1,e=t.charAt(0).toUpperCase()+t.slice(1);return s.each((t+" "+a.join(e+" ")+e).split(" "),function(t,e){if(r[e]!==o)return n=!i||e,!1}),n}function t(t){return e(t,!0)}var r=s("<support>").get(0).style,a="Webkit Moz O ms".split(" "),i={transition:{end:{WebkitTransition:"webkitTransitionEnd",MozTransition:"transitionend",OTransition:"oTransitionEnd",transition:"transitionend"}},animation:{end:{WebkitAnimation:"webkitAnimationEnd",MozAnimation:"animationend",OAnimation:"oAnimationEnd",animation:"animationend"}}},n=function(){return!!e("transform")},l=function(){return!!e("perspective")},c=function(){return!!e("animation")};!function(){return!!e("transition")}()||(s.support.transition=new String(t("transition")),s.support.transition.end=i.transition.end[s.support.transition]),c()&&(s.support.animation=new String(t("animation")),s.support.animation.end=i.animation.end[s.support.animation]),n()&&(s.support.transform=new String(t("transform")),s.support.transform3d=l())}(window.Zepto||window.jQuery,(window,void document)),function(l,d,g){"use strict";function i(t,e){var i,n,s,o=[],r=0;t&&t.isDefaultPrevented()||(t.preventDefault(),e=e||{},t&&t.data&&(e=h(t.data.options,e)),i=e.$target||g(t.currentTarget).trigger("blur"),(s=g.fancybox.getInstance())&&s.$trigger&&s.$trigger.is(i)||(o=e.selector?g(e.selector):(n=i.attr("data-fancybox")||"")?(o=t.data?t.data.items:[]).length?o.filter('[data-fancybox="'+n+'"]'):g('[data-fancybox="'+n+'"]'):[i],(r=g(o).index(i))<0&&(r=0),(s=g.fancybox.open(o,e,r)).$trigger=i))}if(l.console=l.console||{info:function(t){}},g){if(g.fn.fancybox)return console.info("fancyBox already initialized");var t={closeExisting:!1,loop:!1,gutter:50,keyboard:!0,preventCaptionOverlap:!0,arrows:!0,infobar:!0,smallBtn:"auto",toolbar:"auto",buttons:["zoom","slideShow","thumbs","close"],idleTime:3,protect:!1,modal:!1,image:{preload:!1},ajax:{settings:{data:{fancybox:!0}}},iframe:{tpl:'<iframe id="fancybox-frame{rnd}" name="fancybox-frame{rnd}" class="fancybox-iframe" allowfullscreen="allowfullscreen" allow="autoplay; fullscreen" src=""></iframe>',preload:!0,css:{},attr:{scrolling:"auto"}},video:{tpl:'<video class="fancybox-video" controls controlsList="nodownload" poster="{{poster}}"><source src="{{src}}" type="{{format}}" />Sorry, your browser doesn\'t support embedded videos, <a href="{{src}}">download</a> and watch with your favorite video player!</video>',format:"",autoStart:!0},defaultType:"image",animationEffect:"zoom",animationDuration:366,zoomOpacity:"auto",transitionEffect:"fade",transitionDuration:366,slideClass:"",baseClass:"",baseTpl:'<div class="fancybox-container" role="dialog" tabindex="-1"><div class="fancybox-bg"></div><div class="fancybox-inner"><div class="fancybox-infobar"><span data-fancybox-index></span>&nbsp;/&nbsp;<span data-fancybox-count></span></div><div class="fancybox-toolbar">{{buttons}}</div><div class="fancybox-navigation">{{arrows}}</div><div class="fancybox-stage"></div><div class="fancybox-caption"><div class="fancybox-caption__body"></div></div></div></div>',spinnerTpl:'<div class="fancybox-loading"></div>',errorTpl:'<div class="fancybox-error"><p>{{ERROR}}</p></div>',btnTpl:{download:'<a download data-fancybox-download class="fancybox-button fancybox-button--download" title="{{DOWNLOAD}}" href="javascript:;"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M18.62 17.09V19H5.38v-1.91zm-2.97-6.96L17 11.45l-5 4.87-5-4.87 1.36-1.32 2.68 2.64V5h1.92v7.77z"/></svg></a>',zoom:'<button data-fancybox-zoom class="fancybox-button fancybox-button--zoom" title="{{ZOOM}}"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M18.7 17.3l-3-3a5.9 5.9 0 0 0-.6-7.6 5.9 5.9 0 0 0-8.4 0 5.9 5.9 0 0 0 0 8.4 5.9 5.9 0 0 0 7.7.7l3 3a1 1 0 0 0 1.3 0c.4-.5.4-1 0-1.5zM8.1 13.8a4 4 0 0 1 0-5.7 4 4 0 0 1 5.7 0 4 4 0 0 1 0 5.7 4 4 0 0 1-5.7 0z"/></svg></button>',close:'<button data-fancybox-close class="fancybox-button fancybox-button--close" title="{{CLOSE}}"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M12 10.6L6.6 5.2 5.2 6.6l5.4 5.4-5.4 5.4 1.4 1.4 5.4-5.4 5.4 5.4 1.4-1.4-5.4-5.4 5.4-5.4-1.4-1.4-5.4 5.4z"/></svg></button>',arrowLeft:'<button data-fancybox-prev class="fancybox-button fancybox-button--arrow_left" title="{{PREV}}"><div><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M11.28 15.7l-1.34 1.37L5 12l4.94-5.07 1.34 1.38-2.68 2.72H19v1.94H8.6z"/></svg></div></button>',arrowRight:'<button data-fancybox-next class="fancybox-button fancybox-button--arrow_right" title="{{NEXT}}"><div><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M15.4 12.97l-2.68 2.72 1.34 1.38L19 12l-4.94-5.07-1.34 1.38 2.68 2.72H5v1.94z"/></svg></div></button>',smallBtn:'<button type="button" data-fancybox-close class="fancybox-button fancybox-close-small" title="{{CLOSE}}"><svg xmlns="http://www.w3.org/2000/svg" version="1" viewBox="0 0 24 24"><path d="M13 12l5-5-1-1-5 5-5-5-1 1 5 5-5 5 1 1 5-5 5 5 1-1z"/></svg></button>'},parentEl:"body",hideScrollbar:!0,autoFocus:!0,backFocus:!0,trapFocus:!0,fullScreen:{autoStart:!1},touch:{vertical:!0,momentum:!0},hash:null,media:{},slideShow:{autoStart:!1,speed:3e3},thumbs:{autoStart:!1,hideOnClose:!0,parentEl:".fancybox-container",axis:"y"},wheel:"auto",onInit:g.noop,beforeLoad:g.noop,afterLoad:g.noop,beforeShow:g.noop,afterShow:g.noop,beforeClose:g.noop,afterClose:g.noop,onActivate:g.noop,onDeactivate:g.noop,clickContent:function(t,e){return"image"===t.type&&"zoom"},clickSlide:"close",clickOutside:"close",dblclickContent:!1,dblclickSlide:!1,dblclickOutside:!1,mobile:{preventCaptionOverlap:!1,idleTime:!1,clickContent:function(t,e){return"image"===t.type&&"toggleControls"},clickSlide:function(t,e){return"image"===t.type?"toggleControls":"close"},dblclickContent:function(t,e){return"image"===t.type&&"zoom"},dblclickSlide:function(t,e){return"image"===t.type&&"zoom"}},lang:"en",i18n:{en:{CLOSE:"Close",NEXT:"Next",PREV:"Previous",ERROR:"The requested content cannot be loaded. <br/> Please try again later.",PLAY_START:"Start slideshow",PLAY_STOP:"Pause slideshow",FULL_SCREEN:"Full screen",THUMBS:"Thumbnails",DOWNLOAD:"Download",SHARE:"Share",ZOOM:"Zoom"},de:{CLOSE:"Schlie&szlig;en",NEXT:"Weiter",PREV:"Zur&uuml;ck",ERROR:"Die angeforderten Daten konnten nicht geladen werden. <br/> Bitte versuchen Sie es sp&auml;ter nochmal.",PLAY_START:"Diaschau starten",PLAY_STOP:"Diaschau beenden",FULL_SCREEN:"Vollbild",THUMBS:"Vorschaubilder",DOWNLOAD:"Herunterladen",SHARE:"Teilen",ZOOM:"Vergr&ouml;&szlig;ern"}}},s=g(l),r=g(d),o=0,u=l.requestAnimationFrame||l.webkitRequestAnimationFrame||l.mozRequestAnimationFrame||l.oRequestAnimationFrame||function(t){return l.setTimeout(t,1e3/60)},e=l.cancelAnimationFrame||l.webkitCancelAnimationFrame||l.mozCancelAnimationFrame||l.oCancelAnimationFrame||function(t){l.clearTimeout(t)},c=function(){var t,e=d.createElement("fakeelement"),i={transition:"transitionend",OTransition:"oTransitionEnd",MozTransition:"transitionend",WebkitTransition:"webkitTransitionEnd"};for(t in i)if(void 0!==e.style[t])return i[t];return"transitionend"}(),p=function(t){return t&&t.length&&t[0].offsetHeight},h=function(t,e){var i=g.extend(!0,{},t,e);return g.each(e,function(t,e){g.isArray(e)&&(i[t]=e)}),i},n=function(t,e,i){var n=this;n.opts=h({index:i},g.fancybox.defaults),g.isPlainObject(e)&&(n.opts=h(n.opts,e)),g.fancybox.isMobile&&(n.opts=h(n.opts,n.opts.mobile)),n.id=n.opts.id||++o,n.currIndex=parseInt(n.opts.index,10)||0,n.prevIndex=null,n.prevPos=null,n.currPos=0,n.firstRun=!0,n.group=[],n.slides={},n.addContent(t),n.group.length&&n.init()};g.extend(n.prototype,{init:function(){var e,i,n=this,s=n.group[n.currIndex].opts;s.closeExisting&&g.fancybox.close(!0),g("body").addClass("fancybox-active"),!g.fancybox.getInstance()&&!1!==s.hideScrollbar&&!g.fancybox.isMobile&&d.body.scrollHeight>l.innerHeight&&(g("head").append('<style id="fancybox-style-noscroll" type="text/css">.compensate-for-scrollbar{margin-right:'+(l.innerWidth-d.documentElement.clientWidth)+"px;}</style>"),g("body").addClass("compensate-for-scrollbar")),i="",g.each(s.buttons,function(t,e){i+=s.btnTpl[e]||""}),e=g(n.translate(n,s.baseTpl.replace("{{buttons}}",i).replace("{{arrows}}",s.btnTpl.arrowLeft+s.btnTpl.arrowRight))).attr("id","fancybox-container-"+n.id).addClass(s.baseClass).data("FancyBox",n).appendTo(s.parentEl),n.$refs={container:e},["bg","inner","infobar","toolbar","stage","caption","navigation"].forEach(function(t){n.$refs[t]=e.find(".fancybox-"+t)}),n.trigger("onInit"),n.activate(),n.jumpTo(n.currIndex)},translate:function(t,e){var i=t.opts.i18n[t.opts.lang]||t.opts.i18n.en;return e.replace(/\{\{(\w+)\}\}/g,function(t,e){return void 0===i[e]?t:i[e]})},addContent:function(t){var e,c=this,i=g.makeArray(t);g.each(i,function(t,e){var i,n,s,o,r,a={},l={};g.isPlainObject(e)?l=(a=e).opts||e:"object"===g.type(e)&&g(e).length?(l=(i=g(e)).data()||{},(l=g.extend(!0,{},l,l.options)).$orig=i,a.src=c.opts.src||l.src||i.attr("href"),a.type||a.src||(a.type="inline",a.src=e)):a={type:"html",src:e+""},a.opts=g.extend(!0,{},c.opts,l),g.isArray(l.buttons)&&(a.opts.buttons=l.buttons),g.fancybox.isMobile&&a.opts.mobile&&(a.opts=h(a.opts,a.opts.mobile)),n=a.type||a.opts.type,o=a.src||"",!n&&o&&((s=o.match(/\.(mp4|mov|ogv|webm)((\?|#).*)?$/i))?(n="video",a.opts.video.format||(a.opts.video.format="video/"+("ogv"===s[1]?"ogg":s[1]))):o.match(/(^data:image\/[a-z0-9+\/=]*,)|(\.(jp(e|g|eg)|gif|png|bmp|webp|svg|ico)((\?|#).*)?$)/i)?n="image":o.match(/\.(pdf)((\?|#).*)?$/i)?(n="iframe",a=g.extend(!0,a,{contentType:"pdf",opts:{iframe:{preload:!1}}})):"#"===o.charAt(0)&&(n="inline")),n?a.type=n:c.trigger("objectNeedsType",a),a.contentType||(a.contentType=-1<g.inArray(a.type,["html","inline","ajax"])?"html":a.type),a.index=c.group.length,"auto"==a.opts.smallBtn&&(a.opts.smallBtn=-1<g.inArray(a.type,["html","inline","ajax"])),"auto"===a.opts.toolbar&&(a.opts.toolbar=!a.opts.smallBtn),a.$thumb=a.opts.$thumb||null,a.opts.$trigger&&a.index===c.opts.index&&(a.$thumb=a.opts.$trigger.find("img:first"),a.$thumb.length&&(a.opts.$orig=a.opts.$trigger)),a.$thumb&&a.$thumb.length||!a.opts.$orig||(a.$thumb=a.opts.$orig.find("img:first")),a.$thumb&&!a.$thumb.length&&(a.$thumb=null),a.thumb=a.opts.thumb||(a.$thumb?a.$thumb[0].src:null),"function"===g.type(a.opts.caption)&&(a.opts.caption=a.opts.caption.apply(e,[c,a])),"function"===g.type(c.opts.caption)&&(a.opts.caption=c.opts.caption.apply(e,[c,a])),a.opts.caption instanceof g||(a.opts.caption=void 0===a.opts.caption?"":a.opts.caption+""),"ajax"!==a.type||1<(r=o.split(/\s+/,2)).length&&(a.src=r.shift(),a.opts.filter=r.shift()),a.opts.modal&&(a.opts=g.extend(!0,a.opts,{trapFocus:!0,infobar:0,toolbar:0,smallBtn:0,keyboard:0,slideShow:0,fullScreen:0,thumbs:0,touch:0,clickContent:!1,clickSlide:!1,clickOutside:!1,dblclickContent:!1,dblclickSlide:!1,dblclickOutside:!1})),c.group.push(a)}),Object.keys(c.slides).length&&(c.updateControls(),(e=c.Thumbs)&&e.isActive&&(e.create(),e.focus()))},addEvents:function(){var n=this;n.removeEvents(),n.$refs.container.on("click.fb-close","[data-fancybox-close]",function(t){t.stopPropagation(),t.preventDefault(),n.close(t)}).on("touchstart.fb-prev click.fb-prev","[data-fancybox-prev]",function(t){t.stopPropagation(),t.preventDefault(),n.previous()}).on("touchstart.fb-next click.fb-next","[data-fancybox-next]",function(t){t.stopPropagation(),t.preventDefault(),n.next()}).on("click.fb","[data-fancybox-zoom]",function(t){n[n.isScaledDown()?"scaleToActual":"scaleToFit"]()}),s.on("orientationchange.fb resize.fb",function(t){t&&t.originalEvent&&"resize"===t.originalEvent.type?(n.requestId&&e(n.requestId),n.requestId=u(function(){n.update(t)})):(n.current&&"iframe"===n.current.type&&n.$refs.stage.hide(),setTimeout(function(){n.$refs.stage.show(),n.update(t)},g.fancybox.isMobile?600:250))}),r.on("keydown.fb",function(t){var e=(g.fancybox?g.fancybox.getInstance():null).current,i=t.keyCode||t.which;if(9!=i)return!e.opts.keyboard||t.ctrlKey||t.altKey||t.shiftKey||g(t.target).is("input,textarea,video,audio,select")?void 0:8===i||27===i?(t.preventDefault(),void n.close(t)):37===i||38===i?(t.preventDefault(),void n.previous()):39===i||40===i?(t.preventDefault(),void n.next()):void n.trigger("afterKeydown",t,i);e.opts.trapFocus&&n.focus(t)}),n.group[n.currIndex].opts.idleTime&&(n.idleSecondsCounter=0,r.on("mousemove.fb-idle mouseleave.fb-idle mousedown.fb-idle touchstart.fb-idle touchmove.fb-idle scroll.fb-idle keydown.fb-idle",function(t){n.idleSecondsCounter=0,n.isIdle&&n.showControls(),n.isIdle=!1}),n.idleInterval=l.setInterval(function(){++n.idleSecondsCounter>=n.group[n.currIndex].opts.idleTime&&!n.isDragging&&(n.isIdle=!0,n.idleSecondsCounter=0,n.hideControls())},1e3))},removeEvents:function(){s.off("orientationchange.fb resize.fb"),r.off("keydown.fb .fb-idle"),this.$refs.container.off(".fb-close .fb-prev .fb-next"),this.idleInterval&&(l.clearInterval(this.idleInterval),this.idleInterval=null)},previous:function(t){return this.jumpTo(this.currPos-1,t)},next:function(t){return this.jumpTo(this.currPos+1,t)},jumpTo:function(t,n){var e,i,s,o,r,a,l,c,h,d=this,u=d.group.length;if(!(d.isDragging||d.isClosing||d.isAnimating&&d.firstRun)){if(t=parseInt(t,10),!(s=d.current?d.current.opts.loop:d.opts.loop)&&(t<0||u<=t))return!1;if(e=d.firstRun=!Object.keys(d.slides).length,r=d.current,d.prevIndex=d.currIndex,d.prevPos=d.currPos,o=d.createSlide(t),1<u&&((s||o.index<u-1)&&d.createSlide(t+1),(s||0<o.index)&&d.createSlide(t-1)),d.current=o,d.currIndex=o.index,d.currPos=o.pos,d.trigger("beforeShow",e),d.updateControls(),o.forcedDuration=void 0,g.isNumeric(n)?o.forcedDuration=n:n=o.opts[e?"animationDuration":"transitionDuration"],n=parseInt(n,10),i=d.isMoved(o),o.$slide.addClass("fancybox-slide--current"),e)return o.opts.animationEffect&&n&&d.$refs.container.css("transition-duration",n+"ms"),d.$refs.container.addClass("fancybox-is-open").trigger("focus"),d.loadSlide(o),void d.preload("image");a=g.fancybox.getTranslate(r.$slide),l=g.fancybox.getTranslate(d.$refs.stage),g.each(d.slides,function(t,e){g.fancybox.stop(e.$slide,!0)}),r.pos!==o.pos&&(r.isComplete=!1),r.$slide.removeClass("fancybox-slide--complete fancybox-slide--current"),i?(h=a.left-(r.pos*a.width+r.pos*r.opts.gutter),g.each(d.slides,function(t,e){e.$slide.removeClass("fancybox-animated").removeClass(function(t,e){return(e.match(/(^|\s)fancybox-fx-\S+/g)||[]).join(" ")});var i=e.pos*a.width+e.pos*e.opts.gutter;g.fancybox.setTranslate(e.$slide,{top:0,left:i-l.left+h}),e.pos!==o.pos&&e.$slide.addClass("fancybox-slide--"+(e.pos>o.pos?"next":"previous")),p(e.$slide),g.fancybox.animate(e.$slide,{top:0,left:(e.pos-o.pos)*a.width+(e.pos-o.pos)*e.opts.gutter},n,function(){e.$slide.css({transform:"",opacity:""}).removeClass("fancybox-slide--next fancybox-slide--previous"),e.pos===d.currPos&&d.complete()})})):n&&o.opts.transitionEffect&&(c="fancybox-animated fancybox-fx-"+o.opts.transitionEffect,r.$slide.addClass("fancybox-slide--"+(r.pos>o.pos?"next":"previous")),g.fancybox.animate(r.$slide,c,n,function(){r.$slide.removeClass(c).removeClass("fancybox-slide--next fancybox-slide--previous")},!1)),o.isLoaded?d.revealContent(o):d.loadSlide(o),d.preload("image")}},createSlide:function(t){var e,i,n=this;return i=(i=t%n.group.length)<0?n.group.length+i:i,!n.slides[t]&&n.group[i]&&(e=g('<div class="fancybox-slide"></div>').appendTo(n.$refs.stage),n.slides[t]=g.extend(!0,{},n.group[i],{pos:t,$slide:e,isLoaded:!1}),n.updateSlide(n.slides[t])),n.slides[t]},scaleToActual:function(t,e,i){var n,s,o,r,a,l=this,c=l.current,h=c.$content,d=g.fancybox.getTranslate(c.$slide).width,u=g.fancybox.getTranslate(c.$slide).height,p=c.width,f=c.height;l.isAnimating||l.isMoved()||!h||"image"!=c.type||!c.isLoaded||c.hasError||(l.isAnimating=!0,g.fancybox.stop(h),t=void 0===t?.5*d:t,e=void 0===e?.5*u:e,(n=g.fancybox.getTranslate(h)).top-=g.fancybox.getTranslate(c.$slide).top,n.left-=g.fancybox.getTranslate(c.$slide).left,r=p/n.width,a=f/n.height,s=.5*d-.5*p,o=.5*u-.5*f,d<p&&(0<(s=n.left*r-(t*r-t))&&(s=0),s<d-p&&(s=d-p)),u<f&&(0<(o=n.top*a-(e*a-e))&&(o=0),o<u-f&&(o=u-f)),l.updateCursor(p,f),g.fancybox.animate(h,{top:o,left:s,scaleX:r,scaleY:a},i||366,function(){l.isAnimating=!1}),l.SlideShow&&l.SlideShow.isActive&&l.SlideShow.stop())},scaleToFit:function(t){var e,i=this,n=i.current,s=n.$content;i.isAnimating||i.isMoved()||!s||"image"!=n.type||!n.isLoaded||n.hasError||(i.isAnimating=!0,g.fancybox.stop(s),e=i.getFitPos(n),i.updateCursor(e.width,e.height),g.fancybox.animate(s,{top:e.top,left:e.left,scaleX:e.width/s.width(),scaleY:e.height/s.height()},t||366,function(){i.isAnimating=!1}))},getFitPos:function(t){var e,i,n,s,o=t.$content,r=t.$slide,a=t.width||t.opts.width,l=t.height||t.opts.height,c={};return!!(t.isLoaded&&o&&o.length)&&(e=g.fancybox.getTranslate(this.$refs.stage).width,i=g.fancybox.getTranslate(this.$refs.stage).height,e-=parseFloat(r.css("paddingLeft"))+parseFloat(r.css("paddingRight"))+parseFloat(o.css("marginLeft"))+parseFloat(o.css("marginRight")),i-=parseFloat(r.css("paddingTop"))+parseFloat(r.css("paddingBottom"))+parseFloat(o.css("marginTop"))+parseFloat(o.css("marginBottom")),a&&l||(a=e,l=i),e-.5<(a*=n=Math.min(1,e/a,i/l))&&(a=e),i-.5<(l*=n)&&(l=i),"image"===t.type?(c.top=Math.floor(.5*(i-l))+parseFloat(r.css("paddingTop")),c.left=Math.floor(.5*(e-a))+parseFloat(r.css("paddingLeft"))):"video"===t.contentType&&(a/(s=t.opts.width&&t.opts.height?a/l:t.opts.ratio||16/9)<l?l=a/s:l*s<a&&(a=l*s)),c.width=a,c.height=l,c)},update:function(i){var n=this;g.each(n.slides,function(t,e){n.updateSlide(e,i)})},updateSlide:function(t,e){var i=this,n=t&&t.$content,s=t.width||t.opts.width,o=t.height||t.opts.height,r=t.$slide;i.adjustCaption(t),n&&(s||o||"video"===t.contentType)&&!t.hasError&&(g.fancybox.stop(n),g.fancybox.setTranslate(n,i.getFitPos(t)),t.pos===i.currPos&&(i.isAnimating=!1,i.updateCursor())),i.adjustLayout(t),r.length&&(r.trigger("refresh"),t.pos===i.currPos&&i.$refs.toolbar.add(i.$refs.navigation.find(".fancybox-button--arrow_right")).toggleClass("compensate-for-scrollbar",r.get(0).scrollHeight>r.get(0).clientHeight)),i.trigger("onUpdate",t,e)},centerSlide:function(t){var e=this,i=e.current,n=i.$slide;!e.isClosing&&i&&(n.siblings().css({transform:"",opacity:""}),n.parent().children().removeClass("fancybox-slide--previous fancybox-slide--next"),g.fancybox.animate(n,{top:0,left:0,opacity:1},void 0===t?0:t,function(){n.css({transform:"",opacity:""}),i.isComplete||e.complete()},!1))},isMoved:function(t){var e,i,n=t||this.current;return!!n&&(i=g.fancybox.getTranslate(this.$refs.stage),e=g.fancybox.getTranslate(n.$slide),!n.$slide.hasClass("fancybox-animated")&&(.5<Math.abs(e.top-i.top)||.5<Math.abs(e.left-i.left)))},updateCursor:function(t,e){var i,n,s=this,o=s.current,r=s.$refs.container;o&&!s.isClosing&&s.Guestures&&(r.removeClass("fancybox-is-zoomable fancybox-can-zoomIn fancybox-can-zoomOut fancybox-can-swipe fancybox-can-pan"),n=!!(i=s.canPan(t,e))||s.isZoomable(),r.toggleClass("fancybox-is-zoomable",n),g("[data-fancybox-zoom]").prop("disabled",!n),i?r.addClass("fancybox-can-pan"):n&&("zoom"===o.opts.clickContent||g.isFunction(o.opts.clickContent)&&"zoom"==o.opts.clickContent(o))?r.addClass("fancybox-can-zoomIn"):o.opts.touch&&(o.opts.touch.vertical||1<s.group.length)&&"video"!==o.contentType&&r.addClass("fancybox-can-swipe"))},isZoomable:function(){var t,e=this.current;if(e&&!this.isClosing&&"image"===e.type&&!e.hasError){if(!e.isLoaded)return!0;if((t=this.getFitPos(e))&&(e.width>t.width||e.height>t.height))return!0}return!1},isScaledDown:function(t,e){var i=!1,n=this.current,s=n.$content;return void 0!==t&&void 0!==e?i=t<n.width&&e<n.height:s&&(i=(i=g.fancybox.getTranslate(s)).width<n.width&&i.height<n.height),i},canPan:function(t,e){var i=this.current,n=null,s=!1;return"image"===i.type&&(i.isComplete||t&&e)&&!i.hasError&&(s=this.getFitPos(i),void 0!==t&&void 0!==e?n={width:t,height:e}:i.isComplete&&(n=g.fancybox.getTranslate(i.$content)),n&&s&&(s=1.5<Math.abs(n.width-s.width)||1.5<Math.abs(n.height-s.height))),s},loadSlide:function(i){var t,e,n,s=this;if(!i.isLoading&&!i.isLoaded){if(!(i.isLoading=!0)===s.trigger("beforeLoad",i))return i.isLoading=!1;switch(t=i.type,(e=i.$slide).off("refresh").trigger("onReset").addClass(i.opts.slideClass),t){case"image":s.setImage(i);break;case"iframe":s.setIframe(i);break;case"html":s.setContent(i,i.src||i.content);break;case"video":s.setContent(i,i.opts.video.tpl.replace(/\{\{src\}\}/gi,i.src).replace("{{format}}",i.opts.videoFormat||i.opts.video.format||"").replace("{{poster}}",i.thumb||""));break;case"inline":g(i.src).length?s.setContent(i,g(i.src)):s.setError(i);break;case"ajax":s.showLoading(i),n=g.ajax(g.extend({},i.opts.ajax.settings,{url:i.src,success:function(t,e){"success"===e&&s.setContent(i,t)},error:function(t,e){t&&"abort"!==e&&s.setError(i)}})),e.one("onReset",function(){n.abort()});break;default:s.setError(i)}return!0}},setImage:function(e){var t,i=this;setTimeout(function(){var t=e.$image;i.isClosing||!e.isLoading||t&&t.length&&t[0].complete||e.hasError||i.showLoading(e)},50),i.checkSrcset(e),e.$content=g('<div class="fancybox-content"></div>').addClass("fancybox-is-hidden").appendTo(e.$slide.addClass("fancybox-slide--image")),!1!==e.opts.preload&&e.opts.width&&e.opts.height&&e.thumb&&(e.width=e.opts.width,e.height=e.opts.height,(t=d.createElement("img")).onerror=function(){g(this).remove(),e.$ghost=null},t.onload=function(){i.afterLoad(e)},e.$ghost=g(t).addClass("fancybox-image").appendTo(e.$content).attr("src",e.thumb)),i.setBigImage(e)},checkSrcset:function(t){var e,i,n,s,o=t.opts.srcset||t.opts.image.srcset;if(o){n=l.devicePixelRatio||1,s=l.innerWidth*n,(i=o.split(",").map(function(t){var n={};return t.trim().split(/\s+/).forEach(function(t,e){var i=parseInt(t.substring(0,t.length-1),10);if(0===e)return n.url=t;i&&(n.value=i,n.postfix=t[t.length-1])}),n})).sort(function(t,e){return t.value-e.value});for(var r=0;r<i.length;r++){var a=i[r];if("w"===a.postfix&&a.value>=s||"x"===a.postfix&&a.value>=n){e=a;break}}!e&&i.length&&(e=i[i.length-1]),e&&(t.src=e.url,t.width&&t.height&&"w"==e.postfix&&(t.height=t.width/t.height*e.value,t.width=e.value),t.opts.srcset=o)}},setBigImage:function(e){var i=this,t=d.createElement("img"),n=g(t);e.$image=n.one("error",function(){i.setError(e)}).one("load",function(){var t;e.$ghost||(i.resolveImageSlideSize(e,this.naturalWidth,this.naturalHeight),i.afterLoad(e)),i.isClosing||(e.opts.srcset&&((t=e.opts.sizes)&&"auto"!==t||(t=(1<e.width/e.height&&1<s.width()/s.height()?"100":Math.round(e.width/e.height*100))+"vw"),n.attr("sizes",t).attr("srcset",e.opts.srcset)),e.$ghost&&setTimeout(function(){e.$ghost&&!i.isClosing&&e.$ghost.hide()},Math.min(300,Math.max(1e3,e.height/1600))),i.hideLoading(e))}).addClass("fancybox-image").attr("src",e.src).appendTo(e.$content),(t.complete||"complete"==t.readyState)&&n.naturalWidth&&n.naturalHeight?n.trigger("load"):t.error&&n.trigger("error")},resolveImageSlideSize:function(t,e,i){var n=parseInt(t.opts.width,10),s=parseInt(t.opts.height,10);t.width=e,t.height=i,0<n&&(t.width=n,t.height=Math.floor(n*i/e)),0<s&&(t.width=Math.floor(s*e/i),t.height=s)},setIframe:function(s){var o,e=this,r=s.opts.iframe,a=s.$slide;s.$content=g('<div class="fancybox-content'+(r.preload?" fancybox-is-hidden":"")+'"></div>').css(r.css).appendTo(a),a.addClass("fancybox-slide--"+s.contentType),s.$iframe=o=g(r.tpl.replace(/\{rnd\}/g,(new Date).getTime())).attr(r.attr).appendTo(s.$content),r.preload?(e.showLoading(s),o.on("load.fb error.fb",function(t){this.isReady=1,s.$slide.trigger("refresh"),e.afterLoad(s)}),a.on("refresh.fb",function(){var t,e=s.$content,i=r.css.width,n=r.css.height;if(1===o[0].isReady){try{t=o.contents().find("body")}catch(t){}t&&t.length&&t.children().length&&(a.css("overflow","visible"),e.css({width:"100%","max-width":"100%",height:"9999px"}),void 0===i&&(i=Math.ceil(Math.max(t[0].clientWidth,t.outerWidth(!0)))),e.css("width",i||"").css("max-width",""),void 0===n&&(n=Math.ceil(Math.max(t[0].clientHeight,t.outerHeight(!0)))),e.css("height",n||""),a.css("overflow","auto")),e.removeClass("fancybox-is-hidden")}})):e.afterLoad(s),o.attr("src",s.src),a.one("onReset",function(){try{g(this).find("iframe").hide().unbind().attr("src","//about:blank")}catch(t){}g(this).off("refresh.fb").empty(),s.isLoaded=!1,s.isRevealed=!1})},setContent:function(t,e){var i;this.isClosing||(this.hideLoading(t),t.$content&&g.fancybox.stop(t.$content),t.$slide.empty(),(i=e)&&i.hasOwnProperty&&i instanceof g&&e.parent().length?((e.hasClass("fancybox-content")||e.parent().hasClass("fancybox-content"))&&e.parents(".fancybox-slide").trigger("onReset"),t.$placeholder=g("<div>").hide().insertAfter(e),e.css("display","inline-block")):t.hasError||("string"===g.type(e)&&(e=g("<div>").append(g.trim(e)).contents()),t.opts.filter&&(e=g("<div>").html(e).find(t.opts.filter))),t.$slide.one("onReset",function(){g(this).find("video,audio").trigger("pause"),t.$placeholder&&(t.$placeholder.after(e.removeClass("fancybox-content").hide()).remove(),t.$placeholder=null),t.$smallBtn&&(t.$smallBtn.remove(),t.$smallBtn=null),t.hasError||(g(this).empty(),t.isLoaded=!1,t.isRevealed=!1)}),g(e).appendTo(t.$slide),g(e).is("video,audio")&&(g(e).addClass("fancybox-video"),g(e).wrap("<div></div>"),t.contentType="video",t.opts.width=t.opts.width||g(e).attr("width"),t.opts.height=t.opts.height||g(e).attr("height")),t.$content=t.$slide.children().filter("div,form,main,video,audio,article,.fancybox-content").first(),t.$content.siblings().hide(),t.$content.length||(t.$content=t.$slide.wrapInner("<div></div>").children().first()),t.$content.addClass("fancybox-content"),t.$slide.addClass("fancybox-slide--"+t.contentType),this.afterLoad(t))},setError:function(t){t.hasError=!0,t.$slide.trigger("onReset").removeClass("fancybox-slide--"+t.contentType).addClass("fancybox-slide--error"),t.contentType="html",this.setContent(t,this.translate(t,t.opts.errorTpl)),t.pos===this.currPos&&(this.isAnimating=!1)},showLoading:function(t){(t=t||this.current)&&!t.$spinner&&(t.$spinner=g(this.translate(this,this.opts.spinnerTpl)).appendTo(t.$slide).hide().fadeIn("fast"))},hideLoading:function(t){(t=t||this.current)&&t.$spinner&&(t.$spinner.stop().remove(),delete t.$spinner)},afterLoad:function(t){var e=this;e.isClosing||(t.isLoading=!1,t.isLoaded=!0,e.trigger("afterLoad",t),e.hideLoading(t),!t.opts.smallBtn||t.$smallBtn&&t.$smallBtn.length||(t.$smallBtn=g(e.translate(t,t.opts.btnTpl.smallBtn)).appendTo(t.$content)),t.opts.protect&&t.$content&&!t.hasError&&(t.$content.on("contextmenu.fb",function(t){return 2==t.button&&t.preventDefault(),!0}),"image"===t.type&&g('<div class="fancybox-spaceball"></div>').appendTo(t.$content)),e.adjustCaption(t),e.adjustLayout(t),t.pos===e.currPos&&e.updateCursor(),e.revealContent(t))},adjustCaption:function(t){var e,i=this,n=t||i.current,s=n.opts.caption,o=n.opts.preventCaptionOverlap,r=i.$refs.caption,a=!1;r.toggleClass("fancybox-caption--separate",o),o&&s&&s.length&&(n.pos!==i.currPos?((e=r.clone().appendTo(r.parent())).children().eq(0).empty().html(s),a=e.outerHeight(!0),e.empty().remove()):i.$caption&&(a=i.$caption.outerHeight(!0)),n.$slide.css("padding-bottom",a||""))},adjustLayout:function(t){var e,i,n,s,o=t||this.current;o.isLoaded&&!0!==o.opts.disableLayoutFix&&(o.$content.css("margin-bottom",""),o.$content.outerHeight()>o.$slide.height()+.5&&(n=o.$slide[0].style["padding-bottom"],s=o.$slide.css("padding-bottom"),0<parseFloat(s)&&(e=o.$slide[0].scrollHeight,o.$slide.css("padding-bottom",0),Math.abs(e-o.$slide[0].scrollHeight)<1&&(i=s),o.$slide.css("padding-bottom",n))),o.$content.css("margin-bottom",i))},revealContent:function(t){var e,i,n,s,o=this,r=t.$slide,a=!1,l=!1,c=o.isMoved(t),h=t.isRevealed;return t.isRevealed=!0,e=t.opts[o.firstRun?"animationEffect":"transitionEffect"],n=t.opts[o.firstRun?"animationDuration":"transitionDuration"],n=parseInt(void 0===t.forcedDuration?n:t.forcedDuration,10),!c&&t.pos===o.currPos&&n||(e=!1),"zoom"===e&&(t.pos===o.currPos&&n&&"image"===t.type&&!t.hasError&&(l=o.getThumbPos(t))?a=o.getFitPos(t):e="fade"),"zoom"===e?(o.isAnimating=!0,a.scaleX=a.width/l.width,a.scaleY=a.height/l.height,"auto"==(s=t.opts.zoomOpacity)&&(s=.1<Math.abs(t.width/t.height-l.width/l.height)),s&&(l.opacity=.1,a.opacity=1),g.fancybox.setTranslate(t.$content.removeClass("fancybox-is-hidden"),l),p(t.$content),void g.fancybox.animate(t.$content,a,n,function(){o.isAnimating=!1,o.complete()})):(o.updateSlide(t),e?(g.fancybox.stop(r),i="fancybox-slide--"+(t.pos>=o.prevPos?"next":"previous")+" fancybox-animated fancybox-fx-"+e,r.addClass(i).removeClass("fancybox-slide--current"),t.$content.removeClass("fancybox-is-hidden"),p(r),"image"!==t.type&&t.$content.hide().show(0),void g.fancybox.animate(r,"fancybox-slide--current",n,function(){r.removeClass(i).css({transform:"",opacity:""}),t.pos===o.currPos&&o.complete()},!0)):(t.$content.removeClass("fancybox-is-hidden"),h||!c||"image"!==t.type||t.hasError||t.$content.hide().fadeIn("fast"),void(t.pos===o.currPos&&o.complete())))},getThumbPos:function(t){var e,i,n,s,o,r,a,l,c=!1,h=t.$thumb;return!(!h||(!(r=h[0])||r.ownerDocument!==d||(g(".fancybox-container").css("pointer-events","none"),a={x:r.getBoundingClientRect().left+r.offsetWidth/2,y:r.getBoundingClientRect().top+r.offsetHeight/2},l=d.elementFromPoint(a.x,a.y)===r,g(".fancybox-container").css("pointer-events",""),!l)))&&(e=g.fancybox.getTranslate(h),i=parseFloat(h.css("border-top-width")||0),n=parseFloat(h.css("border-right-width")||0),s=parseFloat(h.css("border-bottom-width")||0),o=parseFloat(h.css("border-left-width")||0),c={top:e.top+i,left:e.left+o,width:e.width-n-o,height:e.height-i-s,scaleX:1,scaleY:1},0<e.width&&0<e.height&&c)},complete:function(){var t,i=this,e=i.current,n={};!i.isMoved()&&e.isLoaded&&(e.isComplete||(e.isComplete=!0,e.$slide.siblings().trigger("onReset"),i.preload("inline"),p(e.$slide),e.$slide.addClass("fancybox-slide--complete"),g.each(i.slides,function(t,e){e.pos>=i.currPos-1&&e.pos<=i.currPos+1?n[e.pos]=e:e&&(g.fancybox.stop(e.$slide),e.$slide.off().remove())}),i.slides=n),i.isAnimating=!1,i.updateCursor(),i.trigger("afterShow"),e.opts.video.autoStart&&e.$slide.find("video,audio").filter(":visible:first").trigger("play").one("ended",function(){Document.exitFullscreen?Document.exitFullscreen():this.webkitExitFullscreen&&this.webkitExitFullscreen(),i.next()}),e.opts.autoFocus&&"html"===e.contentType&&((t=e.$content.find("input[autofocus]:enabled:visible:first")).length?t.trigger("focus"):i.focus(null,!0)),e.$slide.scrollTop(0).scrollLeft(0))},preload:function(t){var e,i,n=this;n.group.length<2||(i=n.slides[n.currPos+1],(e=n.slides[n.currPos-1])&&e.type===t&&n.loadSlide(e),i&&i.type===t&&n.loadSlide(i))},focus:function(t,e){var i,n,s=this,o=["a[href]","area[href]",'input:not([disabled]):not([type="hidden"]):not([aria-hidden])',"select:not([disabled]):not([aria-hidden])","textarea:not([disabled]):not([aria-hidden])","button:not([disabled]):not([aria-hidden])","iframe","object","embed","video","audio","[contenteditable]",'[tabindex]:not([tabindex^="-"])'].join(",");s.isClosing||((i=(i=!t&&s.current&&s.current.isComplete?s.current.$slide.find("*:visible"+(e?":not(.fancybox-close-small)":"")):s.$refs.container.find("*:visible")).filter(o).filter(function(){return"hidden"!==g(this).css("visibility")&&!g(this).hasClass("disabled")})).length?(n=i.index(d.activeElement),t&&t.shiftKey?(n<0||0==n)&&(t.preventDefault(),i.eq(i.length-1).trigger("focus")):(n<0||n==i.length-1)&&(t&&t.preventDefault(),i.eq(0).trigger("focus"))):s.$refs.container.trigger("focus"))},activate:function(){var e=this;g(".fancybox-container").each(function(){var t=g(this).data("FancyBox");t&&t.id!==e.id&&!t.isClosing&&(t.trigger("onDeactivate"),t.removeEvents(),t.isVisible=!1)}),e.isVisible=!0,(e.current||e.isIdle)&&(e.update(),e.updateControls()),e.trigger("onActivate"),e.addEvents()},close:function(t,e){function i(){h.cleanUp(t)}var n,s,o,r,a,l,c,h=this,d=h.current;return!h.isClosing&&(!(h.isClosing=!0)===h.trigger("beforeClose",t)?(h.isClosing=!1,u(function(){h.update()}),!1):(h.removeEvents(),o=d.$content,n=d.opts.animationEffect,s=g.isNumeric(e)?e:n?d.opts.animationDuration:0,d.$slide.removeClass("fancybox-slide--complete fancybox-slide--next fancybox-slide--previous fancybox-animated"),!0!==t?g.fancybox.stop(d.$slide):n=!1,d.$slide.siblings().trigger("onReset").remove(),s&&h.$refs.container.removeClass("fancybox-is-open").addClass("fancybox-is-closing").css("transition-duration",s+"ms"),h.hideLoading(d),h.hideControls(!0),h.updateCursor(),"zoom"!==n||o&&s&&"image"===d.type&&!h.isMoved()&&!d.hasError&&(c=h.getThumbPos(d))||(n="fade"),"zoom"===n?(g.fancybox.stop(o),l={top:(r=g.fancybox.getTranslate(o)).top,left:r.left,scaleX:r.width/c.width,scaleY:r.height/c.height,width:c.width,height:c.height},"auto"==(a=d.opts.zoomOpacity)&&(a=.1<Math.abs(d.width/d.height-c.width/c.height)),a&&(c.opacity=0),g.fancybox.setTranslate(o,l),p(o),g.fancybox.animate(o,c,s,i)):n&&s?g.fancybox.animate(d.$slide.addClass("fancybox-slide--previous").removeClass("fancybox-slide--current"),"fancybox-animated fancybox-fx-"+n,s,i):!0===t?setTimeout(i,s):i(),!0))},cleanUp:function(t){var e,i,n,s=this,o=s.current.opts.$orig;s.current.$slide.trigger("onReset"),s.$refs.container.empty().remove(),s.trigger("afterClose",t),s.current.opts.backFocus&&(o&&o.length&&o.is(":visible")||(o=s.$trigger),o&&o.length&&(i=l.scrollX,n=l.scrollY,o.trigger("focus"),g("html, body").scrollTop(n).scrollLeft(i))),s.current=null,(e=g.fancybox.getInstance())?e.activate():(g("body").removeClass("fancybox-active compensate-for-scrollbar"),g("#fancybox-style-noscroll").remove())},trigger:function(t,e){var i,n=Array.prototype.slice.call(arguments,1),s=this,o=e&&e.opts?e:s.current;if(o?n.unshift(o):o=s,n.unshift(s),g.isFunction(o.opts[t])&&(i=o.opts[t].apply(o,n)),!1===i)return i;"afterClose"!==t&&s.$refs?s.$refs.container.trigger(t+".fb",n):r.trigger(t+".fb",n)},updateControls:function(){var t=this,e=t.current,i=e.index,n=t.$refs.container,s=t.$refs.caption,o=e.opts.caption;e.$slide.trigger("refresh"),o&&o.length?(t.$caption=s).children().eq(0).html(o):t.$caption=null,t.hasHiddenControls||t.isIdle||t.showControls(),n.find("[data-fancybox-count]").html(t.group.length),n.find("[data-fancybox-index]").html(i+1),n.find("[data-fancybox-prev]").prop("disabled",!e.opts.loop&&i<=0),n.find("[data-fancybox-next]").prop("disabled",!e.opts.loop&&i>=t.group.length-1),"image"===e.type?n.find("[data-fancybox-zoom]").show().end().find("[data-fancybox-download]").attr("href",e.opts.image.src||e.src).show():e.opts.toolbar&&n.find("[data-fancybox-download],[data-fancybox-zoom]").hide(),g(d.activeElement).is(":hidden,[disabled]")&&t.$refs.container.trigger("focus")},hideControls:function(t){var e=["infobar","toolbar","nav"];!t&&this.current.opts.preventCaptionOverlap||e.push("caption"),this.$refs.container.removeClass(e.map(function(t){return"fancybox-show-"+t}).join(" ")),this.hasHiddenControls=!0},showControls:function(){var t=this,e=t.current?t.current.opts:t.opts,i=t.$refs.container;t.hasHiddenControls=!1,t.idleSecondsCounter=0,i.toggleClass("fancybox-show-toolbar",!(!e.toolbar||!e.buttons)).toggleClass("fancybox-show-infobar",!!(e.infobar&&1<t.group.length)).toggleClass("fancybox-show-caption",!!t.$caption).toggleClass("fancybox-show-nav",!!(e.arrows&&1<t.group.length)).toggleClass("fancybox-is-modal",!!e.modal)},toggleControls:function(){this.hasHiddenControls?this.showControls():this.hideControls()}}),g.fancybox={version:"3.5.7",defaults:t,getInstance:function(t){var e=g('.fancybox-container:not(".fancybox-is-closing"):last').data("FancyBox"),i=Array.prototype.slice.call(arguments,1);return e instanceof n&&("string"===g.type(t)?e[t].apply(e,i):"function"===g.type(t)&&t.apply(e,i),e)},open:function(t,e,i){return new n(t,e,i)},close:function(t){var e=this.getInstance();e&&(e.close(),!0===t&&this.close(t))},destroy:function(){this.close(!0),r.add("body").off("click.fb-start","**")},isMobile:/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent),use3d:(f=d.createElement("div"),l.getComputedStyle&&l.getComputedStyle(f)&&l.getComputedStyle(f).getPropertyValue("transform")&&!(d.documentMode&&d.documentMode<11)),getTranslate:function(t){var e;return!(!t||!t.length)&&{top:(e=t[0].getBoundingClientRect()).top||0,left:e.left||0,width:e.width,height:e.height,opacity:parseFloat(t.css("opacity"))}},setTranslate:function(t,e){var i="",n={};if(t&&e)return void 0===e.left&&void 0===e.top||(i=(void 0===e.left?t.position().left:e.left)+"px, "+(void 0===e.top?t.position().top:e.top)+"px",i=this.use3d?"translate3d("+i+", 0px)":"translate("+i+")"),void 0!==e.scaleX&&void 0!==e.scaleY?i+=" scale("+e.scaleX+", "+e.scaleY+")":void 0!==e.scaleX&&(i+=" scaleX("+e.scaleX+")"),i.length&&(n.transform=i),void 0!==e.opacity&&(n.opacity=e.opacity),void 0!==e.width&&(n.width=e.width),void 0!==e.height&&(n.height=e.height),t.css(n)},animate:function(e,i,n,s,o){var r,a=this;g.isFunction(n)&&(s=n,n=null),a.stop(e),r=a.getTranslate(e),e.on(c,function(t){t&&t.originalEvent&&(!e.is(t.originalEvent.target)||"z-index"==t.originalEvent.propertyName)||(a.stop(e),g.isNumeric(n)&&e.css("transition-duration",""),g.isPlainObject(i)?void 0!==i.scaleX&&void 0!==i.scaleY&&a.setTranslate(e,{top:i.top,left:i.left,width:r.width*i.scaleX,height:r.height*i.scaleY,scaleX:1,scaleY:1}):!0!==o&&e.removeClass(i),g.isFunction(s)&&s(t))}),g.isNumeric(n)&&e.css("transition-duration",n+"ms"),g.isPlainObject(i)?(void 0!==i.scaleX&&void 0!==i.scaleY&&(delete i.width,delete i.height,e.parent().hasClass("fancybox-slide--image")&&e.parent().addClass("fancybox-is-scaling")),g.fancybox.setTranslate(e,i)):e.addClass(i),e.data("timer",setTimeout(function(){e.trigger(c)},n+33))},stop:function(t,e){t&&t.length&&(clearTimeout(t.data("timer")),e&&t.trigger(c),t.off(c).css("transition-duration",""),t.parent().removeClass("fancybox-is-scaling"))}},g.fn.fancybox=function(t){var e;return(e=(t=t||{}).selector||!1)?g("body").off("click.fb-start",e).on("click.fb-start",e,{options:t},i):this.off("click.fb-start").on("click.fb-start",{items:this,options:t},i),this},r.on("click.fb-start","[data-fancybox]",i),r.on("click.fb-start","[data-fancybox-trigger]",function(t){g('[data-fancybox="'+g(this).attr("data-fancybox-trigger")+'"]').eq(g(this).attr("data-fancybox-index")||0).trigger("click.fb-start",{$trigger:g(this)})}),a=null,r.on("mousedown mouseup focus blur",".fancybox-button",function(t){switch(t.type){case"mousedown":a=g(this);break;case"mouseup":a=null;break;case"focusin":g(".fancybox-button").removeClass("fancybox-focus"),g(this).is(a)||g(this).is("[disabled]")||g(this).addClass("fancybox-focus");break;case"focusout":g(".fancybox-button").removeClass("fancybox-focus")}})}var a,f}(window,document,jQuery),function(p){"use strict";function f(i,t,e){if(i)return e=e||"","object"===p.type(e)&&(e=p.param(e,!0)),p.each(t,function(t,e){i=i.replace("$"+t,e||"")}),e.length&&(i+=(0<i.indexOf("?")?"&":"?")+e),i}var n={youtube:{matcher:/(youtube\.com|youtu\.be|youtube\-nocookie\.com)\/(watch\?(.*&)?v=|v\/|u\/|embed\/?)?(videoseries\?list=(.*)|[\w-]{11}|\?listType=(.*)&list=(.*))(.*)/i,params:{autoplay:1,autohide:1,fs:1,rel:0,hd:1,wmode:"transparent",enablejsapi:1,html5:1},paramPlace:8,type:"iframe",url:"https://www.youtube-nocookie.com/embed/$4",thumb:"https://img.youtube.com/vi/$4/hqdefault.jpg"},vimeo:{matcher:/^.+vimeo.com\/(.*\/)?([\d]+)(.*)?/,params:{autoplay:1,hd:1,show_title:1,show_byline:1,show_portrait:0,fullscreen:1},paramPlace:3,type:"iframe",url:"//player.vimeo.com/video/$2"},instagram:{matcher:/(instagr\.am|instagram\.com)\/p\/([a-zA-Z0-9_\-]+)\/?/i,type:"image",url:"//$1/p/$2/media/?size=l"},gmap_place:{matcher:/(maps\.)?google\.([a-z]{2,3}(\.[a-z]{2})?)\/(((maps\/(place\/(.*)\/)?\@(.*),(\d+.?\d+?)z))|(\?ll=))(.*)?/i,type:"iframe",url:function(t){return"//maps.google."+t[2]+"/?ll="+(t[9]?t[9]+"&z="+Math.floor(t[10])+(t[12]?t[12].replace(/^\//,"&"):""):t[12]+"").replace(/\?/,"&")+"&output="+(t[12]&&0<t[12].indexOf("layer=c")?"svembed":"embed")}},gmap_search:{matcher:/(maps\.)?google\.([a-z]{2,3}(\.[a-z]{2})?)\/(maps\/search\/)(.*)/i,type:"iframe",url:function(t){return"//maps.google."+t[2]+"/maps?q="+t[5].replace("query=","q=").replace("api=1","")+"&output=embed"}}};p(document).on("objectNeedsType.fb",function(t,e,s){var i,o,r,a,l,c,h,d=s.src||"",u=!1;i=p.extend(!0,{},n,s.opts.media),p.each(i,function(t,e){if(r=d.match(e.matcher)){if(u=e.type,h=t,c={},e.paramPlace&&r[e.paramPlace]){"?"==(l=r[e.paramPlace])[0]&&(l=l.substring(1)),l=l.split("&");for(var i=0;i<l.length;++i){var n=l[i].split("=",2);2==n.length&&(c[n[0]]=decodeURIComponent(n[1].replace(/\+/g," ")))}}return a=p.extend(!0,{},e.params,s.opts[t],c),d="function"===p.type(e.url)?e.url.call(this,r,a,s):f(e.url,r,a),o="function"===p.type(e.thumb)?e.thumb.call(this,r,a,s):f(e.thumb,r),"youtube"===t?d=d.replace(/&t=((\d+)m)?(\d+)s/,function(t,e,i,n){return"&start="+((i?60*parseInt(i,10):0)+parseInt(n,10))}):"vimeo"===t&&(d=d.replace("&%23","#")),!1}}),u?(s.opts.thumb||s.opts.$thumb&&s.opts.$thumb.length||(s.opts.thumb=o),"iframe"===u&&(s.opts=p.extend(!0,s.opts,{iframe:{preload:!1,attr:{scrolling:"no"}}})),p.extend(s,{type:u,src:d,origSrc:s.src,contentSource:h,contentType:"image"===u?"image":"gmap_place"==h||"gmap_search"==h?"map":"video"})):d&&(s.type=s.opts.defaultType)});var s={youtube:{src:"https://www.youtube.com/iframe_api",class:"YT",loading:!1,loaded:!1},vimeo:{src:"https://player.vimeo.com/api/player.js",class:"Vimeo",loading:!1,loaded:!1},load:function(t){var e,i=this;this[t].loaded?setTimeout(function(){i.done(t)}):this[t].loading||(this[t].loading=!0,(e=document.createElement("script")).type="text/javascript",e.src=this[t].src,"youtube"===t?window.onYouTubeIframeAPIReady=function(){i[t].loaded=!0,i.done(t)}:e.onload=function(){i[t].loaded=!0,i.done(t)},document.body.appendChild(e))},done:function(t){var e,i;"youtube"===t&&delete window.onYouTubeIframeAPIReady,(e=p.fancybox.getInstance())&&(i=e.current.$content.find("iframe"),"youtube"===t&&void 0!==YT&&YT?new YT.Player(i.attr("id"),{events:{onStateChange:function(t){0==t.data&&e.next()}}}):"vimeo"===t&&void 0!==Vimeo&&Vimeo&&new Vimeo.Player(i).on("ended",function(){e.next()}))}};p(document).on({"afterShow.fb":function(t,e,i){1<e.group.length&&("youtube"===i.contentSource||"vimeo"===i.contentSource)&&s.load(i.contentSource)}})}(jQuery),function(g,l,m){"use strict";function h(t){var e=[];for(var i in t=(t=t.originalEvent||t||g.e).touches&&t.touches.length?t.touches:t.changedTouches&&t.changedTouches.length?t.changedTouches:[t])t[i].pageX?e.push({x:t[i].pageX,y:t[i].pageY}):t[i].clientX&&e.push({x:t[i].clientX,y:t[i].clientY});return e}function v(t,e,i){return e&&t?"x"===i?t.x-e.x:"y"===i?t.y-e.y:Math.sqrt(Math.pow(t.x-e.x,2)+Math.pow(t.y-e.y,2)):0}function c(t){if(t.is('a,area,button,[role="button"],input,label,select,summary,textarea,video,audio,iframe')||m.isFunction(t.get(0).onclick)||t.data("selectable"))return 1;for(var e=0,i=t[0].attributes,n=i.length;e<n;e++)if("data-fancybox-"===i[e].nodeName.substr(0,14))return 1}function d(t){for(var e=!1;(i=t.get(0),0,n=g.getComputedStyle(i)["overflow-y"],s=g.getComputedStyle(i)["overflow-x"],o=("scroll"===n||"auto"===n)&&i.scrollHeight>i.clientHeight,r=("scroll"===s||"auto"===s)&&i.scrollWidth>i.clientWidth,!(e=o||r))&&((t=t.parent()).length&&!t.hasClass("fancybox-stage")&&!t.is("body")););var i,n,s,o,r;return e}function i(t){var e=this;e.instance=t,e.$bg=t.$refs.bg,e.$stage=t.$refs.stage,e.$container=t.$refs.container,e.destroy(),e.$container.on("touchstart.fb.touch mousedown.fb.touch",m.proxy(e,"ontouchstart"))}var y=g.requestAnimationFrame||g.webkitRequestAnimationFrame||g.mozRequestAnimationFrame||g.oRequestAnimationFrame||function(t){return g.setTimeout(t,1e3/60)},b=g.cancelAnimationFrame||g.webkitCancelAnimationFrame||g.mozCancelAnimationFrame||g.oCancelAnimationFrame||function(t){g.clearTimeout(t)};i.prototype.destroy=function(){var t=this;t.$container.off(".fb.touch"),m(l).off(".fb.touch"),t.requestId&&(b(t.requestId),t.requestId=null),t.tapped&&(clearTimeout(t.tapped),t.tapped=null)},i.prototype.ontouchstart=function(t){var e=this,i=m(t.target),n=e.instance,s=n.current,o=s.$slide,r=s.$content,a="touchstart"==t.type;if(a&&e.$container.off("mousedown.fb.touch"),(!t.originalEvent||2!=t.originalEvent.button)&&o.length&&i.length&&!c(i)&&!c(i.parent())&&(i.is("img")||!(t.originalEvent.clientX>i[0].clientWidth+i.offset().left))){if(!s||n.isAnimating||s.$slide.hasClass("fancybox-animated"))return t.stopPropagation(),void t.preventDefault();e.realPoints=e.startPoints=h(t),e.startPoints.length&&(s.touch&&t.stopPropagation(),e.startEvent=t,e.canTap=!0,e.$target=i,e.$content=r,e.opts=s.opts.touch,e.isPanning=!1,e.isSwiping=!1,e.isZooming=!1,e.isScrolling=!1,e.canPan=n.canPan(),e.startTime=(new Date).getTime(),e.distanceX=e.distanceY=e.distance=0,e.canvasWidth=Math.round(o[0].clientWidth),e.canvasHeight=Math.round(o[0].clientHeight),e.contentLastPos=null,e.contentStartPos=m.fancybox.getTranslate(e.$content)||{top:0,left:0},e.sliderStartPos=m.fancybox.getTranslate(o),e.stagePos=m.fancybox.getTranslate(n.$refs.stage),e.sliderStartPos.top-=e.stagePos.top,e.sliderStartPos.left-=e.stagePos.left,e.contentStartPos.top-=e.stagePos.top,e.contentStartPos.left-=e.stagePos.left,m(l).off(".fb.touch").on(a?"touchend.fb.touch touchcancel.fb.touch":"mouseup.fb.touch mouseleave.fb.touch",m.proxy(e,"ontouchend")).on(a?"touchmove.fb.touch":"mousemove.fb.touch",m.proxy(e,"ontouchmove")),m.fancybox.isMobile&&l.addEventListener("scroll",e.onscroll,!0),((e.opts||e.canPan)&&(i.is(e.$stage)||e.$stage.find(i).length)||(i.is(".fancybox-image")&&t.preventDefault(),m.fancybox.isMobile&&i.parents(".fancybox-caption").length))&&(e.isScrollable=d(i)||d(i.parent()),m.fancybox.isMobile&&e.isScrollable||t.preventDefault(),1!==e.startPoints.length&&!s.hasError||(e.canPan?(m.fancybox.stop(e.$content),e.isPanning=!0):e.isSwiping=!0,e.$container.addClass("fancybox-is-grabbing")),2===e.startPoints.length&&"image"===s.type&&(s.isLoaded||s.$ghost)&&(e.canTap=!1,e.isSwiping=!1,e.isPanning=!1,e.isZooming=!0,m.fancybox.stop(e.$content),e.centerPointStartX=.5*(e.startPoints[0].x+e.startPoints[1].x)-m(g).scrollLeft(),e.centerPointStartY=.5*(e.startPoints[0].y+e.startPoints[1].y)-m(g).scrollTop(),e.percentageOfImageAtPinchPointX=(e.centerPointStartX-e.contentStartPos.left)/e.contentStartPos.width,e.percentageOfImageAtPinchPointY=(e.centerPointStartY-e.contentStartPos.top)/e.contentStartPos.height,e.startDistanceBetweenFingers=v(e.startPoints[0],e.startPoints[1]))))}},i.prototype.onscroll=function(t){this.isScrolling=!0,l.removeEventListener("scroll",this.onscroll,!0)},i.prototype.ontouchmove=function(t){var e=this;return void 0!==t.originalEvent.buttons&&0===t.originalEvent.buttons?void e.ontouchend(t):e.isScrolling?void(e.canTap=!1):(e.newPoints=h(t),void((e.opts||e.canPan)&&e.newPoints.length&&e.newPoints.length&&(e.isSwiping&&!0===e.isSwiping||t.preventDefault(),e.distanceX=v(e.newPoints[0],e.startPoints[0],"x"),e.distanceY=v(e.newPoints[0],e.startPoints[0],"y"),e.distance=v(e.newPoints[0],e.startPoints[0]),0<e.distance&&(e.isSwiping?e.onSwipe(t):e.isPanning?e.onPan():e.isZooming&&e.onZoom()))))},i.prototype.onSwipe=function(t){var e,s=this,o=s.instance,i=s.isSwiping,n=s.sliderStartPos.left||0;if(!0!==i)"x"==i&&(0<s.distanceX&&(s.instance.group.length<2||0===s.instance.current.index&&!s.instance.current.opts.loop)?n+=Math.pow(s.distanceX,.8):s.distanceX<0&&(s.instance.group.length<2||s.instance.current.index===s.instance.group.length-1&&!s.instance.current.opts.loop)?n-=Math.pow(-s.distanceX,.8):n+=s.distanceX),s.sliderLastPos={top:"x"==i?0:s.sliderStartPos.top+s.distanceY,left:n},s.requestId&&(b(s.requestId),s.requestId=null),s.requestId=y(function(){s.sliderLastPos&&(m.each(s.instance.slides,function(t,e){var i=e.pos-s.instance.currPos;m.fancybox.setTranslate(e.$slide,{top:s.sliderLastPos.top,left:s.sliderLastPos.left+i*s.canvasWidth+i*e.opts.gutter})}),s.$container.addClass("fancybox-is-sliding"))});else if(10<Math.abs(s.distance)){if(s.canTap=!1,o.group.length<2&&s.opts.vertical?s.isSwiping="y":o.isDragging||!1===s.opts.vertical||"auto"===s.opts.vertical&&800<m(g).width()?s.isSwiping="x":(e=Math.abs(180*Math.atan2(s.distanceY,s.distanceX)/Math.PI),s.isSwiping=45<e&&e<135?"y":"x"),"y"===s.isSwiping&&m.fancybox.isMobile&&s.isScrollable)return void(s.isScrolling=!0);o.isDragging=s.isSwiping,s.startPoints=s.newPoints,m.each(o.slides,function(t,e){var i,n;m.fancybox.stop(e.$slide),i=m.fancybox.getTranslate(e.$slide),n=m.fancybox.getTranslate(o.$refs.stage),e.$slide.css({transform:"",opacity:"","transition-duration":""}).removeClass("fancybox-animated").removeClass(function(t,e){return(e.match(/(^|\s)fancybox-fx-\S+/g)||[]).join(" ")}),e.pos===o.current.pos&&(s.sliderStartPos.top=i.top-n.top,s.sliderStartPos.left=i.left-n.left),m.fancybox.setTranslate(e.$slide,{top:i.top-n.top,left:i.left-n.left})}),o.SlideShow&&o.SlideShow.isActive&&o.SlideShow.stop()}},i.prototype.onPan=function(){var t=this;v(t.newPoints[0],t.realPoints[0])<(m.fancybox.isMobile?10:5)?t.startPoints=t.newPoints:(t.canTap=!1,t.contentLastPos=t.limitMovement(),t.requestId&&b(t.requestId),t.requestId=y(function(){m.fancybox.setTranslate(t.$content,t.contentLastPos)}))},i.prototype.limitMovement=function(){var t,e,i,n,s,o,r=this,a=r.canvasWidth,l=r.canvasHeight,c=r.distanceX,h=r.distanceY,d=r.contentStartPos,u=d.left,p=d.top,f=d.width,g=d.height;return s=a<f?u+c:u,o=p+h,t=Math.max(0,.5*a-.5*f),e=Math.max(0,.5*l-.5*g),i=Math.min(a-f,.5*a-.5*f),n=Math.min(l-g,.5*l-.5*g),0<c&&t<s&&(s=t-1+Math.pow(-t+u+c,.8)||0),c<0&&s<i&&(s=i+1-Math.pow(i-u-c,.8)||0),0<h&&e<o&&(o=e-1+Math.pow(-e+p+h,.8)||0),h<0&&o<n&&(o=n+1-Math.pow(n-p-h,.8)||0),{top:o,left:s}},i.prototype.limitPosition=function(t,e,i,n){var s=this.canvasWidth,o=this.canvasHeight;return t=s<i?(t=0<t?0:t)<s-i?s-i:t:Math.max(0,s/2-i/2),{top:e=o<n?(e=0<e?0:e)<o-n?o-n:e:Math.max(0,o/2-n/2),left:t}},i.prototype.onZoom=function(){var t=this,e=t.contentStartPos,i=e.width,n=e.height,s=e.left,o=e.top,r=v(t.newPoints[0],t.newPoints[1])/t.startDistanceBetweenFingers,a=Math.floor(i*r),l=Math.floor(n*r),c=(i-a)*t.percentageOfImageAtPinchPointX,h=(n-l)*t.percentageOfImageAtPinchPointY,d=(t.newPoints[0].x+t.newPoints[1].x)/2-m(g).scrollLeft(),u=(t.newPoints[0].y+t.newPoints[1].y)/2-m(g).scrollTop(),p=d-t.centerPointStartX,f={top:o+(h+(u-t.centerPointStartY)),left:s+(c+p),scaleX:r,scaleY:r};t.canTap=!1,t.newWidth=a,t.newHeight=l,t.contentLastPos=f,t.requestId&&b(t.requestId),t.requestId=y(function(){m.fancybox.setTranslate(t.$content,t.contentLastPos)})},i.prototype.ontouchend=function(t){var e=this,i=e.isSwiping,n=e.isPanning,s=e.isZooming,o=e.isScrolling;if(e.endPoints=h(t),e.dMs=Math.max((new Date).getTime()-e.startTime,1),e.$container.removeClass("fancybox-is-grabbing"),m(l).off(".fb.touch"),l.removeEventListener("scroll",e.onscroll,!0),e.requestId&&(b(e.requestId),e.requestId=null),e.isSwiping=!1,e.isPanning=!1,e.isZooming=!1,e.isScrolling=!1,e.instance.isDragging=!1,e.canTap)return e.onTap(t);e.speed=100,e.velocityX=e.distanceX/e.dMs*.5,e.velocityY=e.distanceY/e.dMs*.5,n?e.endPanning():s?e.endZooming():e.endSwiping(i,o)},i.prototype.endSwiping=function(t,e){var i=this,n=!1,s=i.instance.group.length,o=Math.abs(i.distanceX),r="x"==t&&1<s&&(130<i.dMs&&10<o||50<o);i.sliderLastPos=null,"y"==t&&!e&&50<Math.abs(i.distanceY)?(m.fancybox.animate(i.instance.current.$slide,{top:i.sliderStartPos.top+i.distanceY+150*i.velocityY,opacity:0},200),n=i.instance.close(!0,250)):r&&0<i.distanceX?n=i.instance.previous(300):r&&i.distanceX<0&&(n=i.instance.next(300)),!1!==n||"x"!=t&&"y"!=t||i.instance.centerSlide(200),i.$container.removeClass("fancybox-is-sliding")},i.prototype.endPanning=function(){var t,e,i,n=this;n.contentLastPos&&(e=!1===n.opts.momentum||350<n.dMs?(t=n.contentLastPos.left,n.contentLastPos.top):(t=n.contentLastPos.left+500*n.velocityX,n.contentLastPos.top+500*n.velocityY),(i=n.limitPosition(t,e,n.contentStartPos.width,n.contentStartPos.height)).width=n.contentStartPos.width,i.height=n.contentStartPos.height,m.fancybox.animate(n.$content,i,366))},i.prototype.endZooming=function(){var t,e,i,n,s=this,o=s.instance.current,r=s.newWidth,a=s.newHeight;s.contentLastPos&&(t=s.contentLastPos.left,n={top:e=s.contentLastPos.top,left:t,width:r,height:a,scaleX:1,scaleY:1},m.fancybox.setTranslate(s.$content,n),r<s.canvasWidth&&a<s.canvasHeight?s.instance.scaleToFit(150):r>o.width||a>o.height?s.instance.scaleToActual(s.centerPointStartX,s.centerPointStartY,150):(i=s.limitPosition(t,e,r,a),m.fancybox.animate(s.$content,i,150)))},i.prototype.onTap=function(i){function t(t){var e=r.opts[t];if(m.isFunction(e)&&(e=e.apply(o,[r,i])),e)switch(e){case"close":o.close(n.startEvent);break;case"toggleControls":o.toggleControls();break;case"next":o.next();break;case"nextOrClose":1<o.group.length?o.next():o.close(n.startEvent);break;case"zoom":"image"==r.type&&(r.isLoaded||r.$ghost)&&(o.canPan()?o.scaleToFit():o.isScaledDown()?o.scaleToActual(l,c):o.group.length<2&&o.close(n.startEvent))}}var e,n=this,s=m(i.target),o=n.instance,r=o.current,a=i&&h(i)||n.startPoints,l=a[0]?a[0].x-m(g).scrollLeft()-n.stagePos.left:0,c=a[0]?a[0].y-m(g).scrollTop()-n.stagePos.top:0;if((!i.originalEvent||2!=i.originalEvent.button)&&(s.is("img")||!(l>s[0].clientWidth+s.offset().left))){if(s.is(".fancybox-bg,.fancybox-inner,.fancybox-outer,.fancybox-container"))e="Outside";else if(s.is(".fancybox-slide"))e="Slide";else{if(!o.current.$content||!o.current.$content.find(s).addBack().filter(s).length)return;e="Content"}if(n.tapped){if(clearTimeout(n.tapped),n.tapped=null,50<Math.abs(l-n.tapX)||50<Math.abs(c-n.tapY))return this;t("dblclick"+e)}else n.tapX=l,n.tapY=c,r.opts["dblclick"+e]&&r.opts["dblclick"+e]!==r.opts["click"+e]?n.tapped=setTimeout(function(){n.tapped=null,o.isAnimating||t("click"+e)},500):t("click"+e);return this}},m(l).on("onActivate.fb",function(t,e){e&&!e.Guestures&&(e.Guestures=new i(e))}).on("beforeClose.fb",function(t,e){e&&e.Guestures&&e.Guestures.destroy()})}(window,document,jQuery),function(r,a){"use strict";a.extend(!0,a.fancybox.defaults,{btnTpl:{slideShow:'<button data-fancybox-play class="fancybox-button fancybox-button--play" title="{{PLAY_START}}"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M6.5 5.4v13.2l11-6.6z"/></svg><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M8.33 5.75h2.2v12.5h-2.2V5.75zm5.15 0h2.2v12.5h-2.2V5.75z"/></svg></button>'},slideShow:{autoStart:!1,speed:3e3,progress:!0}});function i(t){this.instance=t,this.init()}a.extend(i.prototype,{timer:null,isActive:!1,$button:null,init:function(){var t=this,e=t.instance,i=e.group[e.currIndex].opts.slideShow;t.$button=e.$refs.toolbar.find("[data-fancybox-play]").on("click",function(){t.toggle()}),e.group.length<2||!i?t.$button.hide():i.progress&&(t.$progress=a('<div class="fancybox-progress"></div>').appendTo(e.$refs.inner))},set:function(t){var e=this,i=e.instance,n=i.current;n&&(!0===t||n.opts.loop||i.currIndex<i.group.length-1)?e.isActive&&"video"!==n.contentType&&(e.$progress&&a.fancybox.animate(e.$progress.show(),{scaleX:1},n.opts.slideShow.speed),e.timer=setTimeout(function(){i.current.opts.loop||i.current.index!=i.group.length-1?i.next():i.jumpTo(0)},n.opts.slideShow.speed)):(e.stop(),i.idleSecondsCounter=0,i.showControls())},clear:function(){clearTimeout(this.timer),this.timer=null,this.$progress&&this.$progress.removeAttr("style").hide()},start:function(){var t=this,e=t.instance.current;e&&(t.$button.attr("title",(e.opts.i18n[e.opts.lang]||e.opts.i18n.en).PLAY_STOP).removeClass("fancybox-button--play").addClass("fancybox-button--pause"),t.isActive=!0,e.isComplete&&t.set(!0),t.instance.trigger("onSlideShowChange",!0))},stop:function(){var t=this,e=t.instance.current;t.clear(),t.$button.attr("title",(e.opts.i18n[e.opts.lang]||e.opts.i18n.en).PLAY_START).removeClass("fancybox-button--pause").addClass("fancybox-button--play"),t.isActive=!1,t.instance.trigger("onSlideShowChange",!1),t.$progress&&t.$progress.removeAttr("style").hide()},toggle:function(){this.isActive?this.stop():this.start()}}),a(r).on({"onInit.fb":function(t,e){e&&!e.SlideShow&&(e.SlideShow=new i(e))},"beforeShow.fb":function(t,e,i,n){var s=e&&e.SlideShow;n?s&&i.opts.slideShow.autoStart&&s.start():s&&s.isActive&&s.clear()},"afterShow.fb":function(t,e,i){var n=e&&e.SlideShow;n&&n.isActive&&n.set()},"afterKeydown.fb":function(t,e,i,n,s){var o=e&&e.SlideShow;!o||!i.opts.slideShow||80!==s&&32!==s||a(r.activeElement).is("button,a,input")||(n.preventDefault(),o.toggle())},"beforeClose.fb onDeactivate.fb":function(t,e){var i=e&&e.SlideShow;i&&i.stop()}}),a(r).on("visibilitychange",function(){var t=a.fancybox.getInstance(),e=t&&t.SlideShow;e&&e.isActive&&(r.hidden?e.clear():e.set())})}(document,jQuery),function(o,i){"use strict";var n=function(){for(var t=[["requestFullscreen","exitFullscreen","fullscreenElement","fullscreenEnabled","fullscreenchange","fullscreenerror"],["webkitRequestFullscreen","webkitExitFullscreen","webkitFullscreenElement","webkitFullscreenEnabled","webkitfullscreenchange","webkitfullscreenerror"],["webkitRequestFullScreen","webkitCancelFullScreen","webkitCurrentFullScreenElement","webkitCancelFullScreen","webkitfullscreenchange","webkitfullscreenerror"],["mozRequestFullScreen","mozCancelFullScreen","mozFullScreenElement","mozFullScreenEnabled","mozfullscreenchange","mozfullscreenerror"],["msRequestFullscreen","msExitFullscreen","msFullscreenElement","msFullscreenEnabled","MSFullscreenChange","MSFullscreenError"]],e={},i=0;i<t.length;i++){var n=t[i];if(n&&n[1]in o){for(var s=0;s<n.length;s++)e[t[0][s]]=n[s];return e}}return!1}();if(n){var s={request:function(t){(t=t||o.documentElement)[n.requestFullscreen](t.ALLOW_KEYBOARD_INPUT)},exit:function(){o[n.exitFullscreen]()},toggle:function(t){t=t||o.documentElement,this.isFullscreen()?this.exit():this.request(t)},isFullscreen:function(){return Boolean(o[n.fullscreenElement])},enabled:function(){return Boolean(o[n.fullscreenEnabled])}};i.extend(!0,i.fancybox.defaults,{btnTpl:{fullScreen:'<button data-fancybox-fullscreen class="fancybox-button fancybox-button--fsenter" title="{{FULL_SCREEN}}"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M7 14H5v5h5v-2H7v-3zm-2-4h2V7h3V5H5v5zm12 7h-3v2h5v-5h-2v3zM14 5v2h3v3h2V5h-5z"/></svg><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M5 16h3v3h2v-5H5zm3-8H5v2h5V5H8zm6 11h2v-3h3v-2h-5zm2-11V5h-2v5h5V8z"/></svg></button>'},fullScreen:{autoStart:!1}}),i(o).on(n.fullscreenchange,function(){var t=s.isFullscreen(),e=i.fancybox.getInstance();e&&(e.current&&"image"===e.current.type&&e.isAnimating&&(e.isAnimating=!1,e.update(!0,!0,0),e.isComplete||e.complete()),e.trigger("onFullscreenChange",t),e.$refs.container.toggleClass("fancybox-is-fullscreen",t),e.$refs.toolbar.find("[data-fancybox-fullscreen]").toggleClass("fancybox-button--fsenter",!t).toggleClass("fancybox-button--fsexit",t))})}i(o).on({"onInit.fb":function(t,e){n?e&&e.group[e.currIndex].opts.fullScreen?(e.$refs.container.on("click.fb-fullscreen","[data-fancybox-fullscreen]",function(t){t.stopPropagation(),t.preventDefault(),s.toggle()}),e.opts.fullScreen&&!0===e.opts.fullScreen.autoStart&&s.request(),e.FullScreen=s):e&&e.$refs.toolbar.find("[data-fancybox-fullscreen]").hide():e.$refs.toolbar.find("[data-fancybox-fullscreen]").remove()},"afterKeydown.fb":function(t,e,i,n,s){e&&e.FullScreen&&70===s&&(n.preventDefault(),e.FullScreen.toggle())},"beforeClose.fb":function(t,e){e&&e.FullScreen&&e.$refs.container.hasClass("fancybox-is-fullscreen")&&s.exit()}})}(document,jQuery),function(t,o){"use strict";var r="fancybox-thumbs";o.fancybox.defaults=o.extend(!0,{btnTpl:{thumbs:'<button data-fancybox-thumbs class="fancybox-button fancybox-button--thumbs" title="{{THUMBS}}"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M14.59 14.59h3.76v3.76h-3.76v-3.76zm-4.47 0h3.76v3.76h-3.76v-3.76zm-4.47 0h3.76v3.76H5.65v-3.76zm8.94-4.47h3.76v3.76h-3.76v-3.76zm-4.47 0h3.76v3.76h-3.76v-3.76zm-4.47 0h3.76v3.76H5.65v-3.76zm8.94-4.47h3.76v3.76h-3.76V5.65zm-4.47 0h3.76v3.76h-3.76V5.65zm-4.47 0h3.76v3.76H5.65V5.65z"/></svg></button>'},thumbs:{autoStart:!1,hideOnClose:!0,parentEl:".fancybox-container",axis:"y"}},o.fancybox.defaults);function n(t){this.init(t)}o.extend(n.prototype,{$button:null,$grid:null,$list:null,isVisible:!1,isActive:!1,init:function(t){var e=this,i=t.group,n=0;e.instance=t,e.opts=i[t.currIndex].opts.thumbs,(t.Thumbs=e).$button=t.$refs.toolbar.find("[data-fancybox-thumbs]");for(var s=0,o=i.length;s<o&&(i[s].thumb&&n++,!(1<n));s++);1<n&&e.opts?(e.$button.removeAttr("style").on("click",function(){e.toggle()}),e.isActive=!0):e.$button.hide()},create:function(){var i,t=this,e=t.instance,n=t.opts.parentEl,s=[];t.$grid||(t.$grid=o('<div class="'+r+" "+r+"-"+t.opts.axis+'"></div>').appendTo(e.$refs.container.find(n).addBack().filter(n)),t.$grid.on("click","a",function(){e.jumpTo(o(this).attr("data-index"))})),t.$list||(t.$list=o('<div class="'+r+'__list">').appendTo(t.$grid)),o.each(e.group,function(t,e){(i=e.thumb)||"image"!==e.type||(i=e.src),s.push('<a href="javascript:;" tabindex="0" data-index="'+t+'"'+(i&&i.length?' style="background-image:url('+i+')"':'class="fancybox-thumbs-missing"')+"></a>")}),t.$list[0].innerHTML=s.join(""),"x"===t.opts.axis&&t.$list.width(parseInt(t.$grid.css("padding-right"),10)+e.group.length*t.$list.children().eq(0).outerWidth(!0))},focus:function(t){var e,i,n=this,s=n.$list,o=n.$grid;n.instance.current&&(i=(e=s.children().removeClass("fancybox-thumbs-active").filter('[data-index="'+n.instance.current.index+'"]').addClass("fancybox-thumbs-active")).position(),"y"===n.opts.axis&&(i.top<0||i.top>s.height()-e.outerHeight())?s.stop().animate({scrollTop:s.scrollTop()+i.top},t):"x"===n.opts.axis&&(i.left<o.scrollLeft()||i.left>o.scrollLeft()+(o.width()-e.outerWidth()))&&s.parent().stop().animate({scrollLeft:i.left},t))},update:function(){var t=this;t.instance.$refs.container.toggleClass("fancybox-show-thumbs",this.isVisible),t.isVisible?(t.$grid||t.create(),t.instance.trigger("onThumbsShow"),t.focus(0)):t.$grid&&t.instance.trigger("onThumbsHide"),t.instance.update()},hide:function(){this.isVisible=!1,this.update()},show:function(){this.isVisible=!0,this.update()},toggle:function(){this.isVisible=!this.isVisible,this.update()}}),o(t).on({"onInit.fb":function(t,e){var i;!e||e.Thumbs||(i=new n(e)).isActive&&!0===i.opts.autoStart&&i.show()},"beforeShow.fb":function(t,e,i,n){var s=e&&e.Thumbs;s&&s.isVisible&&s.focus(n?0:250)},"afterKeydown.fb":function(t,e,i,n,s){var o=e&&e.Thumbs;o&&o.isActive&&71===s&&(n.preventDefault(),o.toggle())},"beforeClose.fb":function(t,e){var i=e&&e.Thumbs;i&&i.isVisible&&!1!==i.opts.hideOnClose&&i.$grid.hide()}})}(document,jQuery),function(t,o){"use strict";o.extend(!0,o.fancybox.defaults,{btnTpl:{share:'<button data-fancybox-share class="fancybox-button fancybox-button--share" title="{{SHARE}}"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M2.55 19c1.4-8.4 9.1-9.8 11.9-9.8V5l7 7-7 6.3v-3.5c-2.8 0-10.5 2.1-11.9 4.2z"/></svg></button>'},share:{url:function(t,e){return!t.currentHash&&"inline"!==e.type&&"html"!==e.type&&(e.origSrc||e.src)||window.location},tpl:'<div class="fancybox-share"><h1>{{SHARE}}</h1><p><a class="fancybox-share__button fancybox-share__button--fb" href="https://www.facebook.com/sharer/sharer.php?u={{url}}"><svg viewBox="0 0 512 512" xmlns="http://www.w3.org/2000/svg"><path d="m287 456v-299c0-21 6-35 35-35h38v-63c-7-1-29-3-55-3-54 0-91 33-91 94v306m143-254h-205v72h196" /></svg><span>Facebook</span></a><a class="fancybox-share__button fancybox-share__button--tw" href="https://twitter.com/intent/tweet?url={{url}}&text={{descr}}"><svg viewBox="0 0 512 512" xmlns="http://www.w3.org/2000/svg"><path d="m456 133c-14 7-31 11-47 13 17-10 30-27 37-46-15 10-34 16-52 20-61-62-157-7-141 75-68-3-129-35-169-85-22 37-11 86 26 109-13 0-26-4-37-9 0 39 28 72 65 80-12 3-25 4-37 2 10 33 41 57 77 57-42 30-77 38-122 34 170 111 378-32 359-208 16-11 30-25 41-42z" /></svg><span>Twitter</span></a><a class="fancybox-share__button fancybox-share__button--pt" href="https://www.pinterest.com/pin/create/button/?url={{url}}&description={{descr}}&media={{media}}"><svg viewBox="0 0 512 512" xmlns="http://www.w3.org/2000/svg"><path d="m265 56c-109 0-164 78-164 144 0 39 15 74 47 87 5 2 10 0 12-5l4-19c2-6 1-8-3-13-9-11-15-25-15-45 0-58 43-110 113-110 62 0 96 38 96 88 0 67-30 122-73 122-24 0-42-19-36-44 6-29 20-60 20-81 0-19-10-35-31-35-25 0-44 26-44 60 0 21 7 36 7 36l-30 125c-8 37-1 83 0 87 0 3 4 4 5 2 2-3 32-39 42-75l16-64c8 16 31 29 56 29 74 0 124-67 124-157 0-69-58-132-146-132z" fill="#fff"/></svg><span>Pinterest</span></a></p><p><input class="fancybox-share__input" type="text" value="{{url_raw}}" onclick="select()" /></p></div>'}}),o(t).on("click","[data-fancybox-share]",function(){var t,e,i,n=o.fancybox.getInstance(),s=n.current||null;s&&("function"===o.type(s.opts.share.url)&&(t=s.opts.share.url.apply(s,[n,s])),e=s.opts.share.tpl.replace(/\{\{media\}\}/g,"image"===s.type?encodeURIComponent(s.src):"").replace(/\{\{url\}\}/g,encodeURIComponent(t)).replace(/\{\{url_raw\}\}/g,(i={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#39;","/":"&#x2F;","`":"&#x60;","=":"&#x3D;"},String(t).replace(/[&<>"'`=\/]/g,function(t){return i[t]}))).replace(/\{\{descr\}\}/g,n.$caption?encodeURIComponent(n.$caption.text()):""),o.fancybox.open({src:n.translate(n,e),type:"html",opts:{touch:!1,animationEffect:!1,afterLoad:function(t,e){n.$refs.container.one("beforeClose.fb",function(){t.close(null,0)}),e.$content.find(".fancybox-share__button").click(function(){return window.open(this.href,"Share","width=550, height=450"),!1})},mobile:{autoFocus:!1}}}))})}(document,jQuery),function(o,r,s){"use strict";function a(){var t=o.location.hash.substr(1),e=t.split("-"),i=1<e.length&&/^\+?\d+$/.test(e[e.length-1])&&parseInt(e.pop(-1),10)||1;return{hash:t,index:i<1?1:i,gallery:e.join("-")}}function e(t){""!==t.gallery&&s("[data-fancybox='"+s.escapeSelector(t.gallery)+"']").eq(t.index-1).focus().trigger("click.fb-start")}function l(t){var e,i;return!!t&&(""!==(i=(e=t.current?t.current.opts:t.opts).hash||(e.$orig?e.$orig.data("fancybox")||e.$orig.data("fancybox-trigger"):""))&&i)}s.escapeSelector||(s.escapeSelector=function(t){return(t+"").replace(/([\0-\x1f\x7f]|^-?\d)|^-$|[^\x80-\uFFFF\w-]/g,function(t,e){return e?"\0"===t?"�":t.slice(0,-1)+"\\"+t.charCodeAt(t.length-1).toString(16)+" ":"\\"+t})}),s(function(){!1!==s.fancybox.defaults.hash&&(s(r).on({"onInit.fb":function(t,e){var i,n;!1!==e.group[e.currIndex].opts.hash&&(i=a(),(n=l(e))&&i.gallery&&n==i.gallery&&(e.currIndex=i.index-1))},"beforeShow.fb":function(t,e,i,n){var s;i&&!1!==i.opts.hash&&(s=l(e))&&(e.currentHash=s+(1<e.group.length?"-"+(i.index+1):""),o.location.hash!=="#"+e.currentHash&&(n&&!e.origHash&&(e.origHash=o.location.hash),e.hashTimer&&clearTimeout(e.hashTimer),e.hashTimer=setTimeout(function(){"replaceState"in o.history?(o.history[n?"pushState":"replaceState"]({},r.title,o.location.pathname+o.location.search+"#"+e.currentHash),n&&(e.hasCreatedHistory=!0)):o.location.hash=e.currentHash,e.hashTimer=null},300)))},"beforeClose.fb":function(t,e,i){i&&!1!==i.opts.hash&&(clearTimeout(e.hashTimer),e.currentHash&&e.hasCreatedHistory?o.history.back():e.currentHash&&("replaceState"in o.history?o.history.replaceState({},r.title,o.location.pathname+o.location.search+(e.origHash||"")):o.location.hash=e.origHash),e.currentHash=null)}}),s(o).on("hashchange.fb",function(){var t=a(),n=null;s.each(s(".fancybox-container").get().reverse(),function(t,e){var i=s(e).data("FancyBox");if(i&&i.currentHash)return n=i,!1}),n?n.currentHash===t.gallery+"-"+t.index||1===t.index&&n.currentHash==t.gallery||(n.currentHash=null,n.close()):""!==t.gallery&&e(t)}),setTimeout(function(){s.fancybox.getInstance()||e(a())},50))})}(window,document,jQuery),function(t,e){"use strict";var s=(new Date).getTime();e(t).on({"onInit.fb":function(t,n,e){n.$refs.stage.on("mousewheel DOMMouseScroll wheel MozMousePixelScroll",function(t){var e=n.current,i=(new Date).getTime();n.group.length<2||!1===e.opts.wheel||"auto"===e.opts.wheel&&"image"!==e.type||(t.preventDefault(),t.stopPropagation(),e.$slide.hasClass("fancybox-animated")||(t=t.originalEvent||t,i-s<250||(s=i,n[(-t.deltaY||-t.deltaX||t.wheelDelta||-t.detail)<0?"next":"previous"]())))})}})}(document,jQuery),function(r,o,d){var f=r.requestAnimationFrame||r.webkitRequestAnimationFrame||r.mozRequestAnimationFrame||r.oRequestAnimationFrame||r.msRequestAnimationFrame||function(t){r.setTimeout(t,1e3/60)},g=function(){var n={},s=o.createElement("div").style,e=function(){for(var t=["t","webkitT","MozT","msT","OT"],e=0,i=t.length;e<i;e++)if(t[e]+"ransform"in s)return t[e].substr(0,t[e].length-1);return!1}();function t(t){return!1!==e&&(""===e?t:e+t.charAt(0).toUpperCase()+t.substr(1))}n.getTime=Date.now||function(){return(new Date).getTime()},n.extend=function(t,e){for(var i in e)t[i]=e[i]},n.addEvent=function(t,e,i,n){t.addEventListener(e,i,!!n)},n.removeEvent=function(t,e,i,n){t.removeEventListener(e,i,!!n)},n.prefixPointerEvent=function(t){return r.MSPointerEvent?"MSPointer"+t.charAt(7).toUpperCase()+t.substr(8):t},n.momentum=function(t,e,i,n,s,o){var r,a,l=t-e,c=d.abs(l)/i;return a=c/(o=void 0===o?6e-4:o),(r=t+c*c/(2*o)*(l<0?-1:1))<n?(r=s?n-s/2.5*(c/8):n,a=(l=d.abs(r-t))/c):0<r&&(r=s?s/2.5*(c/8):0,a=(l=d.abs(t)+r)/c),{destination:d.round(r),duration:a}};var i=t("transform");return n.extend(n,{hasTransform:!1!==i,hasPerspective:t("perspective")in s,hasTouch:"ontouchstart"in r,hasPointer:!(!r.PointerEvent&&!r.MSPointerEvent),hasTransition:t("transition")in s}),n.isBadAndroid=function(){var t=r.navigator.appVersion;if(!/Android/.test(t)||/Chrome\/\d/.test(t))return!1;var e=t.match(/Safari\/(\d+.\d)/);return!(e&&"object"==typeof e&&2<=e.length)||parseFloat(e[1])<535.19}(),n.extend(n.style={},{transform:i,transitionTimingFunction:t("transitionTimingFunction"),transitionDuration:t("transitionDuration"),transitionDelay:t("transitionDelay"),transformOrigin:t("transformOrigin")}),n.hasClass=function(t,e){return new RegExp("(^|\\s)"+e+"(\\s|$)").test(t.className)},n.addClass=function(t,e){if(!n.hasClass(t,e)){var i=t.className.split(" ");i.push(e),t.className=i.join(" ")}},n.removeClass=function(t,e){if(n.hasClass(t,e)){var i=new RegExp("(^|\\s)"+e+"(\\s|$)","g");t.className=t.className.replace(i," ")}},n.offset=function(t){for(var e=-t.offsetLeft,i=-t.offsetTop;t=t.offsetParent;)e-=t.offsetLeft,i-=t.offsetTop;return{left:e,top:i}},n.preventDefaultException=function(t,e){for(var i in e)if(e[i].test(t[i]))return!0;return!1},n.extend(n.eventType={},{touchstart:1,touchmove:1,touchend:1,mousedown:2,mousemove:2,mouseup:2,pointerdown:3,pointermove:3,pointerup:3,MSPointerDown:3,MSPointerMove:3,MSPointerUp:3}),n.extend(n.ease={},{quadratic:{style:"cubic-bezier(0.25, 0.46, 0.45, 0.94)",fn:function(t){return t*(2-t)}},circular:{style:"cubic-bezier(0.1, 0.57, 0.1, 1)",fn:function(t){return d.sqrt(1- --t*t)}},back:{style:"cubic-bezier(0.175, 0.885, 0.32, 1.275)",fn:function(t){return--t*t*(5*t+4)+1}},bounce:{style:"",fn:function(t){return(t/=1)<1/2.75?7.5625*t*t:t<2/2.75?7.5625*(t-=1.5/2.75)*t+.75:t<2.5/2.75?7.5625*(t-=2.25/2.75)*t+.9375:7.5625*(t-=2.625/2.75)*t+.984375}},elastic:{style:"",fn:function(t){return 0===t?0:1==t?1:.4*d.pow(2,-10*t)*d.sin((t-.055)*(2*d.PI)/.22)+1}}}),n.tap=function(t,e){var i=o.createEvent("Event");i.initEvent(e,!0,!0),i.pageX=t.pageX,i.pageY=t.pageY,t.target.dispatchEvent(i)},n.click=function(t){var e,i=t.target;/(SELECT|INPUT|TEXTAREA)/i.test(i.tagName)||((e=o.createEvent(r.MouseEvent?"MouseEvents":"Event")).initEvent("click",!0,!0),e.view=t.view||r,e.detail=1,e.screenX=i.screenX||0,e.screenY=i.screenY||0,e.clientX=i.clientX||0,e.clientY=i.clientY||0,e.ctrlKey=!!t.ctrlKey,e.altKey=!!t.altKey,e.shiftKey=!!t.shiftKey,e.metaKey=!!t.metaKey,e.button=0,e.relatedTarget=null,e._constructed=!0,i.dispatchEvent(e))},n}();function t(t,e){for(var i in this.wrapper="string"==typeof t?o.querySelector(t):t,this.scroller=this.wrapper.children[0],this.scrollerStyle=this.scroller.style,this.options={resizeScrollbars:!0,mouseWheelSpeed:20,snapThreshold:.334,disablePointer:!g.hasPointer,disableTouch:g.hasPointer||!g.hasTouch,disableMouse:g.hasPointer||g.hasTouch,startX:0,startY:0,scrollY:!0,directionLockThreshold:5,momentum:!0,bounce:!0,bounceTime:600,bounceEasing:"",preventDefault:!0,preventDefaultException:{tagName:/^(INPUT|TEXTAREA|BUTTON|SELECT|LABEL)$/},HWCompositing:!0,useTransition:!0,useTransform:!0,bindToWrapper:void 0===r.onmousedown},e)this.options[i]=e[i];this.translateZ=this.options.HWCompositing&&g.hasPerspective?" translateZ(0)":"",this.options.useTransition=g.hasTransition&&this.options.useTransition,this.options.useTransform=g.hasTransform&&this.options.useTransform,this.options.eventPassthrough=!0===this.options.eventPassthrough?"vertical":this.options.eventPassthrough,this.options.preventDefault=!this.options.eventPassthrough&&this.options.preventDefault,this.options.scrollY="vertical"!=this.options.eventPassthrough&&this.options.scrollY,this.options.scrollX="horizontal"!=this.options.eventPassthrough&&this.options.scrollX,this.options.freeScroll=this.options.freeScroll&&!this.options.eventPassthrough,this.options.directionLockThreshold=this.options.eventPassthrough?0:this.options.directionLockThreshold,this.options.bounceEasing="string"==typeof this.options.bounceEasing?g.ease[this.options.bounceEasing]||g.ease.circular:this.options.bounceEasing,this.options.resizePolling=void 0===this.options.resizePolling?60:this.options.resizePolling,!0===this.options.tap&&(this.options.tap="tap"),this.options.useTransition||this.options.useTransform||/relative|absolute/i.test(this.scrollerStyle.position)||(this.scrollerStyle.position="relative"),"scale"==this.options.shrinkScrollbars&&(this.options.useTransition=!1),this.options.invertWheelDirection=this.options.invertWheelDirection?-1:1,this.x=0,this.y=0,this.directionX=0,this.directionY=0,this._events={},this._init(),this.refresh(),this.scrollTo(this.options.startX,this.options.startY),this.enable()}function a(t,e,i){var n=o.createElement("div"),s=o.createElement("div");return!0===i&&(n.style.cssText="position:absolute;z-index:9999",s.style.cssText="-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;position:absolute;background:rgba(0,0,0,0.5);border:1px solid rgba(255,255,255,0.9);border-radius:3px"),s.className="iScrollIndicator",n.className="h"==t?(!0===i&&(n.style.cssText+=";height:7px;left:2px;right:2px;bottom:0",s.style.height="100%"),"iScrollHorizontalScrollbar"):(!0===i&&(n.style.cssText+=";width:7px;bottom:2px;top:2px;right:1px",s.style.width="100%"),"iScrollVerticalScrollbar"),n.style.cssText+=";overflow:hidden",e||(n.style.pointerEvents="none"),n.appendChild(s),n}function l(t,e){for(var i in this.wrapper="string"==typeof e.el?o.querySelector(e.el):e.el,this.wrapperStyle=this.wrapper.style,this.indicator=this.wrapper.children[0],this.indicatorStyle=this.indicator.style,this.scroller=t,this.options={listenX:!0,listenY:!0,interactive:!1,resize:!0,defaultScrollbars:!1,shrink:!1,fade:!1,speedRatioX:0,speedRatioY:0},e)this.options[i]=e[i];if(this.sizeRatioX=1,this.sizeRatioY=1,this.maxPosX=0,this.maxPosY=0,this.options.interactive&&(this.options.disableTouch||(g.addEvent(this.indicator,"touchstart",this),g.addEvent(r,"touchend",this)),this.options.disablePointer||(g.addEvent(this.indicator,g.prefixPointerEvent("pointerdown"),this),g.addEvent(r,g.prefixPointerEvent("pointerup"),this)),this.options.disableMouse||(g.addEvent(this.indicator,"mousedown",this),g.addEvent(r,"mouseup",this))),this.options.fade){this.wrapperStyle[g.style.transform]=this.scroller.translateZ;var n=g.style.transitionDuration;if(!n)return;this.wrapperStyle[n]=g.isBadAndroid?"0.0001ms":"0ms";var s=this;g.isBadAndroid&&f(function(){"0.0001ms"===s.wrapperStyle[n]&&(s.wrapperStyle[n]="0s")}),this.wrapperStyle.opacity="0"}}t.prototype={version:"5.2.0",_init:function(){this._initEvents(),(this.options.scrollbars||this.options.indicators)&&this._initIndicators(),this.options.mouseWheel&&this._initWheel(),this.options.snap&&this._initSnap(),this.options.keyBindings&&this._initKeys()},destroy:function(){this._initEvents(!0),clearTimeout(this.resizeTimeout),this.resizeTimeout=null,this._execEvent("destroy")},_transitionEnd:function(t){t.target==this.scroller&&this.isInTransition&&(this._transitionTime(),this.resetPosition(this.options.bounceTime)||(this.isInTransition=!1,this._execEvent("scrollEnd")))},_start:function(t){if((1==g.eventType[t.type]||0===(t.which?t.button:t.button<2?0:4==t.button?1:2))&&this.enabled&&(!this.initiated||g.eventType[t.type]===this.initiated)){!this.options.preventDefault||g.isBadAndroid||g.preventDefaultException(t.target,this.options.preventDefaultException)||t.preventDefault();var e,i=t.touches?t.touches[0]:t;this.initiated=g.eventType[t.type],this.moved=!1,this.distX=0,this.distY=0,this.directionX=0,this.directionY=0,this.directionLocked=0,this.startTime=g.getTime(),this.options.useTransition&&this.isInTransition?(this._transitionTime(),this.isInTransition=!1,e=this.getComputedPosition(),this._translate(d.round(e.x),d.round(e.y)),this._execEvent("scrollEnd")):!this.options.useTransition&&this.isAnimating&&(this.isAnimating=!1,this._execEvent("scrollEnd")),this.startX=this.x,this.startY=this.y,this.absStartX=this.x,this.absStartY=this.y,this.pointX=i.pageX,this.pointY=i.pageY,this._execEvent("beforeScrollStart")}},_move:function(t){if(this.enabled&&g.eventType[t.type]===this.initiated){this.options.preventDefault&&t.preventDefault();var e,i,n,s,o=t.touches?t.touches[0]:t,r=o.pageX-this.pointX,a=o.pageY-this.pointY,l=g.getTime();if(this.pointX=o.pageX,this.pointY=o.pageY,this.distX+=r,this.distY+=a,n=d.abs(this.distX),s=d.abs(this.distY),!(300<l-this.endTime&&n<10&&s<10)){if(this.directionLocked||this.options.freeScroll||(n>s+this.options.directionLockThreshold?this.directionLocked="h":s>=n+this.options.directionLockThreshold?this.directionLocked="v":this.directionLocked="n"),"h"==this.directionLocked){if("vertical"==this.options.eventPassthrough)t.preventDefault();else if("horizontal"==this.options.eventPassthrough)return void(this.initiated=!1);a=0}else if("v"==this.directionLocked){if("horizontal"==this.options.eventPassthrough)t.preventDefault();else if("vertical"==this.options.eventPassthrough)return void(this.initiated=!1);r=0}r=this.hasHorizontalScroll?r:0,a=this.hasVerticalScroll?a:0,e=this.x+r,i=this.y+a,(0<e||e<this.maxScrollX)&&(e=this.options.bounce?this.x+r/3:0<e?0:this.maxScrollX),(0<i||i<this.maxScrollY)&&(i=this.options.bounce?this.y+a/3:0<i?0:this.maxScrollY),this.directionX=0<r?-1:r<0?1:0,this.directionY=0<a?-1:a<0?1:0,this.moved||this._execEvent("scrollStart"),this.moved=!0,this._translate(e,i),300<l-this.startTime&&(this.startTime=l,this.startX=this.x,this.startY=this.y)}}},_end:function(t){if(this.enabled&&g.eventType[t.type]===this.initiated){this.options.preventDefault&&!g.preventDefaultException(t.target,this.options.preventDefaultException)&&t.preventDefault(),t.changedTouches&&t.changedTouches[0];var e,i,n=g.getTime()-this.startTime,s=d.round(this.x),o=d.round(this.y),r=d.abs(s-this.startX),a=d.abs(o-this.startY),l=0,c="";if(this.isInTransition=0,this.initiated=0,this.endTime=g.getTime(),!this.resetPosition(this.options.bounceTime)){if(this.scrollTo(s,o),!this.moved)return this.options.tap&&g.tap(t,this.options.tap),this.options.click&&g.click(t),void this._execEvent("scrollCancel");if(this._events.flick&&n<200&&r<100&&a<100)this._execEvent("flick");else{if(this.options.momentum&&n<300&&(e=this.hasHorizontalScroll?g.momentum(this.x,this.startX,n,this.maxScrollX,this.options.bounce?this.wrapperWidth:0,this.options.deceleration):{destination:s,duration:0},i=this.hasVerticalScroll?g.momentum(this.y,this.startY,n,this.maxScrollY,this.options.bounce?this.wrapperHeight:0,this.options.deceleration):{destination:o,duration:0},s=e.destination,o=i.destination,l=d.max(e.duration,i.duration),this.isInTransition=1),this.options.snap){var h=this._nearestSnap(s,o);this.currentPage=h,l=this.options.snapSpeed||d.max(d.max(d.min(d.abs(s-h.x),1e3),d.min(d.abs(o-h.y),1e3)),300),s=h.x,o=h.y,this.directionX=0,this.directionY=0,c=this.options.bounceEasing}if(s!=this.x||o!=this.y)return(0<s||s<this.maxScrollX||0<o||o<this.maxScrollY)&&(c=g.ease.quadratic),void this.scrollTo(s,o,l,c);this._execEvent("scrollEnd")}}}},_resize:function(){var t=this;clearTimeout(this.resizeTimeout),this.resizeTimeout=setTimeout(function(){t.refresh()},this.options.resizePolling)},resetPosition:function(t){var e=this.x,i=this.y;return t=t||0,!this.hasHorizontalScroll||0<this.x?e=0:this.x<this.maxScrollX&&(e=this.maxScrollX),!this.hasVerticalScroll||0<this.y?i=0:this.y<this.maxScrollY&&(i=this.maxScrollY),(e!=this.x||i!=this.y)&&(this.scrollTo(e,i,t,this.options.bounceEasing),!0)},disable:function(){this.enabled=!1},enable:function(){this.enabled=!0},refresh:function(){this.wrapper.offsetHeight,this.wrapperWidth=this.wrapper.clientWidth,this.wrapperHeight=this.wrapper.clientHeight,this.scrollerWidth=this.scroller.offsetWidth,this.scrollerHeight=this.scroller.offsetHeight,this.maxScrollX=this.wrapperWidth-this.scrollerWidth,this.maxScrollY=this.wrapperHeight-this.scrollerHeight,this.hasHorizontalScroll=this.options.scrollX&&this.maxScrollX<0,this.hasVerticalScroll=this.options.scrollY&&this.maxScrollY<0,this.hasHorizontalScroll||(this.maxScrollX=0,this.scrollerWidth=this.wrapperWidth),this.hasVerticalScroll||(this.maxScrollY=0,this.scrollerHeight=this.wrapperHeight),this.endTime=0,this.directionX=0,this.directionY=0,this.wrapperOffset=g.offset(this.wrapper),this._execEvent("refresh"),this.resetPosition()},on:function(t,e){this._events[t]||(this._events[t]=[]),this._events[t].push(e)},off:function(t,e){if(this._events[t]){var i=this._events[t].indexOf(e);-1<i&&this._events[t].splice(i,1)}},_execEvent:function(t){if(this._events[t]){var e=0,i=this._events[t].length;if(i)for(;e<i;e++)this._events[t][e].apply(this,[].slice.call(arguments,1))}},scrollBy:function(t,e,i,n){t=this.x+t,e=this.y+e,i=i||0,this.scrollTo(t,e,i,n)},scrollTo:function(t,e,i,n){n=n||g.ease.circular,this.isInTransition=this.options.useTransition&&0<i;var s=this.options.useTransition&&n.style;!i||s?(s&&(this._transitionTimingFunction(n.style),this._transitionTime(i)),this._translate(t,e)):this._animate(t,e,i,n.fn)},scrollToElement:function(t,e,i,n,s){if(t=t.nodeType?t:this.scroller.querySelector(t)){var o=g.offset(t);o.left-=this.wrapperOffset.left,o.top-=this.wrapperOffset.top,!0===i&&(i=d.round(t.offsetWidth/2-this.wrapper.offsetWidth/2)),!0===n&&(n=d.round(t.offsetHeight/2-this.wrapper.offsetHeight/2)),o.left-=i||0,o.top-=n||0,o.left=0<o.left?0:o.left<this.maxScrollX?this.maxScrollX:o.left,o.top=0<o.top?0:o.top<this.maxScrollY?this.maxScrollY:o.top,e=null==e||"auto"===e?d.max(d.abs(this.x-o.left),d.abs(this.y-o.top)):e,this.scrollTo(o.left,o.top,e,s)}},_transitionTime:function(t){if(this.options.useTransition){t=t||0;var e=g.style.transitionDuration;if(e){if(this.scrollerStyle[e]=t+"ms",!t&&g.isBadAndroid){this.scrollerStyle[e]="0.0001ms";var i=this;f(function(){"0.0001ms"===i.scrollerStyle[e]&&(i.scrollerStyle[e]="0s")})}if(this.indicators)for(var n=this.indicators.length;n--;)this.indicators[n].transitionTime(t)}}},_transitionTimingFunction:function(t){if(this.scrollerStyle[g.style.transitionTimingFunction]=t,this.indicators)for(var e=this.indicators.length;e--;)this.indicators[e].transitionTimingFunction(t)},_translate:function(t,e){if(this.options.useTransform?this.scrollerStyle[g.style.transform]="translate("+t+"px,"+e+"px)"+this.translateZ:(t=d.round(t),e=d.round(e),this.scrollerStyle.left=t+"px",this.scrollerStyle.top=e+"px"),this.x=t,this.y=e,this.indicators)for(var i=this.indicators.length;i--;)this.indicators[i].updatePosition()},_initEvents:function(t){var e=t?g.removeEvent:g.addEvent,i=this.options.bindToWrapper?this.wrapper:r;e(r,"orientationchange",this),e(r,"resize",this),this.options.click&&e(this.wrapper,"click",this,!0),this.options.disableMouse||(e(this.wrapper,"mousedown",this),e(i,"mousemove",this),e(i,"mousecancel",this),e(i,"mouseup",this)),g.hasPointer&&!this.options.disablePointer&&(e(this.wrapper,g.prefixPointerEvent("pointerdown"),this),e(i,g.prefixPointerEvent("pointermove"),this),e(i,g.prefixPointerEvent("pointercancel"),this),e(i,g.prefixPointerEvent("pointerup"),this)),g.hasTouch&&!this.options.disableTouch&&(e(this.wrapper,"touchstart",this),e(i,"touchmove",this),e(i,"touchcancel",this),e(i,"touchend",this)),e(this.scroller,"transitionend",this),e(this.scroller,"webkitTransitionEnd",this),e(this.scroller,"oTransitionEnd",this),e(this.scroller,"MSTransitionEnd",this)},getComputedPosition:function(){var t,e,i=r.getComputedStyle(this.scroller,null);return e=this.options.useTransform?(t=+((i=i[g.style.transform].split(")")[0].split(", "))[12]||i[4]),+(i[13]||i[5])):(t=+i.left.replace(/[^-\d.]/g,""),+i.top.replace(/[^-\d.]/g,"")),{x:t,y:e}},_initIndicators:function(){var t,e=this.options.interactiveScrollbars,i="string"!=typeof this.options.scrollbars,n=[],s=this;this.indicators=[],this.options.scrollbars&&(this.options.scrollY&&(t={el:a("v",e,this.options.scrollbars),interactive:e,defaultScrollbars:!0,customStyle:i,resize:this.options.resizeScrollbars,shrink:this.options.shrinkScrollbars,fade:this.options.fadeScrollbars,listenX:!1},this.wrapper.appendChild(t.el),n.push(t)),this.options.scrollX&&(t={el:a("h",e,this.options.scrollbars),interactive:e,defaultScrollbars:!0,customStyle:i,resize:this.options.resizeScrollbars,shrink:this.options.shrinkScrollbars,fade:this.options.fadeScrollbars,listenY:!1},this.wrapper.appendChild(t.el),n.push(t))),this.options.indicators&&(n=n.concat(this.options.indicators));for(var o=n.length;o--;)this.indicators.push(new l(this,n[o]));function r(t){if(s.indicators)for(var e=s.indicators.length;e--;)t.call(s.indicators[e])}this.options.fadeScrollbars&&(this.on("scrollEnd",function(){r(function(){this.fade()})}),this.on("scrollCancel",function(){r(function(){this.fade()})}),this.on("scrollStart",function(){r(function(){this.fade(1)})}),this.on("beforeScrollStart",function(){r(function(){this.fade(1,!0)})})),this.on("refresh",function(){r(function(){this.refresh()})}),this.on("destroy",function(){r(function(){this.destroy()}),delete this.indicators})},_initWheel:function(){g.addEvent(this.wrapper,"wheel",this),g.addEvent(this.wrapper,"mousewheel",this),g.addEvent(this.wrapper,"DOMMouseScroll",this),this.on("destroy",function(){clearTimeout(this.wheelTimeout),this.wheelTimeout=null,g.removeEvent(this.wrapper,"wheel",this),g.removeEvent(this.wrapper,"mousewheel",this),g.removeEvent(this.wrapper,"DOMMouseScroll",this)})},_wheel:function(t){if(this.enabled){r.navigator.userAgent.match(/(MSIE|Trident)/)||t.preventDefault();var e,i,n,s,o=this;if(void 0===this.wheelTimeout&&o._execEvent("scrollStart"),clearTimeout(this.wheelTimeout),this.wheelTimeout=setTimeout(function(){o.options.snap||o._execEvent("scrollEnd"),o.wheelTimeout=void 0},400),"deltaX"in t)i=1===t.deltaMode?(e=-t.deltaX*this.options.mouseWheelSpeed,-t.deltaY*this.options.mouseWheelSpeed):(e=-t.deltaX,-t.deltaY);else if("wheelDeltaX"in t)e=t.wheelDeltaX/120*this.options.mouseWheelSpeed,i=t.wheelDeltaY/120*this.options.mouseWheelSpeed;else if("wheelDelta"in t)e=i=t.wheelDelta/120*this.options.mouseWheelSpeed;else{if(!("detail"in t))return;e=i=-t.detail/3*this.options.mouseWheelSpeed}if(e*=this.options.invertWheelDirection,i*=this.options.invertWheelDirection,this.hasVerticalScroll||(e=i,i=0),this.options.snap)return n=this.currentPage.pageX,s=this.currentPage.pageY,0<e?n--:e<0&&n++,0<i?s--:i<0&&s++,void this.goToPage(n,s);n=this.x+d.round(this.hasHorizontalScroll?e:0),s=this.y+d.round(this.hasVerticalScroll?i:0),this.directionX=0<e?-1:e<0?1:0,this.directionY=0<i?-1:i<0?1:0,0<n?n=0:n<this.maxScrollX&&(n=this.maxScrollX),0<s?s=0:s<this.maxScrollY&&(s=this.maxScrollY),this.scrollTo(n,s,0)}},_initSnap:function(){this.currentPage={},"string"==typeof this.options.snap&&(this.options.snap=this.scroller.querySelectorAll(this.options.snap)),this.on("refresh",function(){var t,e,i,n,s,o,r=0,a=0,l=0,c=this.options.snapStepX||this.wrapperWidth,h=this.options.snapStepY||this.wrapperHeight;if(this.pages=[],this.wrapperWidth&&this.wrapperHeight&&this.scrollerWidth&&this.scrollerHeight){if(!0===this.options.snap)for(i=d.round(c/2),n=d.round(h/2);l>-this.scrollerWidth;){for(this.pages[r]=[],s=t=0;s>-this.scrollerHeight;)this.pages[r][t]={x:d.max(l,this.maxScrollX),y:d.max(s,this.maxScrollY),width:c,height:h,cx:l-i,cy:s-n},s-=h,t++;l-=c,r++}else for(t=(o=this.options.snap).length,e=-1;r<t;r++)(0===r||o[r].offsetLeft<=o[r-1].offsetLeft)&&(a=0,e++),this.pages[a]||(this.pages[a]=[]),l=d.max(-o[r].offsetLeft,this.maxScrollX),s=d.max(-o[r].offsetTop,this.maxScrollY),i=l-d.round(o[r].offsetWidth/2),n=s-d.round(o[r].offsetHeight/2),this.pages[a][e]={x:l,y:s,width:o[r].offsetWidth,height:o[r].offsetHeight,cx:i,cy:n},l>this.maxScrollX&&a++;this.goToPage(this.currentPage.pageX||0,this.currentPage.pageY||0,0),this.options.snapThreshold%1==0?(this.snapThresholdX=this.options.snapThreshold,this.snapThresholdY=this.options.snapThreshold):(this.snapThresholdX=d.round(this.pages[this.currentPage.pageX][this.currentPage.pageY].width*this.options.snapThreshold),this.snapThresholdY=d.round(this.pages[this.currentPage.pageX][this.currentPage.pageY].height*this.options.snapThreshold))}}),this.on("flick",function(){var t=this.options.snapSpeed||d.max(d.max(d.min(d.abs(this.x-this.startX),1e3),d.min(d.abs(this.y-this.startY),1e3)),300);this.goToPage(this.currentPage.pageX+this.directionX,this.currentPage.pageY+this.directionY,t)})},_nearestSnap:function(t,e){if(!this.pages.length)return{x:0,y:0,pageX:0,pageY:0};var i=0,n=this.pages.length,s=0;if(d.abs(t-this.absStartX)<this.snapThresholdX&&d.abs(e-this.absStartY)<this.snapThresholdY)return this.currentPage;for(0<t?t=0:t<this.maxScrollX&&(t=this.maxScrollX),0<e?e=0:e<this.maxScrollY&&(e=this.maxScrollY);i<n;i++)if(t>=this.pages[i][0].cx){t=this.pages[i][0].x;break}for(n=this.pages[i].length;s<n;s++)if(e>=this.pages[0][s].cy){e=this.pages[0][s].y;break}return i==this.currentPage.pageX&&((i+=this.directionX)<0?i=0:i>=this.pages.length&&(i=this.pages.length-1),t=this.pages[i][0].x),s==this.currentPage.pageY&&((s+=this.directionY)<0?s=0:s>=this.pages[0].length&&(s=this.pages[0].length-1),e=this.pages[0][s].y),{x:t,y:e,pageX:i,pageY:s}},goToPage:function(t,e,i,n){n=n||this.options.bounceEasing,t>=this.pages.length?t=this.pages.length-1:t<0&&(t=0),e>=this.pages[t].length?e=this.pages[t].length-1:e<0&&(e=0);var s=this.pages[t][e].x,o=this.pages[t][e].y;i=void 0===i?this.options.snapSpeed||d.max(d.max(d.min(d.abs(s-this.x),1e3),d.min(d.abs(o-this.y),1e3)),300):i,this.currentPage={x:s,y:o,pageX:t,pageY:e},this.scrollTo(s,o,i,n)},next:function(t,e){var i=this.currentPage.pageX,n=this.currentPage.pageY;++i>=this.pages.length&&this.hasVerticalScroll&&(i=0,n++),this.goToPage(i,n,t,e)},prev:function(t,e){var i=this.currentPage.pageX,n=this.currentPage.pageY;--i<0&&this.hasVerticalScroll&&(i=0,n--),this.goToPage(i,n,t,e)},_initKeys:function(t){var e,i={pageUp:33,pageDown:34,end:35,home:36,left:37,up:38,right:39,down:40};if("object"==typeof this.options.keyBindings)for(e in this.options.keyBindings)"string"==typeof this.options.keyBindings[e]&&(this.options.keyBindings[e]=this.options.keyBindings[e].toUpperCase().charCodeAt(0));else this.options.keyBindings={};for(e in i)this.options.keyBindings[e]=this.options.keyBindings[e]||i[e];g.addEvent(r,"keydown",this),this.on("destroy",function(){g.removeEvent(r,"keydown",this)})},_key:function(t){if(this.enabled){var e,i=this.options.snap,n=i?this.currentPage.pageX:this.x,s=i?this.currentPage.pageY:this.y,o=g.getTime(),r=this.keyTime||0;switch(this.options.useTransition&&this.isInTransition&&(e=this.getComputedPosition(),this._translate(d.round(e.x),d.round(e.y)),this.isInTransition=!1),this.keyAcceleration=o-r<200?d.min(this.keyAcceleration+.25,50):0,t.keyCode){case this.options.keyBindings.pageUp:this.hasHorizontalScroll&&!this.hasVerticalScroll?n+=i?1:this.wrapperWidth:s+=i?1:this.wrapperHeight;break;case this.options.keyBindings.pageDown:this.hasHorizontalScroll&&!this.hasVerticalScroll?n-=i?1:this.wrapperWidth:s-=i?1:this.wrapperHeight;break;case this.options.keyBindings.end:n=i?this.pages.length-1:this.maxScrollX,s=i?this.pages[0].length-1:this.maxScrollY;break;case this.options.keyBindings.home:s=n=0;break;case this.options.keyBindings.left:n+=i?-1:5+this.keyAcceleration>>0;break;case this.options.keyBindings.up:s+=i?1:5+this.keyAcceleration>>0;break;case this.options.keyBindings.right:n-=i?-1:5+this.keyAcceleration>>0;break;case this.options.keyBindings.down:s-=i?1:5+this.keyAcceleration>>0;break;default:return}i?this.goToPage(n,s):(0<n?(n=0,this.keyAcceleration=0):n<this.maxScrollX&&(n=this.maxScrollX,this.keyAcceleration=0),0<s?(s=0,this.keyAcceleration=0):s<this.maxScrollY&&(s=this.maxScrollY,this.keyAcceleration=0),this.scrollTo(n,s,0),this.keyTime=o)}},_animate:function(o,r,a,l){var c=this,h=this.x,d=this.y,u=g.getTime(),p=u+a;this.isAnimating=!0,function t(){var e,i,n,s=g.getTime();if(p<=s)return c.isAnimating=!1,c._translate(o,r),void(c.resetPosition(c.options.bounceTime)||c._execEvent("scrollEnd"));n=l(s=(s-u)/a),e=(o-h)*n+h,i=(r-d)*n+d,c._translate(e,i),c.isAnimating&&f(t)}()},handleEvent:function(t){switch(t.type){case"touchstart":case"pointerdown":case"MSPointerDown":case"mousedown":this._start(t);break;case"touchmove":case"pointermove":case"MSPointerMove":case"mousemove":this._move(t);break;case"touchend":case"pointerup":case"MSPointerUp":case"mouseup":case"touchcancel":case"pointercancel":case"MSPointerCancel":case"mousecancel":this._end(t);break;case"orientationchange":case"resize":this._resize();break;case"transitionend":case"webkitTransitionEnd":case"oTransitionEnd":case"MSTransitionEnd":this._transitionEnd(t);break;case"wheel":case"DOMMouseScroll":case"mousewheel":this._wheel(t);break;case"keydown":this._key(t);break;case"click":this.enabled&&!t._constructed&&(t.preventDefault(),t.stopPropagation())}}},l.prototype={handleEvent:function(t){switch(t.type){case"touchstart":case"pointerdown":case"MSPointerDown":case"mousedown":this._start(t);break;case"touchmove":case"pointermove":case"MSPointerMove":case"mousemove":this._move(t);break;case"touchend":case"pointerup":case"MSPointerUp":case"mouseup":case"touchcancel":case"pointercancel":case"MSPointerCancel":case"mousecancel":this._end(t)}},destroy:function(){this.options.fadeScrollbars&&(clearTimeout(this.fadeTimeout),this.fadeTimeout=null),this.options.interactive&&(g.removeEvent(this.indicator,"touchstart",this),g.removeEvent(this.indicator,g.prefixPointerEvent("pointerdown"),this),g.removeEvent(this.indicator,"mousedown",this),g.removeEvent(r,"touchmove",this),g.removeEvent(r,g.prefixPointerEvent("pointermove"),this),g.removeEvent(r,"mousemove",this),g.removeEvent(r,"touchend",this),g.removeEvent(r,g.prefixPointerEvent("pointerup"),this),g.removeEvent(r,"mouseup",this)),this.options.defaultScrollbars&&this.wrapper.parentNode.removeChild(this.wrapper)},_start:function(t){var e=t.touches?t.touches[0]:t;t.preventDefault(),t.stopPropagation(),this.transitionTime(),this.initiated=!0,this.moved=!1,this.lastPointX=e.pageX,this.lastPointY=e.pageY,this.startTime=g.getTime(),this.options.disableTouch||g.addEvent(r,"touchmove",this),this.options.disablePointer||g.addEvent(r,g.prefixPointerEvent("pointermove"),this),this.options.disableMouse||g.addEvent(r,"mousemove",this),this.scroller._execEvent("beforeScrollStart")},_move:function(t){var e,i,n,s,o=t.touches?t.touches[0]:t;g.getTime(),this.moved||this.scroller._execEvent("scrollStart"),this.moved=!0,e=o.pageX-this.lastPointX,this.lastPointX=o.pageX,i=o.pageY-this.lastPointY,this.lastPointY=o.pageY,n=this.x+e,s=this.y+i,this._pos(n,s),t.preventDefault(),t.stopPropagation()},_end:function(t){if(this.initiated){if(this.initiated=!1,t.preventDefault(),t.stopPropagation(),g.removeEvent(r,"touchmove",this),g.removeEvent(r,g.prefixPointerEvent("pointermove"),this),g.removeEvent(r,"mousemove",this),this.scroller.options.snap){var e=this.scroller._nearestSnap(this.scroller.x,this.scroller.y),i=this.options.snapSpeed||d.max(d.max(d.min(d.abs(this.scroller.x-e.x),1e3),d.min(d.abs(this.scroller.y-e.y),1e3)),300);this.scroller.x==e.x&&this.scroller.y==e.y||(this.scroller.directionX=0,this.scroller.directionY=0,this.scroller.currentPage=e,this.scroller.scrollTo(e.x,e.y,i,this.scroller.options.bounceEasing))}this.moved&&this.scroller._execEvent("scrollEnd")}},transitionTime:function(t){t=t||0;var e=g.style.transitionDuration;if(e&&(this.indicatorStyle[e]=t+"ms",!t&&g.isBadAndroid)){this.indicatorStyle[e]="0.0001ms";var i=this;f(function(){"0.0001ms"===i.indicatorStyle[e]&&(i.indicatorStyle[e]="0s")})}},transitionTimingFunction:function(t){this.indicatorStyle[g.style.transitionTimingFunction]=t},refresh:function(){this.transitionTime(),this.options.listenX&&!this.options.listenY?this.indicatorStyle.display=this.scroller.hasHorizontalScroll?"block":"none":this.options.listenY&&!this.options.listenX?this.indicatorStyle.display=this.scroller.hasVerticalScroll?"block":"none":this.indicatorStyle.display=this.scroller.hasHorizontalScroll||this.scroller.hasVerticalScroll?"block":"none",this.scroller.hasHorizontalScroll&&this.scroller.hasVerticalScroll?(g.addClass(this.wrapper,"iScrollBothScrollbars"),g.removeClass(this.wrapper,"iScrollLoneScrollbar"),this.options.defaultScrollbars&&this.options.customStyle&&(this.options.listenX?this.wrapper.style.right="8px":this.wrapper.style.bottom="8px")):(g.removeClass(this.wrapper,"iScrollBothScrollbars"),g.addClass(this.wrapper,"iScrollLoneScrollbar"),this.options.defaultScrollbars&&this.options.customStyle&&(this.options.listenX?this.wrapper.style.right="2px":this.wrapper.style.bottom="2px")),this.wrapper.offsetHeight,this.options.listenX&&(this.wrapperWidth=this.wrapper.clientWidth,this.options.resize?(this.indicatorWidth=d.max(d.round(this.wrapperWidth*this.wrapperWidth/(this.scroller.scrollerWidth||this.wrapperWidth||1)),8),this.indicatorStyle.width=this.indicatorWidth+"px"):this.indicatorWidth=this.indicator.clientWidth,this.maxPosX=this.wrapperWidth-this.indicatorWidth,"clip"==this.options.shrink?(this.minBoundaryX=8-this.indicatorWidth,this.maxBoundaryX=this.wrapperWidth-8):(this.minBoundaryX=0,this.maxBoundaryX=this.maxPosX),this.sizeRatioX=this.options.speedRatioX||this.scroller.maxScrollX&&this.maxPosX/this.scroller.maxScrollX),this.options.listenY&&(this.wrapperHeight=this.wrapper.clientHeight,this.options.resize?(this.indicatorHeight=d.max(d.round(this.wrapperHeight*this.wrapperHeight/(this.scroller.scrollerHeight||this.wrapperHeight||1)),8),this.indicatorStyle.height=this.indicatorHeight+"px"):this.indicatorHeight=this.indicator.clientHeight,this.maxPosY=this.wrapperHeight-this.indicatorHeight,"clip"==this.options.shrink?(this.minBoundaryY=8-this.indicatorHeight,this.maxBoundaryY=this.wrapperHeight-8):(this.minBoundaryY=0,this.maxBoundaryY=this.maxPosY),this.maxPosY=this.wrapperHeight-this.indicatorHeight,this.sizeRatioY=this.options.speedRatioY||this.scroller.maxScrollY&&this.maxPosY/this.scroller.maxScrollY),this.updatePosition()},updatePosition:function(){var t=this.options.listenX&&d.round(this.sizeRatioX*this.scroller.x)||0,e=this.options.listenY&&d.round(this.sizeRatioY*this.scroller.y)||0;this.options.ignoreBoundaries||(t<this.minBoundaryX?("scale"==this.options.shrink&&(this.width=d.max(this.indicatorWidth+t,8),this.indicatorStyle.width=this.width+"px"),t=this.minBoundaryX):t>this.maxBoundaryX?t="scale"==this.options.shrink?(this.width=d.max(this.indicatorWidth-(t-this.maxPosX),8),this.indicatorStyle.width=this.width+"px",this.maxPosX+this.indicatorWidth-this.width):this.maxBoundaryX:"scale"==this.options.shrink&&this.width!=this.indicatorWidth&&(this.width=this.indicatorWidth,this.indicatorStyle.width=this.width+"px"),e<this.minBoundaryY?("scale"==this.options.shrink&&(this.height=d.max(this.indicatorHeight+3*e,8),this.indicatorStyle.height=this.height+"px"),e=this.minBoundaryY):e>this.maxBoundaryY?e="scale"==this.options.shrink?(this.height=d.max(this.indicatorHeight-3*(e-this.maxPosY),8),this.indicatorStyle.height=this.height+"px",this.maxPosY+this.indicatorHeight-this.height):this.maxBoundaryY:"scale"==this.options.shrink&&this.height!=this.indicatorHeight&&(this.height=this.indicatorHeight,this.indicatorStyle.height=this.height+"px")),this.x=t,this.y=e,this.scroller.options.useTransform?this.indicatorStyle[g.style.transform]="translate("+t+"px,"+e+"px)"+this.scroller.translateZ:(this.indicatorStyle.left=t+"px",this.indicatorStyle.top=e+"px")},_pos:function(t,e){t<0?t=0:t>this.maxPosX&&(t=this.maxPosX),e<0?e=0:e>this.maxPosY&&(e=this.maxPosY),t=this.options.listenX?d.round(t/this.sizeRatioX):this.scroller.x,e=this.options.listenY?d.round(e/this.sizeRatioY):this.scroller.y,this.scroller.scrollTo(t,e)},fade:function(t,e){if(!e||this.visible){clearTimeout(this.fadeTimeout),this.fadeTimeout=null;var i=t?250:500,n=t?0:300;t=t?"1":"0",this.wrapperStyle[g.style.transitionDuration]=i+"ms",this.fadeTimeout=setTimeout(function(t){this.wrapperStyle.opacity=t,this.visible=+t}.bind(this,t),n)}}},t.utils=g,"undefined"!=typeof module&&module.exports?module.exports=t:"function"==typeof define&&define.amd?(define(function(){return t}),void 0!==r&&(r.IScroll=t)):r.IScroll=t}(window,document,Math),function(l,c){l.fp_scrolloverflow=function(){l.IScroll||(l.IScroll=module.exports);var i="fp-scrollable",o="."+i,d=".fp-section",n=d+".active",u=".fp-tableCell";function s(){var h=this;function i(){var e;fp_utils.hasClass(c.body,"fp-responsive")?(e=h.options.scrollOverflowHandler,n(function(t){fp_utils.hasClass(fp_utils.closest(t,d),"fp-auto-height-responsive")&&e.remove(t)})):n(t)}function t(t){if(!fp_utils.hasClass(t,"fp-noscroll")){fp_utils.css(t,{overflow:"hidden"});var e,i,n=h.options.scrollOverflowHandler,s=n.wrapContent(),o=fp_utils.closest(t,d),r=n.scrollable(t),a=null!=(i=fp_utils.closest(o,d))?parseInt(getComputedStyle(i)["padding-bottom"])+parseInt(getComputedStyle(i)["padding-top"]):0;null!=r?e=n.scrollHeight(t):(e=t.scrollHeight,h.options.verticalCentered&&(e=p(u,t)[0].scrollHeight));var l=fp_utils.getWindowHeight(),c=l-a;l<e+a?null!=r?n.update(t,c):(h.options.verticalCentered?(fp_utils.wrapInner(p(u,t)[0],s.scroller),fp_utils.wrapInner(p(u,t)[0],s.scrollable)):(fp_utils.wrapInner(t,s.scroller),fp_utils.wrapInner(t,s.scrollable)),n.create(t,c,h.iscrollOptions)):n.remove(t),fp_utils.css(t,{overflow:""})}}function n(i){p(d).forEach(function(t){var e=p(".fp-slide",t);e.length?e.forEach(function(t){i(t)}):i(t)})}h.options=null,h.init=function(t,e){return h.options=t,h.iscrollOptions=e,"complete"===c.readyState&&(i(),fullpage_api.shared.afterRenderActions()),l.addEventListener("load",function(){i(),fullpage_api.shared.afterRenderActions()}),h},h.createScrollBarForAll=i,h.createScrollBar=t}IScroll.prototype.wheelOn=function(){this.wrapper.addEventListener("wheel",this),this.wrapper.addEventListener("mousewheel",this),this.wrapper.addEventListener("DOMMouseScroll",this)},IScroll.prototype.wheelOff=function(){this.wrapper.removeEventListener("wheel",this),this.wrapper.removeEventListener("mousewheel",this),this.wrapper.removeEventListener("DOMMouseScroll",this)};var p=null,r=null,a={refreshId:null,iScrollInstances:[],lastScrollY:null,hasBeenInit:!1,iscrollOptions:{scrollbars:!0,mouseWheel:!0,hideScrollbars:!1,fadeScrollbars:!1,disableMouse:!0,interactiveScrollbars:!0},init:function(t){p=fp_utils.$,r=t;var e="ontouchstart"in l||0<navigator.msMaxTouchPoints||navigator.maxTouchPoints;return a.iscrollOptions.click=e,a.hasBeenInit=!0,a.iscrollOptions=fp_utils.deepExtend(a.iscrollOptions,t.scrollOverflowOptions),(new s).init(t,a.iscrollOptions)},toggleWheel:function(i){p(o,p(n)[0]).forEach(function(t){var e=t.fp_iscrollInstance;null!=e&&(i?e.wheelOn():e.wheelOff())})},setIscroll:function(t,e){if(a.hasBeenInit){var i=fp_utils.closest(t,o)||p(o,t)[0],n=e?"enable":"disable";i&&i.fp_iscrollInstance[n]()}},onLeave:function(){a.toggleWheel(!1)},beforeLeave:function(){a.onLeave()},afterLoad:function(){a.toggleWheel(!0)},create:function(i,n,s){p(o,i).forEach(function(t){fp_utils.css(t,{height:n+"px"});var e=t.fp_iscrollInstance;null!=e&&a.iScrollInstances.forEach(function(t){t.destroy()}),e=new IScroll(t,s),a.iScrollInstances.push(e),fp_utils.hasClass(fp_utils.closest(i,d),"active")||e.wheelOff(),t.fp_iscrollInstance=e})},isScrolled:function(t,e){var i=e.fp_iscrollInstance;return!i||("top"===t?0<=i.y&&!fp_utils.getScrollTop(e):"bottom"===t?0-i.y+fp_utils.getScrollTop(e)+e.offsetHeight>=e.scrollHeight:void 0)},scrollable:function(t){return p(".fp-slides",t).length?p(o,p(".fp-slide.active",t)[0])[0]:p(o,t)[0]},scrollHeight:function(t){return p(".fp-scroller",p(o,t)[0])[0].scrollHeight},remove:function(t){if(null!=t){var e=p(o,t)[0];if(null!=e){var i=e.fp_iscrollInstance;null!=i&&i.destroy(),e.fp_iscrollInstance=null,fp_utils.unwrap(p(".fp-scroller",t)[0]),fp_utils.unwrap(p(o,t)[0])}}},update:function(t,e){clearTimeout(a.refreshId),a.refreshId=setTimeout(function(){a.iScrollInstances.forEach(function(t){t.refresh(),fullpage_api.silentMoveTo(fp_utils.index(p(n)[0])+1)})},150),fp_utils.css(p(o,t)[0],{height:e+"px"}),r.verticalCentered&&fp_utils.css(p(o,t)[0].parentNode,{height:e+"px"})},wrapContent:function(){var t=c.createElement("div");t.className=i;var e=c.createElement("div");return e.className="fp-scroller",{scrollable:t,scroller:e}}};return{iscrollHandler:a}}()}(window,document),function(t,e,i,n){"function"==typeof define&&define.amd?define(function(){return t.fullpage=n(e,i),t.fullpage}):"object"==typeof exports?module.exports=n(e,i):e.fullpage=n(e,i)}(this,window,document,function(Me,Ie){"use strict";var He="fullpage-wrapper",De="."+He,Oe="fp-responsive",Xe="fp-notransition",Ye="fp-destroyed",Be="fp-enabled",Re="fp-viewing",Fe="active",We="."+Fe,je="fp-completely",Ne="fp-section",qe="."+Ne,Ve=qe+We,Ue="fp-tableCell",Ze="."+Ue,Ke="#fp-nav",Qe="fp-slide",Ge="."+Qe,Je=Ge+We,ti="fp-slides",ei="."+ti,ii="fp-slidesContainer",ni="."+ii,si="fp-table",oi="fp-slidesNav",ri="."+oi,ai=ri+" a",li=".fp-controlArrow",ci=li+".fp-prev",hi=li+".fp-next";function di(t,e){Me.console&&Me.console[t]&&Me.console[t]("fullPage: "+e)}function ui(t,e){return(e=1<arguments.length?e:Ie)?e.querySelectorAll(t):null}function pi(t){t=t||{};for(var e=1,i=arguments.length;e<i;++e){var n=arguments[e];if(n)for(var s in n)n.hasOwnProperty(s)&&("[object Object]"!==Object.prototype.toString.call(n[s])?t[s]=n[s]:t[s]=pi(t[s],n[s]))}return t}function fi(t,e){return null!=t&&(t.classList?t.classList.contains(e):new RegExp("(^| )"+e+"( |$)","gi").test(t.className))}function gi(){return"innerHeight"in Me?Me.innerHeight:Ie.documentElement.offsetHeight}function mi(){return Me.innerWidth}function vi(t,e){var i;for(i in t=r(t),e)if(e.hasOwnProperty(i)&&null!==i)for(var n=0;n<t.length;n++)t[n].style[i]=e[i];return t}function i(t,e,i){for(var n=t[i];n&&!Bi(n,e);)n=n[i];return n}function yi(t,e){return i(t,e,"previousElementSibling")}function bi(t,e){return i(t,e,"nextElementSibling")}function wi(t){return t.previousElementSibling}function xi(t){return t.nextElementSibling}function Si(t){return t[t.length-1]}function _i(t,e){t=o(t)?t[0]:t;for(var i=null!=e?ui(e,t.parentNode):t.parentNode.childNodes,n=0,s=0;s<i.length;s++){if(i[s]==t)return n;1==i[s].nodeType&&n++}return-1}function r(t){return o(t)?t:[t]}function Ti(t){t=r(t);for(var e=0;e<t.length;e++)t[e].style.display="none";return t}function Ei(t){t=r(t);for(var e=0;e<t.length;e++)t[e].style.display="block";return t}function o(t){return"[object Array]"===Object.prototype.toString.call(t)||"[object NodeList]"===Object.prototype.toString.call(t)}function Ci(t,e){t=r(t);for(var i=0;i<t.length;i++){var n=t[i];n.classList?n.classList.add(e):n.className+=" "+e}return t}function $i(t,e){t=r(t);for(var i=e.split(" "),n=0;n<i.length;n++){e=i[n];for(var s=0;s<t.length;s++){var o=t[s];o.classList?o.classList.remove(e):o.className=o.className.replace(new RegExp("(^|\\b)"+e.split(" ").join("|")+"(\\b|$)","gi")," ")}}return t}function Pi(t,e){e.appendChild(t)}function n(t,e,i){var n;e=e||Ie.createElement("div");for(var s=0;s<t.length;s++){var o=t[s];(!i||s)&&i||(n=e.cloneNode(!0),o.parentNode.insertBefore(n,o)),n.appendChild(o)}return t}function ki(t,e){n(t,e,!0)}function Li(t,e){for("string"==typeof e&&(e=Fi(e)),t.appendChild(e);t.firstChild!==e;)e.appendChild(t.firstChild)}function zi(t){for(var e=Ie.createDocumentFragment();t.firstChild;)e.appendChild(t.firstChild);t.parentNode.replaceChild(e,t)}function Ai(t,e){return t&&1===t.nodeType?Bi(t,e)?t:Ai(t.parentNode,e):null}function Mi(t,e){s(t,t.nextSibling,e)}function Ii(t,e){s(t,t,e)}function s(t,e,i){o(i)||("string"==typeof i&&(i=Fi(i)),i=[i]);for(var n=0;n<i.length;n++)t.parentNode.insertBefore(i[n],e)}function Hi(){var t=Ie.documentElement;return(Me.pageYOffset||t.scrollTop)-(t.clientTop||0)}function Di(e){return Array.prototype.filter.call(e.parentNode.children,function(t){return t!==e})}function Oi(t){t.preventDefault?t.preventDefault():t.returnValue=!1}function Xi(t){if("function"==typeof t)return!0;var e=Object.prototype.toString(t);return"[object Function]"===e||"[object GeneratorFunction]"===e}function Yi(t,e,i){var n;i=void 0===i?{}:i,"function"==typeof Me.CustomEvent?n=new CustomEvent(e,{detail:i}):(n=Ie.createEvent("CustomEvent")).initCustomEvent(e,!0,!0,i),t.dispatchEvent(n)}function Bi(t,e){return(t.matches||t.matchesSelector||t.msMatchesSelector||t.mozMatchesSelector||t.webkitMatchesSelector||t.oMatchesSelector).call(t,e)}function Ri(t,e){if("boolean"==typeof e)for(var i=0;i<t.length;i++)t[i].style.display=e?"block":"none";return t}function Fi(t){var e=Ie.createElement("div");return e.innerHTML=t.trim(),e.firstChild}function Wi(t){t=r(t);for(var e=0;e<t.length;e++){var i=t[e];i&&i.parentElement&&i.parentNode.removeChild(i)}}function a(t,e,i){for(var n=t[i],s=[];n;)!Bi(n,e)&&null!=e||s.push(n),n=n[i];return s}function ji(t,e){return a(t,e,"nextElementSibling")}function Ni(t,e){return a(t,e,"previousElementSibling")}return Me.NodeList&&!NodeList.prototype.forEach&&(NodeList.prototype.forEach=function(t,e){e=e||Me;for(var i=0;i<this.length;i++)t.call(e,this[i],i,this)}),Me.fp_utils={$:ui,deepExtend:pi,hasClass:fi,getWindowHeight:gi,css:vi,until:i,prevUntil:yi,nextUntil:bi,prev:wi,next:xi,last:Si,index:_i,getList:r,hide:Ti,show:Ei,isArrayOrList:o,addClass:Ci,removeClass:$i,appendTo:Pi,wrap:n,wrapAll:ki,wrapInner:Li,unwrap:zi,closest:Ai,after:Mi,before:Ii,insertBefore:s,getScrollTop:Hi,siblings:Di,preventDefault:Oi,isFunction:Xi,trigger:Yi,matches:Bi,toggle:Ri,createElementFromHTML:Fi,remove:Wi,filter:function(t,e){Array.prototype.filter.call(t,e)},untilAll:a,nextAll:ji,prevAll:Ni,showError:di},function(t,x){var i=x&&new RegExp("([\\d\\w]{8}-){3}[\\d\\w]{8}|^(?=.*?[A-Y])(?=.*?[a-y])(?=.*?[0-8])(?=.*?[#?!@$%^&*-]).{8,}$").test(x.licenseKey)||-1<Ie.domain.indexOf("alvarotrigo.com"),s=ui("html, body"),c=ui("html")[0],S=ui("body")[0];if(!fi(c,Be)){var f={};x=pi({menu:!1,anchors:[],lockAnchors:!1,navigation:!1,navigationPosition:"right",navigationTooltips:[],showActiveTooltip:!1,slidesNavigation:!1,slidesNavPosition:"bottom",scrollBar:!1,hybrid:!1,css3:!0,scrollingSpeed:700,autoScrolling:!0,fitToSection:!0,fitToSectionDelay:1e3,easing:"easeInOutCubic",easingcss3:"ease",loopBottom:!1,loopTop:!1,loopHorizontal:!0,continuousVertical:!1,continuousHorizontal:!1,scrollHorizontally:!1,interlockedSlides:!1,dragAndMove:!1,offsetSections:!1,resetSliders:!1,fadingEffect:!1,normalScrollElements:null,scrollOverflow:!1,scrollOverflowReset:!1,scrollOverflowHandler:Me.fp_scrolloverflow?Me.fp_scrolloverflow.iscrollHandler:null,scrollOverflowOptions:null,touchSensitivity:5,touchWrapper:"string"==typeof t?ui(t)[0]:t,bigSectionsDestination:null,keyboardScrolling:!0,animateAnchor:!0,recordHistory:!0,controlArrows:!0,controlArrowColor:"#fff",verticalCentered:!0,sectionsColor:[],paddingTop:0,paddingBottom:0,fixedElements:null,responsive:0,responsiveWidth:0,responsiveHeight:0,responsiveSlides:!1,parallax:!1,parallaxOptions:{type:"reveal",percentage:62,property:"translate"},cards:!1,cardsOptions:{perspective:100,fadeContent:!0,fadeBackground:!0},sectionSelector:".section",slideSelector:".slide",v2compatible:!1,afterLoad:null,onLeave:null,afterRender:null,afterResize:null,afterReBuild:null,afterSlideLoad:null,onSlideLeave:null,afterResponsive:null,lazyLoading:!0},x);var _,o,g,h,a=!1,n=navigator.userAgent.match(/(iPhone|iPod|iPad|Android|playbook|silk|BlackBerry|BB10|Windows Phone|Tizen|Bada|webOS|IEMobile|Opera Mini)/),r="ontouchstart"in Me||0<navigator.msMaxTouchPoints||navigator.maxTouchPoints,d="string"==typeof t?ui(t)[0]:t,T=gi(),l=mi(),m=!1,e=!0,E=!0,u=[],v={m:{up:!0,down:!0,left:!0,right:!0}};v.k=pi({},v.m);var p,y,b,w,C,$,P,k,L,z=Me.PointerEvent?{down:"pointerdown",move:"pointermove"}:{down:"MSPointerDown",move:"MSPointerMove"},A={touchmove:"ontouchmove"in Me?"touchmove":z.move,touchstart:"ontouchstart"in Me?"touchstart":z.down},M='a[href], area[href], input:not([disabled]), select:not([disabled]), textarea:not([disabled]), button:not([disabled]), iframe, object, embed, [tabindex="0"], [contenteditable]',I=!1;try{var H=Object.defineProperty({},"passive",{get:function(){I=!0}});Me.addEventListener("testPassive",null,H),Me.removeEventListener("testPassive",null,H)}catch(t){}var D,O,X=pi({},x),Y=!1,B=!0,R=["parallax","scrollOverflowReset","dragAndMove","offsetSections","fadingEffect","responsiveSlides","continuousHorizontal","interlockedSlides","scrollHorizontally","resetSliders","cards"];$e(),Me.fp_easings=pi(Me.fp_easings,{easeInOutCubic:function(t,e,i,n){return(t/=n/2)<1?i/2*t*t*t+e:i/2*((t-=2)*t*t+2)+e}}),d&&(f.version="3.0.8",f.setAutoScrolling=G,f.setRecordHistory=J,f.setScrollingSpeed=tt,f.setFitToSection=et,f.setLockAnchors=function(t){x.lockAnchors=t},f.setMouseWheelScrolling=it,f.setAllowScrolling=nt,f.setKeyboardScrolling=ot,f.moveSectionUp=rt,f.moveSectionDown=at,f.silentMoveTo=lt,f.moveTo=ct,f.moveSlideRight=ht,f.moveSlideLeft=dt,f.fitToSection=_t,f.reBuild=ut,f.setResponsive=ft,f.getFullpageData=function(){return x},f.destroy=function(t){G(!1,"internal"),nt(!0),st(!1),ot(!1),Ci(d,Ye),[C,w,y,$,P,L,b].forEach(function(t){clearTimeout(t)}),Me.removeEventListener("scroll",St),Me.removeEventListener("hashchange",Ut),Me.removeEventListener("resize",se),Ie.removeEventListener("keydown",Kt),Ie.removeEventListener("keyup",Qt),["click","touchstart"].forEach(function(t){Ie.removeEventListener(t,gt)}),["mouseenter","touchstart","mouseleave","touchend"].forEach(function(t){Ie.removeEventListener(t,vt,!0)}),t&&(_e(0),ui("img[data-src], source[data-src], audio[data-src], iframe[data-src]",d).forEach(function(t){Yt(t,"src")}),ui("img[data-srcset]").forEach(function(t){Yt(t,"srcset")}),Wi(ui(Ke+", "+ri+", "+li)),vi(ui(qe),{height:"","background-color":"",padding:""}),vi(ui(Ge),{width:""}),vi(d,{height:"",position:"","-ms-touch-action":"","touch-action":""}),vi(s,{overflow:"",height:""}),$i(c,Be),$i(S,Oe),S.className.split(/\s+/).forEach(function(t){0===t.indexOf(Re)&&$i(S,t)}),ui(qe+", "+Ge).forEach(function(t){x.scrollOverflowHandler&&x.scrollOverflow&&x.scrollOverflowHandler.remove(t),$i(t,si+" "+Fe+" "+je),t.getAttribute("data-fp-styles")&&t.setAttribute("style",t.getAttribute("data-fp-styles")),fi(t,Ne)&&!Y&&t.removeAttribute("data-anchor")}),le(d),[Ze,ni,ei].forEach(function(t){ui(t,d).forEach(function(t){zi(t)})}),vi(d,{"-webkit-transition":"none",transition:"none"}),Me.scrollTo(0,0),[Ne,Qe,ii].forEach(function(t){$i(ui("."+t),t)}))},f.getActiveSection=function(){return new ze(ui(Ve)[0])},f.getActiveSlide=function(){return Dt(ui(Je,ui(Ve)[0])[0])},f.test={top:"0px",translate3d:"translate3d(0px, 0px, 0px)",translate3dH:function(){for(var t=[],e=0;e<ui(x.sectionSelector,d).length;e++)t.push("translate3d(0px, 0px, 0px)");return t}(),left:function(){for(var t=[],e=0;e<ui(x.sectionSelector,d).length;e++)t.push(0);return t}(),options:x,setAutoScrolling:G},f.shared={afterRenderActions:xt,isNormalScrollElement:!1},Me.fullpage_api=f,x.$&&Object.keys(f).forEach(function(t){x.$.fn.fullpage[t]=f[t]}),x.css3&&(x.css3=function(){var t,e=Ie.createElement("p"),i={webkitTransform:"-webkit-transform",OTransform:"-o-transform",msTransform:"-ms-transform",MozTransform:"-moz-transform",transform:"transform"};for(var n in e.style.display="block",Ie.body.insertBefore(e,null),i)void 0!==e.style[n]&&(e.style[n]="translate3d(1px,1px,1px)",t=Me.getComputedStyle(e).getPropertyValue(i[n]));return Ie.body.removeChild(e),void 0!==t&&0<t.length&&"none"!==t}()),x.scrollBar=x.scrollBar||x.hybrid,function(){if(!x.anchors.length){var t="[data-anchor]",e=ui(x.sectionSelector.split(",").join(t+",")+t,d);e.length&&(Y=!0,e.forEach(function(t){x.anchors.push(t.getAttribute("data-anchor").toString())}))}if(!x.navigationTooltips.length){var i="[data-tooltip]",n=ui(x.sectionSelector.split(",").join(i+",")+i,d);n.length&&n.forEach(function(t){x.navigationTooltips.push(t.getAttribute("data-tooltip").toString())})}}(),function(){vi(d,{height:"100%",position:"relative"}),Ci(d,He),Ci(c,Be),T=gi(),$i(d,Ye),Ci(ui(x.sectionSelector,d),Ne),Ci(ui(x.slideSelector,d),Qe);for(var t=ui(qe),e=0;e<t.length;e++){var i=e,n=t[e],s=ui(Ge,n),o=s.length;n.setAttribute("data-fp-styles",n.getAttribute("style")),a=n,(l=i)||null!=ui(Ve)[0]||Ci(a,Fe),h=ui(Ve)[0],vi(a,{height:T+"px"}),x.paddingTop&&vi(a,{"padding-top":x.paddingTop}),x.paddingBottom&&vi(a,{"padding-bottom":x.paddingBottom}),void 0!==x.sectionsColor[l]&&vi(a,{"background-color":x.sectionsColor[l]}),void 0!==x.anchors[l]&&a.setAttribute("data-anchor",x.anchors[l]),r=i,void 0!==x.anchors[r]&&fi(n,Fe)&&ce(x.anchors[r],r),x.menu&&x.css3&&null!=Ai(ui(x.menu)[0],De)&&ui(x.menu).forEach(function(t){S.appendChild(t)}),0<o?bt(n,s,o):x.verticalCentered&&de(n)}var r,a,l;x.fixedElements&&x.css3&&ui(x.fixedElements).forEach(function(t){S.appendChild(t)}),x.navigation&&function(){var t=Ie.createElement("div");t.setAttribute("id","fp-nav");var e=Ie.createElement("ul");t.appendChild(e),Pi(t,S);var i=ui(Ke)[0];Ci(i,"fp-"+x.navigationPosition),x.showActiveTooltip&&Ci(i,"fp-show-active");for(var n="",s=0;s<ui(qe).length;s++){var o="";x.anchors.length&&(o=x.anchors[s]),n+='<li><a href="#'+o+'"><span class="fp-sr-only">'+wt(s,"Section")+"</span><span></span></a>";var r=x.navigationTooltips[s];void 0!==r&&""!==r&&(n+='<div class="fp-tooltip fp-'+x.navigationPosition+'">'+r+"</div>"),n+="</li>"}ui("ul",i)[0].innerHTML=n,vi(ui(Ke),{"margin-top":"-"+ui(Ke)[0].offsetHeight/2+"px"}),Ci(ui("a",ui("li",ui(Ke)[0])[_i(ui(Ve)[0],qe)]),Fe)}(),ui('iframe[src*="youtube.com/embed/"]',d).forEach(function(t){var e,i;i=(e=t).getAttribute("src"),e.setAttribute("src",i+(/\?/.test(i)?"&":"?")+"enablejsapi=1")}),x.scrollOverflow&&(p=x.scrollOverflowHandler.init(x))}(),nt(!0),st(!0),G(x.autoScrolling,"internal"),re(),we(),"complete"===Ie.readyState&&Vt(),Me.addEventListener("load",Vt),x.scrollOverflow||xt(),function(){for(var t=1;t<4;t++)L=setTimeout(yt,350*t)}(),Me.addEventListener("scroll",St),Me.addEventListener("hashchange",Ut),Me.addEventListener("blur",function(){g=e=!1}),Me.addEventListener("resize",se),Ie.addEventListener("keydown",Kt),Ie.addEventListener("keyup",Qt),["click","touchstart"].forEach(function(t){Ie.addEventListener(t,gt)}),x.normalScrollElements&&(["mouseenter","touchstart"].forEach(function(t){mt(t,!1)}),["mouseleave","touchend"].forEach(function(t){mt(t,!0)})));var F=!1,W=0,j=0,N=0,q=0,V=0,U=(new Date).getTime(),Z=0,K=0,Q=T;return f}function G(t,e){t||_e(0),Ce("autoScrolling",t,e);var i=ui(Ve)[0];if(x.autoScrolling&&!x.scrollBar)vi(s,{overflow:"hidden",height:"100%"}),J(X.recordHistory,"internal"),vi(d,{"-ms-touch-action":"none","touch-action":"none"}),null!=i&&_e(i.offsetTop);else if(vi(s,{overflow:"visible",height:"initial"}),J(!!x.autoScrolling&&X.recordHistory,"internal"),vi(d,{"-ms-touch-action":"","touch-action":""}),null!=i){var n=Ot(i.offsetTop);n.element.scrollTo(0,n.options)}}function J(t,e){Ce("recordHistory",t,e)}function tt(t,e){Ce("scrollingSpeed",t,e)}function et(t,e){Ce("fitToSection",t,e)}function it(t){t?(function(){var t,e="";Me.addEventListener?t="addEventListener":(t="attachEvent",e="on");var i="onwheel"in Ie.createElement("div")?"wheel":void 0!==Ie.onmousewheel?"mousewheel":"DOMMouseScroll",n=!!I&&{passive:!1};"DOMMouseScroll"==i?Ie[t](e+"MozMousePixelScroll",Lt,n):Ie[t](e+i,Lt,n)}(),d.addEventListener("mousedown",Gt),d.addEventListener("mouseup",Jt)):(Ie.addEventListener?(Ie.removeEventListener("mousewheel",Lt,!1),Ie.removeEventListener("wheel",Lt,!1),Ie.removeEventListener("MozMousePixelScroll",Lt,!1)):Ie.detachEvent("onmousewheel",Lt),d.removeEventListener("mousedown",Gt),d.removeEventListener("mouseup",Jt))}function nt(e,t){void 0!==t?(t=t.replace(/ /g,"").split(",")).forEach(function(t){Ee(e,t,"m")}):Ee(e,"all","m")}function st(t){t?(it(!0),function(){if(n||r){x.autoScrolling&&(S.removeEventListener(A.touchmove,Et,{passive:!1}),S.addEventListener(A.touchmove,Et,{passive:!1}));var t=x.touchWrapper;t.removeEventListener(A.touchstart,Pt),t.removeEventListener(A.touchmove,Ct,{passive:!1}),t.addEventListener(A.touchstart,Pt),t.addEventListener(A.touchmove,Ct,{passive:!1})}}()):(it(!1),function(){if(n||r){x.autoScrolling&&(S.removeEventListener(A.touchmove,Ct,{passive:!1}),S.removeEventListener(A.touchmove,Et,{passive:!1}));var t=x.touchWrapper;t.removeEventListener(A.touchstart,Pt),t.removeEventListener(A.touchmove,Ct,{passive:!1})}}())}function ot(e,t){void 0!==t?(t=t.replace(/ /g,"").split(",")).forEach(function(t){Ee(e,t,"k")}):(Ee(e,"all","k"),x.keyboardScrolling=e)}function rt(){var t=yi(ui(Ve)[0],qe);t||!x.loopTop&&!x.continuousVertical||(t=Si(ui(qe))),null!=t&&Mt(t,null,!0)}function at(){var t=bi(ui(Ve)[0],qe);t||!x.loopBottom&&!x.continuousVertical||(t=ui(qe)[0]),null!=t&&Mt(t,null,!1)}function lt(t,e){tt(0,"internal"),ct(t,e),tt(X.scrollingSpeed,"internal")}function ct(t,e){var i=fe(t);void 0!==e?ge(t,e):null!=i&&Mt(i)}function ht(t){zt("right",t)}function dt(t){zt("left",t)}function ut(t){if(!fi(d,Ye)){m=!0,T=gi(),l=mi();for(var e=ui(qe),i=0;i<e.length;++i){var n=e[i],s=ui(ei,n)[0],o=ui(Ge,n);x.verticalCentered&&vi(ui(Ze,n),{height:ue(n)+"px"}),vi(n,{height:T+"px"}),1<o.length&&ie(s,ui(Je,s)[0])}x.scrollOverflow&&p.createScrollBarForAll();var r=_i(ui(Ve)[0],qe);r&&lt(r+1),m=!1,Xi(x.afterResize)&&t&&x.afterResize.call(d,Me.innerWidth,Me.innerHeight),Xi(x.afterReBuild)&&!t&&x.afterReBuild.call(d)}}function pt(){return fi(S,Oe)}function ft(t){var e=pt();t?e||(G(!1,"internal"),et(!1,"internal"),Ti(ui(Ke)),Ci(S,Oe),Xi(x.afterResponsive)&&x.afterResponsive.call(d,t),x.scrollOverflow&&p.createScrollBarForAll()):e&&(G(X.autoScrolling,"internal"),et(X.autoScrolling,"internal"),Ei(ui(Ke)),$i(S,Oe),Xi(x.afterResponsive)&&x.afterResponsive.call(d,t))}function gt(t){var e=t.target;e&&Ai(e,Ke+" a")?function(t){Oi(t);var e=_i(Ai(this,Ke+" li"));Mt(ui(qe)[e])}.call(e,t):Bi(e,".fp-tooltip")?function(){Yi(wi(this),"click")}.call(e):Bi(e,li)?function(){var t=Ai(this,qe);fi(this,"fp-prev")?v.m.left&&dt(t):v.m.right&&ht(t)}.call(e,t):Bi(e,ai)||null!=Ai(e,ai)?function(t){Oi(t);var e=ui(ei,Ai(this,qe))[0];ie(e,ui(Ge,e)[_i(Ai(this,"li"))])}.call(e,t):Ai(e,x.menu+" [data-menuanchor]")&&function(t){!ui(x.menu)[0]||!x.lockAnchors&&x.anchors.length||(Oi(t),ct(this.getAttribute("data-menuanchor")))}.call(e,t)}function mt(t,e){Ie["fp_"+t]=e,Ie.addEventListener(t,vt,!0)}function vt(t){var e=t.type,n=!1,s=x.scrollOverflow,o="mouseleave"===e?t.toElement||t.relatedTarget:t.target;if(o==Ie||!o)return st(!0),void(s&&x.scrollOverflowHandler.setIscroll(o,!0));"touchend"===e&&(B=!1,setTimeout(function(){B=!0},800)),"mouseenter"===e&&!B||(x.normalScrollElements.split(",").forEach(function(t){if(!n){var e=Bi(o,t),i=Ai(o,t);(e||i)&&(f.shared.isNormalScrollElement||(st(!1),s&&x.scrollOverflowHandler.setIscroll(o,!1)),f.shared.isNormalScrollElement=!0,n=!0)}}),!n&&f.shared.isNormalScrollElement&&(st(!0),s&&x.scrollOverflowHandler.setIscroll(o,!0),f.shared.isNormalScrollElement=!1))}function yt(){var t=gi(),e=mi();T===t&&l===e||(T=t,l=e,ut(!0))}function bt(t,e,i){var n=100*i,s=100/i,o=Ie.createElement("div");o.className=ti,ki(e,o);var r,a,l=Ie.createElement("div");l.className=ii,ki(e,l),vi(ui(ni,t),{width:n+"%"}),1<i&&(x.controlArrows&&(r=t,a=[Fi('<div class="fp-controlArrow fp-prev"></div>'),Fi('<div class="fp-controlArrow fp-next"></div>')],Mi(ui(ei,r)[0],a),"#fff"!==x.controlArrowColor&&(vi(ui(hi,r),{"border-color":"transparent transparent transparent "+x.controlArrowColor}),vi(ui(ci,r),{"border-color":"transparent "+x.controlArrowColor+" transparent transparent"})),x.loopHorizontal||Ti(ui(ci,r))),x.slidesNavigation&&function(t,e){Pi(Fi('<div class="'+oi+'"><ul></ul></div>'),t);var i=ui(ri,t)[0];Ci(i,"fp-"+x.slidesNavPosition);for(var n=0;n<e;n++)Pi(Fi('<li><a href="#"><span class="fp-sr-only">'+wt(n,"Slide")+"</span><span></span></a></li>"),ui("ul",i)[0]);vi(i,{"margin-left":"-"+i.innerWidth/2+"px"}),Ci(ui("a",ui("li",i)[0]),Fe)}(t,i)),e.forEach(function(t){vi(t,{width:s+"%"}),x.verticalCentered&&de(t)});var c=ui(Je,t)[0];null!=c&&(0!==_i(ui(Ve),qe)||0===_i(ui(Ve),qe)&&0!==_i(c))?Se(c,"internal"):Ci(e[0],Fe)}function wt(t,e){return x.navigationTooltips[t]||x.anchors[t]||e+" "+(t+1)}function xt(){var t,e,i=ui(Ve)[0];Ci(i,je),Rt(i),Bt(),Wt(i),x.scrollOverflow&&x.scrollOverflowHandler.afterLoad(),e=fe((t=Zt()).section),t.section&&e&&(void 0===e||_i(e)!==_i(h))||!Xi(x.afterLoad)||It("afterLoad",{activeSection:i,element:i,direction:null,anchorLink:i.getAttribute("data-anchor"),sectionIndex:_i(i,qe)}),Xi(x.afterRender)&&It("afterRender")}function St(){var t,e,i,n,s;if(!x.autoScrolling||x.scrollBar){var o=Hi(),r=(s=W<o?"down":"up",Z=W=o,s),a=0,l=o+gi()/2,c=S.offsetHeight-gi()===o,h=ui(qe);if(c)a=h.length-1;else if(o)for(var d=0;d<h.length;++d)h[d].offsetTop<=l&&(a=d);else a=0;if(e=r,n=(i=ui(Ve)[0].offsetTop)+gi(),("up"!=e?i<=Hi():n>=Hi()+gi())&&(fi(ui(Ve)[0],je)||(Ci(ui(Ve)[0],je),$i(Di(ui(Ve)[0]),je))),!fi(t=h[a],Fe)){F=!0;var u,p,f=ui(Ve)[0],g=_i(f,qe)+1,m=he(t),v=t.getAttribute("data-anchor"),y=_i(t,qe)+1,b=ui(Je,t)[0],w={activeSection:f,sectionIndex:y-1,anchorLink:v,element:t,leavingSection:g,direction:m};b&&(p=b.getAttribute("data-anchor"),u=_i(b)),E&&(Ci(t,Fe),$i(Di(t),Fe),Xi(x.onLeave)&&It("onLeave",w),Xi(x.afterLoad)&&It("afterLoad",w),Nt(f),Rt(t),Wt(t),ce(v,y-1),x.anchors.length&&(_=v),ve(u,p,v)),clearTimeout($),$=setTimeout(function(){F=!1},100)}x.fitToSection&&(clearTimeout(P),P=setTimeout(function(){x.fitToSection&&ui(Ve)[0].offsetHeight<=T&&_t()},x.fitToSectionDelay))}}function _t(){E&&(m=!0,Mt(ui(Ve)[0]),m=!1)}function Tt(t){if(v.m[t]){var e="down"===t?at:rt;if(x.scrollOverflow){var i=x.scrollOverflowHandler.scrollable(ui(Ve)[0]),n="down"===t?"bottom":"top";if(null!=i){if(!x.scrollOverflowHandler.isScrolled(n,i))return 1;e()}else e()}else e()}}function Et(t){x.autoScrolling&&$t(t)&&v.m.up&&Oi(t)}function Ct(t){var e=Ai(t.target,qe)||ui(Ve)[0];if($t(t)){x.autoScrolling&&Oi(t);var i=xe(t);q=i.y,V=i.x,ui(ei,e).length&&Math.abs(N-V)>Math.abs(j-q)?!a&&Math.abs(N-V)>mi()/100*x.touchSensitivity&&(V<N?v.m.right&&ht(e):v.m.left&&dt(e)):x.autoScrolling&&E&&Math.abs(j-q)>Me.innerHeight/100*x.touchSensitivity&&(q<j?Tt("down"):j<q&&Tt("up"))}}function $t(t){return void 0===t.pointerType||"mouse"!=t.pointerType}function Pt(t){if(x.fitToSection&&(D=!1),$t(t)){var e=xe(t);j=e.y,N=e.x}}function kt(t,e){for(var i=0,n=t.slice(Math.max(t.length-e,1)),s=0;s<n.length;s++)i+=n[s];return Math.ceil(i/e)}function Lt(t){var e=(new Date).getTime(),i=fi(ui(".fp-completely")[0],"fp-normal-scroll");if(!v.m.down&&!v.m.up)return Oi(t),!1;if(x.autoScrolling&&!g&&!i){var n=(t=t||Me.event).wheelDelta||-t.deltaY||-t.detail,s=Math.max(-1,Math.min(1,n)),o=void 0!==t.wheelDeltaX||void 0!==t.deltaX,r=Math.abs(t.wheelDeltaX)<Math.abs(t.wheelDelta)||Math.abs(t.deltaX)<Math.abs(t.deltaY)||!o;149<u.length&&u.shift(),u.push(Math.abs(n)),x.scrollBar&&Oi(t);var a=e-U;if(U=e,200<a&&(u=[]),E){var l=kt(u,10);kt(u,70)<=l&&r&&Tt(s<0?"down":"up")}return!1}x.fitToSection&&(D=!1)}function zt(t,e){var i=null==e?ui(Ve)[0]:e,n=ui(ei,i)[0];if(!(null==n||a||ui(Ge,n).length<2)){var s=ui(Je,n)[0],o=null;if(null==(o=("left"===t?yi:bi)(s,Ge))){if(!x.loopHorizontal)return;var r=Di(s);o="left"===t?r[r.length-1]:r[0]}a=!f.test.isTesting,ie(n,o,t)}}function At(){for(var t=ui(Je),e=0;e<t.length;e++)Se(t[e],"internal")}function Mt(t,e,i){if(null!=t){var n,s,o,r,a,l,c,h,d={element:t,callback:e,isMovementUp:i,dtop:(n=t.offsetHeight,s=t.offsetTop,r=Z<(o=s),a=o-T+n,l=x.bigSectionsDestination,T<n?(r||l)&&"bottom"!==l||(o=a):(r||m&&null==xi(t))&&(o=a),Z=o),yMovement:he(t),anchorLink:t.getAttribute("data-anchor"),sectionIndex:_i(t,qe),activeSlide:ui(Je,t)[0],activeSection:ui(Ve)[0],leavingSection:_i(ui(Ve),qe)+1,localIsResizing:m};if(!(d.activeSection==t&&!m||x.scrollBar&&Hi()===d.dtop&&!fi(t,"fp-auto-height"))){if(null!=d.activeSlide&&(c=d.activeSlide.getAttribute("data-anchor"),h=_i(d.activeSlide)),!d.localIsResizing){var u=d.yMovement;if(void 0!==i&&(u=i?"up":"down"),d.direction=u,Xi(x.onLeave)&&!1===It("onLeave",d))return}x.autoScrolling&&x.continuousVertical&&void 0!==d.isMovementUp&&(!d.isMovementUp&&"up"==d.yMovement||d.isMovementUp&&"down"==d.yMovement)&&((p=d).isMovementUp?Ii(ui(Ve)[0],ji(p.activeSection,qe)):Mi(ui(Ve)[0],Ni(p.activeSection,qe).reverse()),_e(ui(Ve)[0].offsetTop),At(),p.wrapAroundElements=p.activeSection,p.dtop=p.element.offsetTop,p.yMovement=he(p.element),d=p),d.localIsResizing||Nt(d.activeSection),x.scrollOverflow&&x.scrollOverflowHandler.beforeLeave(),Ci(t,Fe),$i(Di(t),Fe),Rt(t),x.scrollOverflow&&x.scrollOverflowHandler.onLeave(),E=f.test.isTesting,ve(h,c,d.anchorLink,d.sectionIndex),function(t){if(x.css3&&x.autoScrolling&&!x.scrollBar){pe("translate3d(0px, -"+Math.round(t.dtop)+"px, 0px)",!0),x.scrollingSpeed?(clearTimeout(w),w=setTimeout(function(){Xt(t)},x.scrollingSpeed)):Xt(t)}else{var e=Ot(t.dtop);f.test.top=-t.dtop+"px",Pe(e.element,e.options,x.scrollingSpeed,function(){x.scrollBar?setTimeout(function(){Xt(t)},30):Xt(t)})}}(d),_=d.anchorLink,ce(d.anchorLink,d.sectionIndex)}}var p}function It(t,e){var i,n,s,o=(n=e,(s=x.v2compatible?{afterRender:function(){return[d]},onLeave:function(){return[n.activeSection,n.leavingSection,n.sectionIndex+1,n.direction]},afterLoad:function(){return[n.element,n.anchorLink,n.sectionIndex+1]},afterSlideLoad:function(){return[n.destiny,n.anchorLink,n.sectionIndex+1,n.slideAnchor,n.slideIndex]},onSlideLeave:function(){return[n.prevSlide,n.anchorLink,n.sectionIndex+1,n.prevSlideIndex,n.direction,n.slideIndex]}}:{afterRender:function(){return{section:Ht(ui(Ve)[0]),slide:Dt(ui(Je,ui(Ve)[0])[0])}},onLeave:function(){return{origin:Ht(n.activeSection),destination:Ht(n.element),direction:n.direction}},afterLoad:function(){return s.onLeave()},afterSlideLoad:function(){return{section:Ht(n.section),origin:Dt(n.prevSlide),destination:Dt(n.destiny),direction:n.direction}},onSlideLeave:function(){return s.afterSlideLoad()}})[t]());if(x.v2compatible){if(!1===x[t].apply(o[0],o.slice(1)))return!1}else if(Yi(d,t,o),!1===x[t].apply(o[Object.keys(o)[0]],(i=o,Object.keys(i).map(function(t){return i[t]}))))return!1;return!0}function Ht(t){return t?new ze(t):null}function Dt(t){return t?new Ae(t):null}function Ot(t){var e={};return x.autoScrolling&&!x.scrollBar?(e.options=-t,e.element=ui(De)[0]):(e.options=t,e.element=Me),e}function Xt(t){var e;null!=(e=t).wrapAroundElements&&(e.isMovementUp?Ii(ui(qe)[0],e.wrapAroundElements):Mi(ui(qe)[ui(qe).length-1],e.wrapAroundElements),_e(ui(Ve)[0].offsetTop),At()),Xi(x.afterLoad)&&!t.localIsResizing&&It("afterLoad",t),x.scrollOverflow&&x.scrollOverflowHandler.afterLoad(),t.localIsResizing||Wt(t.element),Ci(t.element,je),$i(Di(t.element),je),Bt(),E=!0,Xi(t.callback)&&t.callback()}function Yt(t,e){t.setAttribute(e,t.getAttribute("data-"+e)),t.removeAttribute("data-"+e)}function Bt(){var t=ui(".fp-auto-height")[0]||pt()&&ui(".fp-auto-height-responsive")[0];x.lazyLoading&&t&&ui(qe+":not("+We+")").forEach(function(t){var e,i,n;i=(e=t.getBoundingClientRect()).top,n=e.bottom,(i+2<T&&0<i||2<n&&n<T)&&Rt(t)})}function Rt(n){x.lazyLoading&&ui("img[data-src], img[data-srcset], source[data-src], source[data-srcset], video[data-src], audio[data-src], iframe[data-src]",qt(n)).forEach(function(i){if(["src","srcset"].forEach(function(t){var e=i.getAttribute("data-"+t);null!=e&&e&&(Yt(i,t),i.addEventListener("load",function(){Ft(n)}))}),Bi(i,"source")){var t=Ai(i,"video, audio");t&&(t.load(),t.onloadeddata=function(){Ft(n)})}})}function Ft(t){x.scrollOverflow&&(clearTimeout(O),O=setTimeout(function(){p.createScrollBar(t)},200))}function Wt(t){var e=qt(t);ui("video, audio",e).forEach(function(t){t.hasAttribute("data-autoplay")&&"function"==typeof t.play&&t.play()}),ui('iframe[src*="youtube.com/embed/"]',e).forEach(function(t){t.hasAttribute("data-autoplay")&&jt(t),t.onload=function(){t.hasAttribute("data-autoplay")&&jt(t)}})}function jt(t){t.contentWindow.postMessage('{"event":"command","func":"playVideo","args":""}',"*")}function Nt(t){var e=qt(t);ui("video, audio",e).forEach(function(t){t.hasAttribute("data-keepplaying")||"function"!=typeof t.pause||t.pause()}),ui('iframe[src*="youtube.com/embed/"]',e).forEach(function(t){/youtube\.com\/embed\//.test(t.getAttribute("src"))&&!t.hasAttribute("data-keepplaying")&&t.contentWindow.postMessage('{"event":"command","func":"pauseVideo","args":""}',"*")})}function qt(t){var e=ui(Je,t);return e.length&&(t=e[0]),t}function Vt(){var t=Zt(),e=t.section,i=t.slide;e&&(x.animateAnchor?ge:lt)(e,i)}function Ut(){if(!F&&!x.lockAnchors){var t=Zt(),e=t.section,i=t.slide,n=void 0===_,s=void 0===_&&void 0===i&&!a;e&&e.length&&(e&&e!==_&&!n||s||!a&&o!=i)&&ge(e,i)}}function Zt(){var t,e,i=Me.location.hash;if(i.length){var n=i.replace("#","").split("/"),s=-1<i.indexOf("#/");t=s?"/"+n[1]:decodeURIComponent(n[0]);var o=s?n[2]:n[1];o&&o.length&&(e=decodeURIComponent(o))}return{section:t,slide:e}}function Kt(t){clearTimeout(k);var e,i,n,s,o,r,a,l,c,h,d=Ie.activeElement,u=t.keyCode;function p(t){return Oi(t),h[0]?h[0].focus():null}9===u?(l=(e=t).shiftKey,c=Ie.activeElement,h=te(qt(ui(Ve)[0])),i=e,s=(n=te(Ie)).indexOf(Ie.activeElement),r=Dt(Ai(o=n[i.shiftKey?s-1:s+1],Ge)),a=Ht(Ai(o,qe)),(r||a)&&(c?null==Ai(c,Ve+","+Ve+" "+Je)&&(c=p(e)):p(e),(!l&&c==h[h.length-1]||l&&c==h[0])&&Oi(e))):Bi(d,"textarea")||Bi(d,"input")||Bi(d,"select")||"true"===d.getAttribute("contentEditable")||""===d.getAttribute("contentEditable")||!x.keyboardScrolling||!x.autoScrolling||(-1<[40,38,32,33,34].indexOf(u)&&Oi(t),g=t.ctrlKey,k=setTimeout(function(){!function(t){var e=t.shiftKey,i=Ie.activeElement,n=Bi(i,"video")||Bi(i,"audio");if(E||!([37,39].indexOf(t.keyCode)<0))switch(t.keyCode){case 38:case 33:v.k.up&&rt();break;case 32:if(e&&v.k.up&&!n){rt();break}case 40:case 34:v.k.down&&(32===t.keyCode&&n||at());break;case 36:v.k.up&&ct(1);break;case 35:v.k.down&&ct(ui(qe).length);break;case 37:v.k.left&&dt();break;case 39:v.k.right&&ht()}}(t)},150))}function Qt(t){e&&(g=t.ctrlKey)}function Gt(t){2==t.which&&(K=t.pageY,d.addEventListener("mousemove",ee))}function Jt(t){2==t.which&&d.removeEventListener("mousemove",ee)}function te(t){return[].slice.call(ui(M,t)).filter(function(t){return"-1"!==t.getAttribute("tabindex")&&null!==t.offsetParent})}function ee(t){x.autoScrolling&&(E&&(t.pageY<K&&v.m.up?rt():t.pageY>K&&v.m.down&&at()),K=t.pageY)}function ie(t,e,i){var n,s,o=Ai(t,qe),r={slides:t,destiny:e,direction:i,destinyPos:{left:e.offsetLeft},slideIndex:_i(e),section:o,sectionIndex:_i(o,qe),anchorLink:o.getAttribute("data-anchor"),slidesNav:ui(ri,o)[0],slideAnchor:be(e),prevSlide:ui(Je,o)[0],prevSlideIndex:_i(ui(Je,o)[0]),localIsResizing:m};r.xMovement=(n=r.prevSlideIndex)==(s=r.slideIndex)?"none":s<n?"left":"right",r.direction=r.direction?r.direction:r.xMovement,r.localIsResizing||(E=!1),x.onSlideLeave&&!r.localIsResizing&&"none"!==r.xMovement&&Xi(x.onSlideLeave)&&!1===It("onSlideLeave",r)?a=!1:(Ci(e,Fe),$i(Di(e),Fe),r.localIsResizing||(Nt(r.prevSlide),Rt(e)),!x.loopHorizontal&&x.controlArrows&&(Ri(ui(ci,o),0!==r.slideIndex),Ri(ui(hi,o),null!=xi(e))),fi(o,Fe)&&!r.localIsResizing&&ve(r.slideIndex,r.slideAnchor,r.anchorLink,r.sectionIndex),function(t,e){var i=e.destinyPos;if(x.css3){var n="translate3d(-"+Math.round(i.left)+"px, 0px, 0px)";f.test.translate3dH[e.sectionIndex]=n,vi(ae(ui(ni,t)),Te(n)),C=setTimeout(function(){ne(e)},x.scrollingSpeed)}else f.test.left[e.sectionIndex]=Math.round(i.left),Pe(t,Math.round(i.left),x.scrollingSpeed,function(){ne(e)})}(t,r))}function ne(t){var e,i;e=t.slidesNav,i=t.slideIndex,x.slidesNavigation&&null!=e&&($i(ui(We,e),Fe),Ci(ui("a",ui("li",e)[i]),Fe)),t.localIsResizing||(Xi(x.afterSlideLoad)&&It("afterSlideLoad",t),E=!0,Wt(t.destiny)),a=!1}function se(){clearTimeout(y),y=setTimeout(function(){for(var t=0;t<4;t++)b=setTimeout(oe,200*t)},200)}function oe(){if(re(),n){var t=Ie.activeElement;if(!Bi(t,"textarea")&&!Bi(t,"input")&&!Bi(t,"select")){var e=gi();Math.abs(e-Q)>20*Math.max(Q,e)/100&&(ut(!0),Q=e)}}else yt()}function re(){var t=x.responsive||x.responsiveWidth,e=x.responsiveHeight,i=t&&Me.innerWidth<t,n=e&&Me.innerHeight<e;t&&e?ft(i||n):t?ft(i):e&&ft(n)}function ae(t){var e="all "+x.scrollingSpeed+"ms "+x.easingcss3;return $i(t,Xe),vi(t,{"-webkit-transition":e,transition:e})}function le(t){return Ci(t,Xe)}function ce(t,e){var i,n,s;i=t,ui(x.menu).forEach(function(t){x.menu&&null!=t&&($i(ui(We,t),Fe),Ci(ui('[data-menuanchor="'+i+'"]',t),Fe))}),n=t,s=e,x.navigation&&null!=ui(Ke)[0]&&($i(ui(We,ui(Ke)[0]),Fe),Ci(n?ui('a[href="#'+n+'"]',ui(Ke)[0]):ui("a",ui("li",ui(Ke)[0])[s]),Fe))}function he(t){var e=_i(ui(Ve)[0],qe),i=_i(t,qe);return e==i?"none":i<e?"up":"down"}function de(t){if(!fi(t,si)){var e=Ie.createElement("div");e.className=Ue,e.style.height=ue(t)+"px",Ci(t,si),Li(t,e)}}function ue(t){var e=T;if(x.paddingTop||x.paddingBottom){var i=t;fi(i,Ne)||(i=Ai(t,qe));var n=parseInt(getComputedStyle(i)["padding-top"])+parseInt(getComputedStyle(i)["padding-bottom"]);e=T-n}return e}function pe(t,e){(e?ae:le)(d),vi(d,Te(t)),f.test.translate3d=t,setTimeout(function(){$i(d,Xe)},10)}function fe(t){var e=ui(qe+'[data-anchor="'+t+'"]',d)[0];if(!e){var i=void 0!==t?t-1:0;e=ui(qe)[i]}return e}function ge(t,e){var i=fe(t);if(null!=i){var n,s,o,r=(null==(o=ui(Ge+'[data-anchor="'+(n=e)+'"]',s=i)[0])&&(n=void 0!==n?n:0,o=ui(Ge,s)[n]),o);be(i)===_||fi(i,Fe)?me(r):Mt(i,function(){me(r)})}}function me(t){null!=t&&ie(Ai(t,ei),t)}function ve(t,e,i){var n="";x.anchors.length&&!x.lockAnchors&&(t?(null!=i&&(n=i),null==e&&(e=t),ye(n+"/"+(o=e))):(null!=t&&(o=e),ye(i))),we()}function ye(t){if(x.recordHistory)location.hash=t;else if(n||r)Me.history.replaceState(void 0,void 0,"#"+t);else{var e=Me.location.href.split("#")[0];Me.location.replace(e+"#"+t)}}function be(t){if(!t)return null;var e=t.getAttribute("data-anchor"),i=_i(t);return null==e&&(e=i),e}function we(){var t=ui(Ve)[0],e=ui(Je,t)[0],i=be(t),n=be(e),s=String(i);e&&(s=s+"-"+n),s=s.replace("/","-").replace("#","");var o=new RegExp("\\b\\s?"+Re+"-[^\\s]+\\b","g");S.className=S.className.replace(o,""),Ci(S,Re+"-"+s)}function xe(t){var e=[];return e.y=void 0!==t.pageY&&(t.pageY||t.pageX)?t.pageY:t.touches[0].pageY,e.x=void 0!==t.pageX&&(t.pageY||t.pageX)?t.pageX:t.touches[0].pageX,r&&$t(t)&&x.scrollBar&&void 0!==t.touches&&(e.y=t.touches[0].pageY,e.x=t.touches[0].pageX),e}function Se(t,e){tt(0,"internal"),void 0!==e&&(m=!0),ie(Ai(t,ei),t),void 0!==e&&(m=!1),tt(X.scrollingSpeed,"internal")}function _e(t){var e=Math.round(t);if(x.css3&&x.autoScrolling&&!x.scrollBar)pe("translate3d(0px, -"+e+"px, 0px)",!1);else if(x.autoScrolling&&!x.scrollBar)vi(d,{top:-e+"px"}),f.test.top=-e+"px";else{var i=Ot(e);ke(i.element,i.options)}}function Te(t){return{"-webkit-transform":t,"-moz-transform":t,"-ms-transform":t,transform:t}}function Ee(e,t,i){"all"!==t?v[i][t]=e:Object.keys(v[i]).forEach(function(t){v[i][t]=e})}function Ce(t,e,i){x[t]=e,"internal"!==i&&(X[t]=e)}function $e(){var t=x.licenseKey,e="font-size: 15px;background:yellow;";i?t&&t.length<20&&(console.warn("%c This website was made using fullPage.js slider. More info on the following website:",e),console.warn("%c https://alvarotrigo.com/fullPage/",e)):(di("error","Fullpage.js version 3 has changed its license to GPLv3 and it requires a `licenseKey` option. Read about it here:"),di("error","https://github.com/alvarotrigo/fullPage.js#options.")),fi(c,Be)?di("error","Fullpage.js can only be initialized once and you are doing it multiple times!"):(x.continuousVertical&&(x.loopTop||x.loopBottom)&&(x.continuousVertical=!1,di("warn","Option `loopTop/loopBottom` is mutually exclusive with `continuousVertical`; `continuousVertical` disabled")),!x.scrollOverflow||!x.scrollBar&&x.autoScrolling||di("warn","Options scrollBar:true and autoScrolling:false are mutually exclusive with scrollOverflow:true. Sections with scrollOverflow might not work well in Firefox"),!x.continuousVertical||!x.scrollBar&&x.autoScrolling||(x.continuousVertical=!1,di("warn","Scroll bars (`scrollBar:true` or `autoScrolling:false`) are mutually exclusive with `continuousVertical`; `continuousVertical` disabled")),x.scrollOverflow&&null==x.scrollOverflowHandler&&(x.scrollOverflow=!1,di("error","The option `scrollOverflow:true` requires the file `scrolloverflow.min.js`. Please include it before fullPage.js.")),R.forEach(function(t){x[t]&&di("warn","fullpage.js extensions require fullpage.extensions.min.js file instead of the usual fullpage.js. Requested: "+t)}),x.anchors.forEach(function(e){var t=[].slice.call(ui("[name]")).filter(function(t){return t.getAttribute("name")&&t.getAttribute("name").toLowerCase()==e.toLowerCase()}),i=[].slice.call(ui("[id]")).filter(function(t){return t.getAttribute("id")&&t.getAttribute("id").toLowerCase()==e.toLowerCase()});if(i.length||t.length){di("error","data-anchor tags can not have the same value as any `id` element on the site (or `name` element for IE).");var n=i.length?"id":"name";(i.length||t.length)&&di("error",'"'+e+'" is is being used by another element `'+n+"` property")}}))}function Pe(e,i,n,s){var t,o=(t=e).self!=Me&&fi(t,ti)?t.scrollLeft:!x.autoScrolling||x.scrollBar?Hi():t.offsetTop,r=i-o,a=0;D=!0;var l=function(){if(D){var t=i;a+=20,n&&(t=Me.fp_easings[x.easing](a,o,r,n)),ke(e,t),a<n?setTimeout(l,20):void 0!==s&&s()}else a<n&&s()};l()}function ke(t,e){!x.autoScrolling||x.scrollBar||t.self!=Me&&fi(t,ti)?t.self!=Me&&fi(t,ti)?t.scrollLeft=e:t.scrollTo(0,e):t.style.top=e+"px"}function Le(t,e){this.anchor=t.getAttribute("data-anchor"),this.item=t,this.index=_i(t,e),this.isLast=this.index===t.parentElement.querySelectorAll(e).length-1,this.isFirst=!this.index}function ze(t){Le.call(this,t,qe)}function Ae(t){Le.call(this,t,Ge)}$e()}}),window.jQuery&&window.fullpage&&function(e,i){"use strict";e&&i?e.fn.fullpage=function(t){t=e.extend({},t,{$:e}),new i(this[0],t)}:window.fp_utils.showError("error","jQuery is required to use the jQuery fullpage adapter!")}(window.jQuery,window.fullpage);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
